0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/Cellar/node/0.10.17/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'update',
1 verbose cli   'handlebars',
1 verbose cli   '-g' ]
2 info using npm@1.3.8
3 info using node@v0.10.17
4 verbose cache add [ 'handlebars', '*' ]
5 verbose cache add name="handlebars" spec="*" args=["handlebars","*"]
6 verbose parsed url { protocol: null,
6 verbose parsed url   slashes: null,
6 verbose parsed url   auth: null,
6 verbose parsed url   host: null,
6 verbose parsed url   port: null,
6 verbose parsed url   hostname: null,
6 verbose parsed url   hash: null,
6 verbose parsed url   search: null,
6 verbose parsed url   query: null,
6 verbose parsed url   pathname: '*',
6 verbose parsed url   path: '*',
6 verbose parsed url   href: '*' }
7 verbose addNamed [ 'handlebars', '*' ]
8 verbose addNamed [ null, '*' ]
9 silly lockFile 9abb6f57-handlebars handlebars@*
10 verbose lock handlebars@* /Users/ironweber/.npm/9abb6f57-handlebars.lock
11 silly addNameRange { name: 'handlebars', range: '*', hasData: false }
12 verbose cache add [ 'handlebars', '~2.0.0' ]
13 verbose cache add name="handlebars" spec="~2.0.0" args=["handlebars","~2.0.0"]
14 verbose parsed url { protocol: null,
14 verbose parsed url   slashes: null,
14 verbose parsed url   auth: null,
14 verbose parsed url   host: null,
14 verbose parsed url   port: null,
14 verbose parsed url   hostname: null,
14 verbose parsed url   hash: null,
14 verbose parsed url   search: null,
14 verbose parsed url   query: null,
14 verbose parsed url   pathname: '~2.0.0',
14 verbose parsed url   path: '~2.0.0',
14 verbose parsed url   href: '~2.0.0' }
15 verbose addNamed [ 'handlebars', '~2.0.0' ]
16 verbose addNamed [ null, '>=2.0.0-0 <2.1.0-0' ]
17 silly lockFile 917ab67d-handlebars-2-0-0 handlebars@~2.0.0
18 verbose lock handlebars@~2.0.0 /Users/ironweber/.npm/917ab67d-handlebars-2-0-0.lock
19 verbose url raw handlebars
20 verbose url resolving [ 'https://registry.npmjs.org/', './handlebars' ]
21 verbose url resolved https://registry.npmjs.org/handlebars
22 info trying registry request attempt 1 at 16:57:11
23 verbose etag "CYIU9HARZPZMRQ7JH1VKVWQP8"
24 http GET https://registry.npmjs.org/handlebars
25 silly addNameRange { name: 'handlebars',
25 silly addNameRange   range: '>=2.0.0-0 <2.1.0-0',
25 silly addNameRange   hasData: false }
26 verbose url raw handlebars
27 verbose url resolving [ 'https://registry.npmjs.org/', './handlebars' ]
28 verbose url resolved https://registry.npmjs.org/handlebars
29 info trying registry request attempt 1 at 16:57:11
30 verbose etag "CYIU9HARZPZMRQ7JH1VKVWQP8"
31 http GET https://registry.npmjs.org/handlebars
32 http 304 https://registry.npmjs.org/handlebars
33 silly registry.get cb [ 304,
33 silly registry.get   { date: 'Sat, 04 Oct 2014 23:57:12 GMT',
33 silly registry.get     server: 'Apache',
33 silly registry.get     via: '1.1 varnish',
33 silly registry.get     'last-modified': 'Sat, 04 Oct 2014 23:56:02 GMT',
33 silly registry.get     'cache-control': 'max-age=60',
33 silly registry.get     etag: '"CYIU9HARZPZMRQ7JH1VKVWQP8"',
33 silly registry.get     'x-served-by': 'cache-sjc3130-SJC',
33 silly registry.get     'x-cache': 'HIT',
33 silly registry.get     'x-cache-hits': '3',
33 silly registry.get     'x-timer': 'S1412467032.278678,VS0,VE0',
33 silly registry.get     vary: 'Accept',
33 silly registry.get     'content-length': '0',
33 silly registry.get     'keep-alive': 'timeout=10, max=50',
33 silly registry.get     connection: 'Keep-Alive' } ]
34 verbose etag handlebars from cache
35 http 304 https://registry.npmjs.org/handlebars
36 silly registry.get cb [ 304,
36 silly registry.get   { date: 'Sat, 04 Oct 2014 23:57:12 GMT',
36 silly registry.get     server: 'Apache',
36 silly registry.get     via: '1.1 varnish',
36 silly registry.get     'last-modified': 'Sat, 04 Oct 2014 23:57:12 GMT',
36 silly registry.get     'cache-control': 'max-age=60',
36 silly registry.get     etag: '"CYIU9HARZPZMRQ7JH1VKVWQP8"',
36 silly registry.get     'x-served-by': 'cache-sjc3134-SJC',
36 silly registry.get     'x-cache': 'HIT',
36 silly registry.get     'x-cache-hits': '1',
36 silly registry.get     'x-timer': 'S1412467032.276817,VS0,VE0',
36 silly registry.get     vary: 'Accept',
36 silly registry.get     'content-length': '0',
36 silly registry.get     'keep-alive': 'timeout=10, max=50',
36 silly registry.get     connection: 'Keep-Alive' } ]
37 verbose etag handlebars from cache
38 silly addNameRange number 2 { name: 'handlebars', range: '*', hasData: true }
39 silly addNameRange versions [ 'handlebars',
39 silly addNameRange   [ '1.0.6',
39 silly addNameRange     '1.0.6-2',
39 silly addNameRange     '1.0.7',
39 silly addNameRange     '1.0.8',
39 silly addNameRange     '1.0.9',
39 silly addNameRange     '1.0.10',
39 silly addNameRange     '1.0.11',
39 silly addNameRange     '1.0.12',
39 silly addNameRange     '1.1.0',
39 silly addNameRange     '1.1.1',
39 silly addNameRange     '1.1.2',
39 silly addNameRange     '1.2.0',
39 silly addNameRange     '1.2.1',
39 silly addNameRange     '1.3.0',
39 silly addNameRange     '2.0.0-alpha.1',
39 silly addNameRange     '2.0.0-alpha.2',
39 silly addNameRange     '2.0.0-alpha.3',
39 silly addNameRange     '2.0.0-alpha.4',
39 silly addNameRange     '2.0.0-beta.1',
39 silly addNameRange     '2.0.0',
39 silly addNameRange     '1.0.2-beta',
39 silly addNameRange     '1.0.4-beta',
39 silly addNameRange     '1.0.5-beta' ] ]
40 verbose addNamed [ 'handlebars', '2.0.0' ]
41 verbose addNamed [ '2.0.0', '2.0.0' ]
42 silly lockFile a1e153af-handlebars-2-0-0 handlebars@2.0.0
43 verbose lock handlebars@2.0.0 /Users/ironweber/.npm/a1e153af-handlebars-2-0-0.lock
44 silly addNameRange number 2 { name: 'handlebars',
44 silly addNameRange   range: '>=2.0.0-0 <2.1.0-0',
44 silly addNameRange   hasData: true }
45 silly addNameRange versions [ 'handlebars',
45 silly addNameRange   [ '1.0.6',
45 silly addNameRange     '1.0.6-2',
45 silly addNameRange     '1.0.7',
45 silly addNameRange     '1.0.8',
45 silly addNameRange     '1.0.9',
45 silly addNameRange     '1.0.10',
45 silly addNameRange     '1.0.11',
45 silly addNameRange     '1.0.12',
45 silly addNameRange     '1.1.0',
45 silly addNameRange     '1.1.1',
45 silly addNameRange     '1.1.2',
45 silly addNameRange     '1.2.0',
45 silly addNameRange     '1.2.1',
45 silly addNameRange     '1.3.0',
45 silly addNameRange     '2.0.0-alpha.1',
45 silly addNameRange     '2.0.0-alpha.2',
45 silly addNameRange     '2.0.0-alpha.3',
45 silly addNameRange     '2.0.0-alpha.4',
45 silly addNameRange     '2.0.0-beta.1',
45 silly addNameRange     '2.0.0',
45 silly addNameRange     '1.0.2-beta',
45 silly addNameRange     '1.0.4-beta',
45 silly addNameRange     '1.0.5-beta' ] ]
46 verbose addNamed [ 'handlebars', '2.0.0' ]
47 silly lockFile a1e153af-handlebars-2-0-0 handlebars@2.0.0
48 silly lockFile a1e153af-handlebars-2-0-0 handlebars@2.0.0
49 silly lockFile 9abb6f57-handlebars handlebars@*
50 silly lockFile 9abb6f57-handlebars handlebars@*
51 silly lockFile 917ab67d-handlebars-2-0-0 handlebars@~2.0.0
52 silly lockFile 917ab67d-handlebars-2-0-0 handlebars@~2.0.0
53 info outdated updating [ [ '/usr/local/lib', 'handlebars', '2.0.0-alpha.2', '2.0.0', '*' ],
53 info outdated   [ '/usr/local/lib/node_modules/bower',
53 info outdated     'handlebars',
53 info outdated     '2.0.0',
53 info outdated     '2.0.0',
53 info outdated     '~2.0.0' ] ]
54 verbose install where,what [ '/usr/local/lib', [ 'handlebars@2.0.0' ] ]
55 verbose install where,what [ '/usr/local/lib/node_modules/bower', [ 'handlebars@2.0.0' ] ]
56 verbose cache add [ 'handlebars@2.0.0', null ]
57 verbose cache add name=undefined spec="handlebars@2.0.0" args=["handlebars@2.0.0",null]
58 verbose parsed url { protocol: null,
58 verbose parsed url   slashes: null,
58 verbose parsed url   auth: null,
58 verbose parsed url   host: null,
58 verbose parsed url   port: null,
58 verbose parsed url   hostname: null,
58 verbose parsed url   hash: null,
58 verbose parsed url   search: null,
58 verbose parsed url   query: null,
58 verbose parsed url   pathname: 'handlebars@2.0.0',
58 verbose parsed url   path: 'handlebars@2.0.0',
58 verbose parsed url   href: 'handlebars@2.0.0' }
59 verbose cache add name="handlebars" spec="2.0.0" args=["handlebars","2.0.0"]
60 verbose parsed url { protocol: null,
60 verbose parsed url   slashes: null,
60 verbose parsed url   auth: null,
60 verbose parsed url   host: null,
60 verbose parsed url   port: null,
60 verbose parsed url   hostname: null,
60 verbose parsed url   hash: null,
60 verbose parsed url   search: null,
60 verbose parsed url   query: null,
60 verbose parsed url   pathname: '2.0.0',
60 verbose parsed url   path: '2.0.0',
60 verbose parsed url   href: '2.0.0' }
61 verbose addNamed [ 'handlebars', '2.0.0' ]
62 verbose addNamed [ '2.0.0', '2.0.0' ]
63 silly lockFile a1e153af-handlebars-2-0-0 handlebars@2.0.0
64 verbose lock handlebars@2.0.0 /Users/ironweber/.npm/a1e153af-handlebars-2-0-0.lock
65 verbose readDependencies using package.json deps
66 verbose cache add [ 'handlebars@2.0.0', null ]
67 verbose cache add name=undefined spec="handlebars@2.0.0" args=["handlebars@2.0.0",null]
68 verbose parsed url { protocol: null,
68 verbose parsed url   slashes: null,
68 verbose parsed url   auth: null,
68 verbose parsed url   host: null,
68 verbose parsed url   port: null,
68 verbose parsed url   hostname: null,
68 verbose parsed url   hash: null,
68 verbose parsed url   search: null,
68 verbose parsed url   query: null,
68 verbose parsed url   pathname: 'handlebars@2.0.0',
68 verbose parsed url   path: 'handlebars@2.0.0',
68 verbose parsed url   href: 'handlebars@2.0.0' }
69 verbose cache add name="handlebars" spec="2.0.0" args=["handlebars","2.0.0"]
70 verbose parsed url { protocol: null,
70 verbose parsed url   slashes: null,
70 verbose parsed url   auth: null,
70 verbose parsed url   host: null,
70 verbose parsed url   port: null,
70 verbose parsed url   hostname: null,
70 verbose parsed url   hash: null,
70 verbose parsed url   search: null,
70 verbose parsed url   query: null,
70 verbose parsed url   pathname: '2.0.0',
70 verbose parsed url   path: '2.0.0',
70 verbose parsed url   href: '2.0.0' }
71 verbose addNamed [ 'handlebars', '2.0.0' ]
72 verbose url raw handlebars/2.0.0
73 verbose url resolving [ 'https://registry.npmjs.org/', './handlebars/2.0.0' ]
74 verbose url resolved https://registry.npmjs.org/handlebars/2.0.0
75 info trying registry request attempt 1 at 16:57:12
76 http GET https://registry.npmjs.org/handlebars/2.0.0
77 http 200 https://registry.npmjs.org/handlebars/2.0.0
78 silly registry.get cb [ 200,
78 silly registry.get   { date: 'Sat, 04 Oct 2014 23:57:12 GMT',
78 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
78 silly registry.get     etag: '"CYIU9HARZPZMRQ7JH1VKVWQP8"',
78 silly registry.get     'content-type': 'application/json',
78 silly registry.get     'cache-control': 'max-age=60',
78 silly registry.get     'content-length': '1730',
78 silly registry.get     'accept-ranges': 'bytes',
78 silly registry.get     via: '1.1 varnish',
78 silly registry.get     age: '0',
78 silly registry.get     'x-served-by': 'cache-sjc3123-SJC',
78 silly registry.get     'x-cache': 'MISS',
78 silly registry.get     'x-cache-hits': '0',
78 silly registry.get     'x-timer': 'S1412467032.693428,VS0,VE46',
78 silly registry.get     vary: 'Accept',
78 silly registry.get     'keep-alive': 'timeout=10, max=50',
78 silly registry.get     connection: 'Keep-Alive' } ]
79 silly lockFile 6c350679--handlebars-handlebars-2-0-0-tgz https://registry.npmjs.org/handlebars/-/handlebars-2.0.0.tgz
80 verbose lock https://registry.npmjs.org/handlebars/-/handlebars-2.0.0.tgz /Users/ironweber/.npm/6c350679--handlebars-handlebars-2-0-0-tgz.lock
81 verbose addRemoteTarball [ 'https://registry.npmjs.org/handlebars/-/handlebars-2.0.0.tgz',
81 verbose addRemoteTarball   '6e9d7f8514a3467fa5e9f82cc158ecfc1d5ac76f' ]
82 info retry fetch attempt 1 at 16:57:12
83 verbose fetch to= /var/folders/vg/qb5lyg6s75b9d059n9jwpw2r0000gn/T/npm-8601-RAVgQHsv/1412467032723-0.36445275181904435/tmp.tgz
84 http GET https://registry.npmjs.org/handlebars/-/handlebars-2.0.0.tgz
85 http 200 https://registry.npmjs.org/handlebars/-/handlebars-2.0.0.tgz
86 verbose tar unpack /var/folders/vg/qb5lyg6s75b9d059n9jwpw2r0000gn/T/npm-8601-RAVgQHsv/1412467032723-0.36445275181904435/tmp.tgz
87 silly lockFile aa7c2874-2723-0-36445275181904435-package tar:///var/folders/vg/qb5lyg6s75b9d059n9jwpw2r0000gn/T/npm-8601-RAVgQHsv/1412467032723-0.36445275181904435/package
88 verbose lock tar:///var/folders/vg/qb5lyg6s75b9d059n9jwpw2r0000gn/T/npm-8601-RAVgQHsv/1412467032723-0.36445275181904435/package /Users/ironweber/.npm/aa7c2874-2723-0-36445275181904435-package.lock
89 silly lockFile b3e39898-2723-0-36445275181904435-tmp-tgz tar:///var/folders/vg/qb5lyg6s75b9d059n9jwpw2r0000gn/T/npm-8601-RAVgQHsv/1412467032723-0.36445275181904435/tmp.tgz
90 verbose lock tar:///var/folders/vg/qb5lyg6s75b9d059n9jwpw2r0000gn/T/npm-8601-RAVgQHsv/1412467032723-0.36445275181904435/tmp.tgz /Users/ironweber/.npm/b3e39898-2723-0-36445275181904435-tmp-tgz.lock
91 silly gunzTarPerm modes [ '755', '644' ]
92 silly gunzTarPerm extractEntry package.json
93 silly gunzTarPerm extractEntry .npmignore
94 silly gunzTarPerm extractEntry LICENSE
95 silly gunzTarPerm extractEntry runtime.js
96 silly gunzTarPerm extractEntry coverage/coverage.json
97 silly gunzTarPerm extractEntry coverage/lcov-report/prettify.js
98 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/base.js.html
99 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/ast.js.html
100 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/base.js.html
101 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/compiler.js.html
102 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/helpers.js.html
103 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/index.html
104 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/javascript-compiler.js.html
105 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/parser.js.html
106 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/printer.js.html
107 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/visitor.js.html
108 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/exception.js.html
109 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/index.html
110 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/runtime.js.html
111 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/safe-string.js.html
112 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/utils.js.html
113 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars.js.html
114 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars.runtime.js.html
115 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/index.html
116 silly gunzTarPerm extractEntry coverage/lcov-report/index.html
117 silly gunzTarPerm extractEntry coverage/lcov-report/lib/index.html
118 silly gunzTarPerm extractEntry coverage/lcov-report/lib/index.js.html
119 silly gunzTarPerm extractEntry coverage/lcov-report/lib/precompiler.js.html
120 silly gunzTarPerm extractEntry coverage/lcov-report/prettify.css
121 silly gunzTarPerm extractEntry coverage/lcov-report/spec/precompiler.js.html
122 silly gunzTarPerm extractEntry coverage/lcov-report/spec/ast.js.html
123 silly gunzTarPerm extractEntry coverage/lcov-report/spec/blocks.js.html
124 silly gunzTarPerm extractEntry coverage/lcov-report/spec/builtins.js.html
125 silly gunzTarPerm extractEntry coverage/lcov-report/spec/data.js.html
126 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/browser.js.html
127 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/common.js.html
128 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/index.html
129 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/node.js.html
130 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/runner.js.html
131 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/runtime.js.html
132 silly gunzTarPerm extractEntry coverage/lcov-report/spec/helpers.js.html
133 silly gunzTarPerm extractEntry coverage/lcov-report/spec/index.html
134 silly gunzTarPerm extractEntry coverage/lcov-report/spec/javascript-compiler.js.html
135 silly gunzTarPerm extractEntry coverage/lcov-report/spec/parser.js.html
136 silly gunzTarPerm extractEntry coverage/lcov-report/spec/partials.js.html
137 silly gunzTarPerm extractEntry coverage/lcov-report/spec/basic.js.html
138 silly gunzTarPerm extractEntry coverage/lcov-report/spec/regressions.js.html
139 silly gunzTarPerm extractEntry coverage/lcov-report/spec/require.js.html
140 silly gunzTarPerm extractEntry coverage/lcov-report/spec/runtime.js.html
141 silly gunzTarPerm extractEntry coverage/lcov-report/spec/spec.js.html
142 silly gunzTarPerm extractEntry coverage/lcov-report/spec/string-params.js.html
143 silly gunzTarPerm extractEntry coverage/lcov-report/spec/subexpressions.js.html
144 silly gunzTarPerm extractEntry coverage/lcov-report/spec/tokenizer.js.html
145 silly gunzTarPerm extractEntry coverage/lcov-report/spec/track-ids.js.html
146 silly gunzTarPerm extractEntry coverage/lcov-report/spec/utils.js.html
147 silly gunzTarPerm extractEntry coverage/lcov-report/spec/whitespace-control.js.html
148 silly gunzTarPerm extractEntry coverage/lcov.info
149 silly gunzTarPerm extractEntry .gitmodules
150 silly gunzTarPerm extractEntry README.markdown
151 silly gunzTarPerm extractEntry bin/handlebars
152 silly gunzTarPerm extractEntry .istanbul.yml
153 silly gunzTarPerm extractEntry dist/handlebars.runtime.min.js
154 silly gunzTarPerm extractEntry dist/handlebars.runtime.js
155 silly gunzTarPerm extractEntry dist/handlebars.runtime.amd.min.js
156 silly gunzTarPerm extractEntry dist/handlebars.amd.js
157 silly gunzTarPerm extractEntry dist/handlebars.amd.min.js
158 silly gunzTarPerm extractEntry dist/handlebars.runtime.amd.js
159 silly gunzTarPerm extractEntry dist/handlebars.min.js
160 silly gunzTarPerm extractEntry dist/handlebars.js
161 silly gunzTarPerm extractEntry dist/cjs/handlebars.js
162 silly gunzTarPerm extractEntry dist/cjs/handlebars.runtime.js
163 silly gunzTarPerm extractEntry dist/cjs/precompiler.js
164 silly gunzTarPerm extractEntry dist/cjs/handlebars/base.js
165 silly gunzTarPerm extractEntry dist/cjs/handlebars/exception.js
166 silly gunzTarPerm extractEntry dist/cjs/handlebars/runtime.js
167 silly gunzTarPerm extractEntry dist/cjs/handlebars/safe-string.js
168 silly gunzTarPerm extractEntry dist/cjs/handlebars/utils.js
169 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/ast.js
170 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/base.js
171 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/compiler.js
172 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/helpers.js
173 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/javascript-compiler.js
174 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/parser.js
175 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/printer.js
176 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/visitor.js
177 silly gunzTarPerm extractEntry dist/amd/handlebars.js
178 silly gunzTarPerm extractEntry dist/amd/handlebars.runtime.js
179 silly gunzTarPerm extractEntry dist/amd/precompiler.js
180 silly gunzTarPerm extractEntry dist/amd/handlebars/base.js
181 silly gunzTarPerm extractEntry dist/amd/handlebars/exception.js
182 silly gunzTarPerm extractEntry dist/amd/handlebars/runtime.js
183 silly gunzTarPerm extractEntry dist/amd/handlebars/safe-string.js
184 silly gunzTarPerm extractEntry dist/amd/handlebars/utils.js
185 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/ast.js
186 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/base.js
187 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/compiler.js
188 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/helpers.js
189 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/javascript-compiler.js
190 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/parser.js
191 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/printer.js
192 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/visitor.js
193 silly gunzTarPerm extractEntry lib/handlebars.js
194 silly gunzTarPerm extractEntry lib/handlebars.runtime.js
195 silly gunzTarPerm extractEntry lib/index.js
196 silly gunzTarPerm extractEntry lib/precompiler.js
197 silly gunzTarPerm extractEntry lib/handlebars/base.js
198 silly gunzTarPerm extractEntry lib/handlebars/exception.js
199 silly gunzTarPerm extractEntry lib/handlebars/runtime.js
200 silly gunzTarPerm extractEntry lib/handlebars/safe-string.js
201 silly gunzTarPerm extractEntry lib/handlebars/utils.js
202 silly gunzTarPerm extractEntry lib/handlebars/compiler/ast.js
203 silly gunzTarPerm extractEntry lib/handlebars/compiler/base.js
204 silly gunzTarPerm extractEntry lib/handlebars/compiler/compiler.js
205 silly gunzTarPerm extractEntry lib/handlebars/compiler/helpers.js
206 silly gunzTarPerm extractEntry lib/handlebars/compiler/javascript-compiler.js
207 silly gunzTarPerm extractEntry lib/handlebars/compiler/parser.js
208 silly gunzTarPerm extractEntry lib/handlebars/compiler/printer.js
209 silly gunzTarPerm extractEntry lib/handlebars/compiler/visitor.js
210 silly gunzTarPerm extractEntry CONTRIBUTING.md
211 silly gunzTarPerm extractEntry print-script
212 silly gunzTarPerm extractEntry release-notes.md
213 silly gunzTarPerm extractEntry FAQ.md
214 silly lockFile aa7c2874-2723-0-36445275181904435-package tar:///var/folders/vg/qb5lyg6s75b9d059n9jwpw2r0000gn/T/npm-8601-RAVgQHsv/1412467032723-0.36445275181904435/package
215 silly lockFile aa7c2874-2723-0-36445275181904435-package tar:///var/folders/vg/qb5lyg6s75b9d059n9jwpw2r0000gn/T/npm-8601-RAVgQHsv/1412467032723-0.36445275181904435/package
216 silly lockFile b3e39898-2723-0-36445275181904435-tmp-tgz tar:///var/folders/vg/qb5lyg6s75b9d059n9jwpw2r0000gn/T/npm-8601-RAVgQHsv/1412467032723-0.36445275181904435/tmp.tgz
217 silly lockFile b3e39898-2723-0-36445275181904435-tmp-tgz tar:///var/folders/vg/qb5lyg6s75b9d059n9jwpw2r0000gn/T/npm-8601-RAVgQHsv/1412467032723-0.36445275181904435/tmp.tgz
218 verbose tar pack [ '/Users/ironweber/.npm/handlebars/2.0.0/package.tgz',
218 verbose tar pack   '/var/folders/vg/qb5lyg6s75b9d059n9jwpw2r0000gn/T/npm-8601-RAVgQHsv/1412467032723-0.36445275181904435/package' ]
219 verbose tarball /Users/ironweber/.npm/handlebars/2.0.0/package.tgz
220 verbose folder /var/folders/vg/qb5lyg6s75b9d059n9jwpw2r0000gn/T/npm-8601-RAVgQHsv/1412467032723-0.36445275181904435/package
221 silly lockFile aa7c2874-2723-0-36445275181904435-package tar:///var/folders/vg/qb5lyg6s75b9d059n9jwpw2r0000gn/T/npm-8601-RAVgQHsv/1412467032723-0.36445275181904435/package
222 verbose lock tar:///var/folders/vg/qb5lyg6s75b9d059n9jwpw2r0000gn/T/npm-8601-RAVgQHsv/1412467032723-0.36445275181904435/package /Users/ironweber/.npm/aa7c2874-2723-0-36445275181904435-package.lock
223 silly lockFile 69b7d96a-npm-handlebars-2-0-0-package-tgz tar:///Users/ironweber/.npm/handlebars/2.0.0/package.tgz
224 verbose lock tar:///Users/ironweber/.npm/handlebars/2.0.0/package.tgz /Users/ironweber/.npm/69b7d96a-npm-handlebars-2-0-0-package-tgz.lock
225 silly lockFile aa7c2874-2723-0-36445275181904435-package tar:///var/folders/vg/qb5lyg6s75b9d059n9jwpw2r0000gn/T/npm-8601-RAVgQHsv/1412467032723-0.36445275181904435/package
226 silly lockFile aa7c2874-2723-0-36445275181904435-package tar:///var/folders/vg/qb5lyg6s75b9d059n9jwpw2r0000gn/T/npm-8601-RAVgQHsv/1412467032723-0.36445275181904435/package
227 silly lockFile 69b7d96a-npm-handlebars-2-0-0-package-tgz tar:///Users/ironweber/.npm/handlebars/2.0.0/package.tgz
228 silly lockFile 69b7d96a-npm-handlebars-2-0-0-package-tgz tar:///Users/ironweber/.npm/handlebars/2.0.0/package.tgz
229 silly lockFile 44b73c07-ber-npm-handlebars-2-0-0-package /Users/ironweber/.npm/handlebars/2.0.0/package
230 verbose lock /Users/ironweber/.npm/handlebars/2.0.0/package /Users/ironweber/.npm/44b73c07-ber-npm-handlebars-2-0-0-package.lock
231 silly lockFile 44b73c07-ber-npm-handlebars-2-0-0-package /Users/ironweber/.npm/handlebars/2.0.0/package
232 silly lockFile 44b73c07-ber-npm-handlebars-2-0-0-package /Users/ironweber/.npm/handlebars/2.0.0/package
233 verbose tar unpack /Users/ironweber/.npm/handlebars/2.0.0/package.tgz
234 silly lockFile 34861eb2-ber-npm-handlebars-2-0-0-package tar:///Users/ironweber/.npm/handlebars/2.0.0/package
235 verbose lock tar:///Users/ironweber/.npm/handlebars/2.0.0/package /Users/ironweber/.npm/34861eb2-ber-npm-handlebars-2-0-0-package.lock
236 silly lockFile 69b7d96a-npm-handlebars-2-0-0-package-tgz tar:///Users/ironweber/.npm/handlebars/2.0.0/package.tgz
237 verbose lock tar:///Users/ironweber/.npm/handlebars/2.0.0/package.tgz /Users/ironweber/.npm/69b7d96a-npm-handlebars-2-0-0-package-tgz.lock
238 silly gunzTarPerm modes [ '755', '644' ]
239 silly gunzTarPerm extractEntry package.json
240 silly gunzTarPerm extractEntry .npmignore
241 silly gunzTarPerm extractEntry LICENSE
242 silly gunzTarPerm extractEntry runtime.js
243 silly gunzTarPerm extractEntry FAQ.md
244 silly gunzTarPerm extractEntry .gitmodules
245 silly gunzTarPerm extractEntry README.markdown
246 silly gunzTarPerm extractEntry .istanbul.yml
247 silly gunzTarPerm extractEntry coverage/coverage.json
248 silly gunzTarPerm extractEntry coverage/lcov-report/prettify.js
249 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/base.js.html
250 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/ast.js.html
251 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/base.js.html
252 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/compiler.js.html
253 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/helpers.js.html
254 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/index.html
255 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/javascript-compiler.js.html
256 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/parser.js.html
257 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/printer.js.html
258 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/visitor.js.html
259 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/exception.js.html
260 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/index.html
261 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/runtime.js.html
262 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/safe-string.js.html
263 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/utils.js.html
264 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars.js.html
265 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars.runtime.js.html
266 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/index.html
267 silly gunzTarPerm extractEntry coverage/lcov-report/index.html
268 silly gunzTarPerm extractEntry coverage/lcov-report/lib/index.html
269 silly gunzTarPerm extractEntry coverage/lcov-report/lib/index.js.html
270 silly gunzTarPerm extractEntry coverage/lcov-report/lib/precompiler.js.html
271 silly gunzTarPerm extractEntry coverage/lcov-report/prettify.css
272 silly gunzTarPerm extractEntry coverage/lcov-report/spec/precompiler.js.html
273 silly gunzTarPerm extractEntry coverage/lcov-report/spec/ast.js.html
274 silly gunzTarPerm extractEntry coverage/lcov-report/spec/blocks.js.html
275 silly gunzTarPerm extractEntry coverage/lcov-report/spec/builtins.js.html
276 silly gunzTarPerm extractEntry coverage/lcov-report/spec/data.js.html
277 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/browser.js.html
278 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/common.js.html
279 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/index.html
280 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/node.js.html
281 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/runner.js.html
282 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/runtime.js.html
283 silly gunzTarPerm extractEntry coverage/lcov-report/spec/helpers.js.html
284 silly gunzTarPerm extractEntry coverage/lcov-report/spec/index.html
285 silly gunzTarPerm extractEntry coverage/lcov-report/spec/javascript-compiler.js.html
286 silly gunzTarPerm extractEntry coverage/lcov-report/spec/parser.js.html
287 silly gunzTarPerm extractEntry coverage/lcov-report/spec/partials.js.html
288 silly gunzTarPerm extractEntry coverage/lcov-report/spec/basic.js.html
289 silly gunzTarPerm extractEntry coverage/lcov-report/spec/regressions.js.html
290 silly gunzTarPerm extractEntry coverage/lcov-report/spec/require.js.html
291 silly gunzTarPerm extractEntry coverage/lcov-report/spec/runtime.js.html
292 silly gunzTarPerm extractEntry coverage/lcov-report/spec/spec.js.html
293 silly gunzTarPerm extractEntry coverage/lcov-report/spec/string-params.js.html
294 silly gunzTarPerm extractEntry coverage/lcov-report/spec/subexpressions.js.html
295 silly gunzTarPerm extractEntry coverage/lcov-report/spec/tokenizer.js.html
296 silly gunzTarPerm extractEntry coverage/lcov-report/spec/track-ids.js.html
297 silly gunzTarPerm extractEntry coverage/lcov-report/spec/utils.js.html
298 silly gunzTarPerm extractEntry coverage/lcov-report/spec/whitespace-control.js.html
299 silly gunzTarPerm extractEntry coverage/lcov.info
300 silly gunzTarPerm extractEntry dist/handlebars.amd.js
301 silly gunzTarPerm extractEntry dist/handlebars.amd.min.js
302 silly gunzTarPerm extractEntry dist/handlebars.js
303 silly gunzTarPerm extractEntry dist/handlebars.min.js
304 silly gunzTarPerm extractEntry dist/handlebars.runtime.amd.js
305 silly gunzTarPerm extractEntry dist/handlebars.runtime.amd.min.js
306 silly gunzTarPerm extractEntry dist/handlebars.runtime.js
307 silly gunzTarPerm extractEntry dist/handlebars.runtime.min.js
308 silly gunzTarPerm extractEntry dist/amd/handlebars.js
309 silly gunzTarPerm extractEntry dist/amd/handlebars.runtime.js
310 silly gunzTarPerm extractEntry dist/amd/precompiler.js
311 silly gunzTarPerm extractEntry dist/amd/handlebars/base.js
312 silly gunzTarPerm extractEntry dist/amd/handlebars/exception.js
313 silly gunzTarPerm extractEntry dist/amd/handlebars/runtime.js
314 silly gunzTarPerm extractEntry dist/amd/handlebars/safe-string.js
315 silly gunzTarPerm extractEntry dist/amd/handlebars/utils.js
316 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/ast.js
317 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/base.js
318 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/compiler.js
319 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/helpers.js
320 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/javascript-compiler.js
321 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/parser.js
322 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/printer.js
323 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/visitor.js
324 silly gunzTarPerm extractEntry dist/cjs/handlebars.js
325 silly gunzTarPerm extractEntry dist/cjs/handlebars.runtime.js
326 silly gunzTarPerm extractEntry dist/cjs/precompiler.js
327 silly gunzTarPerm extractEntry dist/cjs/handlebars/base.js
328 silly gunzTarPerm extractEntry dist/cjs/handlebars/exception.js
329 silly gunzTarPerm extractEntry dist/cjs/handlebars/runtime.js
330 silly gunzTarPerm extractEntry dist/cjs/handlebars/safe-string.js
331 silly gunzTarPerm extractEntry dist/cjs/handlebars/utils.js
332 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/ast.js
333 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/base.js
334 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/compiler.js
335 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/helpers.js
336 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/javascript-compiler.js
337 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/parser.js
338 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/printer.js
339 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/visitor.js
340 silly gunzTarPerm extractEntry lib/handlebars.js
341 silly gunzTarPerm extractEntry lib/handlebars.runtime.js
342 silly gunzTarPerm extractEntry lib/index.js
343 silly gunzTarPerm extractEntry lib/precompiler.js
344 silly gunzTarPerm extractEntry lib/handlebars/base.js
345 silly gunzTarPerm extractEntry lib/handlebars/exception.js
346 silly gunzTarPerm extractEntry lib/handlebars/runtime.js
347 silly gunzTarPerm extractEntry lib/handlebars/safe-string.js
348 silly gunzTarPerm extractEntry lib/handlebars/utils.js
349 silly gunzTarPerm extractEntry lib/handlebars/compiler/ast.js
350 silly gunzTarPerm extractEntry lib/handlebars/compiler/base.js
351 silly gunzTarPerm extractEntry lib/handlebars/compiler/compiler.js
352 silly gunzTarPerm extractEntry lib/handlebars/compiler/helpers.js
353 silly gunzTarPerm extractEntry lib/handlebars/compiler/javascript-compiler.js
354 silly gunzTarPerm extractEntry lib/handlebars/compiler/parser.js
355 silly gunzTarPerm extractEntry lib/handlebars/compiler/printer.js
356 silly gunzTarPerm extractEntry lib/handlebars/compiler/visitor.js
357 silly gunzTarPerm extractEntry CONTRIBUTING.md
358 silly gunzTarPerm extractEntry print-script
359 silly gunzTarPerm extractEntry release-notes.md
360 silly gunzTarPerm extractEntry bin/handlebars
361 silly lockFile 34861eb2-ber-npm-handlebars-2-0-0-package tar:///Users/ironweber/.npm/handlebars/2.0.0/package
362 silly lockFile 34861eb2-ber-npm-handlebars-2-0-0-package tar:///Users/ironweber/.npm/handlebars/2.0.0/package
363 silly lockFile 69b7d96a-npm-handlebars-2-0-0-package-tgz tar:///Users/ironweber/.npm/handlebars/2.0.0/package.tgz
364 silly lockFile 69b7d96a-npm-handlebars-2-0-0-package-tgz tar:///Users/ironweber/.npm/handlebars/2.0.0/package.tgz
365 verbose chmod /Users/ironweber/.npm/handlebars/2.0.0/package.tgz 644
366 verbose chown /Users/ironweber/.npm/handlebars/2.0.0/package.tgz [ 501, 20 ]
367 silly lockFile 6c350679--handlebars-handlebars-2-0-0-tgz https://registry.npmjs.org/handlebars/-/handlebars-2.0.0.tgz
368 silly lockFile 6c350679--handlebars-handlebars-2-0-0-tgz https://registry.npmjs.org/handlebars/-/handlebars-2.0.0.tgz
369 silly lockFile a1e153af-handlebars-2-0-0 handlebars@2.0.0
370 silly lockFile a1e153af-handlebars-2-0-0 handlebars@2.0.0
371 silly resolved [ { name: 'handlebars',
371 silly resolved     barename: 'handlebars',
371 silly resolved     version: '2.0.0',
371 silly resolved     description: 'Handlebars provides the power necessary to let you build semantic templates effectively with no frustration',
371 silly resolved     homepage: 'http://www.handlebarsjs.com/',
371 silly resolved     keywords: [ 'handlebars', 'mustache', 'template', 'html' ],
371 silly resolved     repository:
371 silly resolved      { type: 'git',
371 silly resolved        url: 'https://github.com/wycats/handlebars.js.git' },
371 silly resolved     author: { name: 'Yehuda Katz' },
371 silly resolved     license: 'MIT',
371 silly resolved     readmeFilename: 'README.markdown',
371 silly resolved     engines: { node: '>=0.4.7' },
371 silly resolved     dependencies: { optimist: '~0.3', 'uglify-js': '~2.3' },
371 silly resolved     optionalDependencies: { 'uglify-js': '~2.3' },
371 silly resolved     devDependencies:
371 silly resolved      { async: '~0.2.9',
371 silly resolved        'aws-sdk': '~1.5.0',
371 silly resolved        benchmark: '~1.0',
371 silly resolved        'dustjs-linkedin': '~2.0.2',
371 silly resolved        eco: '~1.1.0-rc-3',
371 silly resolved        'es6-module-packager': '1.x',
371 silly resolved        grunt: '~0.4.1',
371 silly resolved        'grunt-cli': '~0.1.10',
371 silly resolved        'grunt-contrib-clean': '~0.4.1',
371 silly resolved        'grunt-contrib-concat': '~0.3.0',
371 silly resolved        'grunt-contrib-connect': '~0.5.0',
371 silly resolved        'grunt-contrib-copy': '~0.4.1',
371 silly resolved        'grunt-contrib-jshint': '0.x',
371 silly resolved        'grunt-contrib-requirejs': '~0.4.1',
371 silly resolved        'grunt-contrib-uglify': '~0.2.2',
371 silly resolved        'grunt-contrib-watch': '~0.5.3',
371 silly resolved        'grunt-saucelabs': '8.x',
371 silly resolved        istanbul: '^0.3.0',
371 silly resolved        jison: '~0.3.0',
371 silly resolved        'keen.io': '0.0.3',
371 silly resolved        mocha: '~1.20.0',
371 silly resolved        mustache: '~0.7.2',
371 silly resolved        semver: '~2.1.0',
371 silly resolved        underscore: '~1.5.1' },
371 silly resolved     main: 'lib/index.js',
371 silly resolved     bin: { handlebars: 'bin/handlebars' },
371 silly resolved     scripts: { test: 'grunt' },
371 silly resolved     readme: '[![Travis Build Status](https://img.shields.io/travis/wycats/handlebars.js/master.svg)](https://travis-ci.org/wycats/handlebars.js)\n[![Selenium Test Status](https://saucelabs.com/buildstatus/handlebars)](https://saucelabs.com/u/handlebars)\n\nHandlebars.js\n=============\n\nHandlebars.js is an extension to the [Mustache templating\nlanguage](http://mustache.github.com/) created by Chris Wanstrath.\nHandlebars.js and Mustache are both logicless templating languages that\nkeep the view and the code separated like we all know they should be.\n\nCheckout the official Handlebars docs site at\n[http://www.handlebarsjs.com](http://www.handlebarsjs.com).\n\nInstalling\n----------\nInstalling Handlebars is easy. Simply download the package [from the official site](http://handlebarsjs.com/) or the [bower repository][bower-repo] and add it to your web pages (you should usually use the most recent version).\n\nAlternatively, if you prefer having the latest version of handlebars from\nthe \'master\' branch, passing builds of the \'master\' branch are automatically\npublished to S3. You may download the latest passing master build by grabbing\na `handlebars-latest.js` file from the [builds page][builds-page]. When the\nbuild is published, it is also available as a `handlebars-gitSHA.js` file on\nthe builds page if you need a version to refer to others.\n`handlebars-runtime.js` builds are also available.\n\n**Note**: The S3 builds page is provided as a convenience for the community,\nbut you should not use it for hosting Handlebars in production.\n\nUsage\n-----\nIn general, the syntax of Handlebars.js templates is a superset\nof Mustache templates. For basic syntax, check out the [Mustache\nmanpage](http://mustache.github.com/mustache.5.html).\n\nOnce you have a template, use the `Handlebars.compile` method to compile\nthe template into a function. The generated function takes a context\nargument, which will be used to render the template.\n\n```js\nvar source = "<p>Hello, my name is {{name}}. I am from {{hometown}}. I have " +\n             "{{kids.length}} kids:</p>" +\n             "<ul>{{#kids}}<li>{{name}} is {{age}}</li>{{/kids}}</ul>";\nvar template = Handlebars.compile(source);\n\nvar data = { "name": "Alan", "hometown": "Somewhere, TX",\n             "kids": [{"name": "Jimmy", "age": "12"}, {"name": "Sally", "age": "4"}]};\nvar result = template(data);\n\n// Would render:\n// <p>Hello, my name is Alan. I am from Somewhere, TX. I have 2 kids:</p>\n// <ul>\n//   <li>Jimmy is 12</li>\n//   <li>Sally is 4</li>\n// </ul>\n```\n\n\nRegistering Helpers\n-------------------\n\nYou can register helpers that Handlebars will use when evaluating your\ntemplate. Here\'s an example, which assumes that your objects have a URL\nembedded in them, as well as the text for a link:\n\n```js\nHandlebars.registerHelper(\'link_to\', function() {\n  return new Handlebars.SafeString("<a href=\'" + Handlebars.Utils.escapeExpression(this.url) + "\'>" + Handlebars.Utils.escapeExpression(this.body) + "</a>");\n});\n\nvar context = { posts: [{url: "/hello-world", body: "Hello World!"}] };\nvar source = "<ul>{{#posts}}<li>{{link_to}}</li>{{/posts}}</ul>"\n\nvar template = Handlebars.compile(source);\ntemplate(context);\n\n// Would render:\n//\n// <ul>\n//   <li><a href=\'/hello-world\'>Hello World!</a></li>\n// </ul>\n```\n\nHelpers take precedence over fields defined on the context. To access a field\nthat is masked by a helper, a path reference may be used. In the example above\na field named `link_to` on the `context` object would be referenced using:\n\n```\n{{./link_to}}\n```\n\nEscaping\n--------\n\nBy default, the `{{expression}}` syntax will escape its contents. This\nhelps to protect you against accidental XSS problems caused by malicious\ndata passed from the server as JSON.\n\nTo explicitly *not* escape the contents, use the triple-mustache\n(`{{{}}}`). You have seen this used in the above example.\n\n\nDifferences Between Handlebars.js and Mustache\n----------------------------------------------\nHandlebars.js adds a couple of additional features to make writing\ntemplates easier and also changes a tiny detail of how partials work.\n\n### Paths\n\nHandlebars.js supports an extended expression syntax that we call paths.\nPaths are made up of typical expressions and . characters. Expressions\nallow you to not only display data from the current context, but to\ndisplay data from contexts that are descendants and ancestors of the\ncurrent context.\n\nTo display data from descendant contexts, use the `.` character. So, for\nexample, if your data were structured like:\n\n```js\nvar data = {"person": { "name": "Alan" }, "company": {"name": "Rad, Inc." } };\n```\n\nYou could display the person\'s name from the top-level context with the\nfollowing expression:\n\n```\n{{person.name}}\n```\n\nYou can backtrack using `../`. For example, if you\'ve already traversed\ninto the person object you could still display the company\'s name with\nan expression like `{{../company.name}}`, so:\n\n```\n{{#with person}}{{name}} - {{../company.name}}{{/person}}\n```\n\nwould render:\n\n```\nAlan - Rad, Inc.\n```\n\n### Strings\n\nWhen calling a helper, you can pass paths or Strings as parameters. For\ninstance:\n\n```js\nHandlebars.registerHelper(\'link_to\', function(title, options) {\n  return "<a href=\'/posts" + this.url + "\'>" + title + "!</a>"\n});\n\nvar context = { posts: [{url: "/hello-world", body: "Hello World!"}] };\nvar source = \'<ul>{{#posts}}<li>{{{link_to "Post"}}}</li>{{/posts}}</ul>\'\n\nvar template = Handlebars.compile(source);\ntemplate(context);\n\n// Would render:\n//\n// <ul>\n//   <li><a href=\'/posts/hello-world\'>Post!</a></li>\n// </ul>\n```\n\nWhen you pass a String as a parameter to a helper, the literal String\ngets passed to the helper function.\n\n\n### Block Helpers\n\nHandlebars.js also adds the ability to define block helpers. Block\nhelpers are functions that can be called from anywhere in the template.\nHere\'s an example:\n\n```js\nvar source = "<ul>{{#people}}<li>{{#link}}{{name}}{{/link}}</li>{{/people}}</ul>";\nHandlebars.registerHelper(\'link\', function(options) {\n  return \'<a href="/people/\' + this.id + \'">\' + options.fn(this) + \'</a>\';\n});\nvar template = Handlebars.compile(source);\n\nvar data = { "people": [\n    { "name": "Alan", "id": 1 },\n    { "name": "Yehuda", "id": 2 }\n  ]};\ntemplate(data);\n\n// Should render:\n// <ul>\n//   <li><a href="/people/1">Alan</a></li>\n//   <li><a href="/people/2">Yehuda</a></li>\n// </ul>\n```\n\nWhenever the block helper is called it is given one or more parameters,\nany arguments that are passed in the helper in the call and an `options`\nobject containing the `fn` function which executes the block\'s child.\nThe block\'s current context may be accessed through `this`.\n\nBlock helpers have the same syntax as mustache sections but should not be\nconfused with one another. Sections are akin to an implicit `each` or\n`with` statement depending on the input data and helpers are explicit\npieces of code that are free to implement whatever behavior they like.\nThe [mustache spec](http://mustache.github.io/mustache.5.html)\ndefines the exact behavior of sections. In the case of name conflicts,\nhelpers are given priority.\n\n### Partials\n\nYou can register additional templates as partials, which will be used by\nHandlebars when it encounters a partial (`{{> partialName}}`). Partials\ncan either be String templates or compiled template functions. Here\'s an\nexample:\n\n```js\nvar source = "<ul>{{#people}}<li>{{> link}}</li>{{/people}}</ul>";\n\nHandlebars.registerPartial(\'link\', \'<a href="/people/{{id}}">{{name}}</a>\')\nvar template = Handlebars.compile(source);\n\nvar data = { "people": [\n    { "name": "Alan", "id": 1 },\n    { "name": "Yehuda", "id": 2 }\n  ]};\n\ntemplate(data);\n\n// Should render:\n// <ul>\n//   <li><a href="/people/1">Alan</a></li>\n//   <li><a href="/people/2">Yehuda</a></li>\n// </ul>\n```\n\n### Comments\n\nYou can add comments to your templates with the following syntax:\n\n```js\n{{! This is a comment }}\n```\n\nYou can also use real html comments if you want them to end up in the output.\n\n```html\n<div>\n    {{! This comment will not end up in the output }}\n    <!-- This comment will show up in the output -->\n</div>\n```\n\n\n### Compatibility\n\nThere are a few Mustache behaviors that Handlebars does not implement.\n- Handlebars deviates from Mustache slightly in that it does not perform recursive lookup by default. The compile time `compat` flag must be set to enable this functionality. Users should note that there is a performance cost for enabling this flag. The exact cost varies by template, but it\'s recommended that performance sensitive operations should avoid this mode and instead opt for explicit path references.\n- The optional Mustache-style lambdas are not supported. Instead Handlebars provides it\'s own lambda resolution that follows the behaviors of helpers.\n- Alternative delimeters are not supported.\n\n\nPrecompiling Templates\n----------------------\n\nHandlebars allows templates to be precompiled and included as javascript\ncode rather than the handlebars template allowing for faster startup time.\n\n### Installation\nThe precompiler script may be installed via npm using the `npm install -g handlebars`\ncommand.\n\n### Usage\n\n<pre>\nPrecompile handlebar templates.\nUsage: handlebars template...\n\nOptions:\n  -a, --amd            Create an AMD format function (allows loading with RequireJS)          [boolean]\n  -f, --output         Output File                                                            [string]\n  -k, --known          Known helpers                                                          [string]\n  -o, --knownOnly      Known helpers only                                                     [boolean]\n  -m, --min            Minimize output                                                        [boolean]\n  -s, --simple         Output template function only.                                         [boolean]\n  -r, --root           Template root. Base value that will be stripped from template names.   [string]\n  -c, --commonjs       Exports CommonJS style, path to Handlebars module                      [string]\n  -h, --handlebarPath  Path to handlebar.js (only valid for amd-style)                        [string]\n  -n, --namespace      Template namespace                                                     [string]\n  -p, --partial        Compiling a partial template                                           [boolean]\n  -d, --data           Include data when compiling                                            [boolean]\n  -e, --extension      Template extension.                                                    [string]\n  -b, --bom            Removes the BOM (Byte Order Mark) from the beginning of the templates. [boolean]\n</pre>\n\nIf using the precompiler\'s normal mode, the resulting templates will be\nstored to the `Handlebars.templates` object using the relative template\nname sans the extension. These templates may be executed in the same\nmanner as templates.\n\nIf using the simple mode the precompiler will generate a single\njavascript method. To execute this method it must be passed to\nthe `Handlebars.template` method and the resulting object may be used as normal.\n\n### Optimizations\n\n- Rather than using the full _handlebars.js_ library, implementations that\n  do not need to compile templates at runtime may include _handlebars.runtime.js_\n  whose min+gzip size is approximately 1k.\n- If a helper is known to exist in the target environment they may be defined\n  using the `--known name` argument may be used to optimize accesses to these\n  helpers for size and speed.\n- When all helpers are known in advance the `--knownOnly` argument may be used\n  to optimize all block helper references.\n- Implementations that do not use `@data` variables can improve performance of\n  iteration centric templates by specifying `{data: false}` in the compiler options.\n\nSupported Environments\n----------------------\n\nHandlebars has been designed to work in any ECMAScript 3 environment. This includes\n\n- Node.js\n- Chrome\n- Firefox\n- Safari 5+\n- Opera 11+\n- IE 6+\n\nOlder versions and other runtimes are likely to work but have not been formally\ntested. The compiler requires `JSON.stringify` to be implemented natively or via a polyfill. If using the precompiler this is not necessary.\n\n[![Selenium Test Status](https://saucelabs.com/browser-matrix/handlebars.svg)](https://saucelabs.com/u/handlebars)\n\nPerformance\n-----------\n\nIn a rough performance test, precompiled Handlebars.js templates (in\nthe original version of Handlebars.js) rendered in about half the\ntime of Mustache templates. It would be a shame if it were any other\nway, since they were precompiled, but the difference in architecture\ndoes have some big performance advantages. Justin Marney, a.k.a.\n[gotascii](http://github.com/gotascii), confirmed that with an\n[independent test](http://sorescode.com/2010/09/12/benchmarks.html). The\nrewritten Handlebars (current version) is faster than the old version,\nwith many [performance tests](https://travis-ci.org/wycats/handlebars.js/builds/33392182#L538) being 5 to 7 times faster than the Mustache equivalent.\n\n\nUpgrading\n---------\n\nSee [release-notes.md](https://github.com/wycats/handlebars.js/blob/master/release-notes.md) for upgrade notes.\n\nKnown Issues\n------------\n\nSee [FAQ.md](https://github.com/wycats/handlebars.js/blob/master/FAQ.md) for known issues and common pitfalls.\n\n\nHandlebars in the Wild\n----------------------\n\n* [Assemble](http://assemble.io), by [@jonschlinkert](https://github.com/jonschlinkert)\n  and [@doowb](https://github.com/doowb), is a static site generator that uses Handlebars.js\n  as its template engine.\n* [CoSchedule](http://coschedule.com) An editorial calendar for WordPress that uses Handlebars.js\n* [Ember.js](http://www.emberjs.com) makes Handlebars.js the primary way to\n  structure your views, also with automatic data binding support.\n* [Ghost](https://ghost.org/) Just a blogging platform.\n* [handlebars_assets](http://github.com/leshill/handlebars_assets): A Rails Asset Pipeline gem\n  from Les Hill (@leshill).\n* [handlebars-helpers](https://github.com/assemble/handlebars-helpers) is an extensive library\n  with 100+ handlebars helpers.\n* [hbs](http://github.com/donpark/hbs): An Express.js view engine adapter for Handlebars.js,\n  from Don Park.\n* [koa-hbs](https://github.com/jwilm/koa-hbs): [koa](https://github.com/koajs/koa) generator based\n  renderer for Handlebars.js.\n* [jblotus](http://github.com/jblotus) created [http://tryhandlebarsjs.com](http://tryhandlebarsjs.com)\n  for anyone who would like to try out Handlebars.js in their browser.\n* [jQuery plugin](http://71104.github.io/jquery-handlebars/): allows you to use\n  Handlebars.js with [jQuery](http://jquery.com/).\n* [Lumbar](http://walmartlabs.github.io/lumbar) provides easy module-based template management for\n  handlebars projects.\n* [sammy.js](http://github.com/quirkey/sammy) by Aaron Quint, a.k.a. quirkey,\n  supports Handlebars.js as one of its template plugins.\n* [SproutCore](http://www.sproutcore.com) uses Handlebars.js as its main\n  templating engine, extending it with automatic data binding support.\n* [YUI](http://yuilibrary.com/yui/docs/handlebars/) implements a port of handlebars\n* [Swag](https://github.com/elving/swag) by [@elving](https://github.com/elving) is a growing collection of helpers for handlebars.js. Give your handlebars.js templates some swag son!\n* [DOMBars](https://github.com/blakeembrey/dombars) is a DOM-based templating engine built on the Handlebars parser and runtime\n\nExternal Resources\n------------------\n\n* [Gist about Synchronous and asynchronous loading of external handlebars templates](https://gist.github.com/2287070)\n\nHave a project using Handlebars? Send us a [pull request][pull-request]!\n\nLicense\n-------\nHandlebars.js is released under the MIT license.\n\n[bower-repo]: https://github.com/components/handlebars.js\n[builds-page]: http://builds.handlebarsjs.com.s3.amazonaws.com/bucket-listing.html?sort=lastmod&sortdir=desc\n[pull-request]: https://github.com/wycats/handlebars.js/pull/new/master\n',
371 silly resolved     bugs: { url: 'https://github.com/wycats/handlebars.js/issues' },
371 silly resolved     _id: 'handlebars@2.0.0',
371 silly resolved     _from: 'handlebars@2.0.0',
371 silly resolved     dist: { shasum: '55bd5a8031645ff99a7e08db994cb50122e1e660' },
371 silly resolved     _resolved: 'https://registry.npmjs.org/handlebars/-/handlebars-2.0.0.tgz' } ]
372 info install handlebars@2.0.0 into /usr/local/lib
373 info installOne handlebars@2.0.0
374 silly resolved [ { name: 'handlebars',
374 silly resolved     barename: 'handlebars',
374 silly resolved     version: '2.0.0',
374 silly resolved     description: 'Handlebars provides the power necessary to let you build semantic templates effectively with no frustration',
374 silly resolved     homepage: 'http://www.handlebarsjs.com/',
374 silly resolved     keywords: [ 'handlebars', 'mustache', 'template', 'html' ],
374 silly resolved     repository:
374 silly resolved      { type: 'git',
374 silly resolved        url: 'https://github.com/wycats/handlebars.js.git' },
374 silly resolved     author: { name: 'Yehuda Katz' },
374 silly resolved     license: 'MIT',
374 silly resolved     readmeFilename: 'README.markdown',
374 silly resolved     engines: { node: '>=0.4.7' },
374 silly resolved     dependencies: { optimist: '~0.3', 'uglify-js': '~2.3' },
374 silly resolved     optionalDependencies: { 'uglify-js': '~2.3' },
374 silly resolved     devDependencies:
374 silly resolved      { async: '~0.2.9',
374 silly resolved        'aws-sdk': '~1.5.0',
374 silly resolved        benchmark: '~1.0',
374 silly resolved        'dustjs-linkedin': '~2.0.2',
374 silly resolved        eco: '~1.1.0-rc-3',
374 silly resolved        'es6-module-packager': '1.x',
374 silly resolved        grunt: '~0.4.1',
374 silly resolved        'grunt-cli': '~0.1.10',
374 silly resolved        'grunt-contrib-clean': '~0.4.1',
374 silly resolved        'grunt-contrib-concat': '~0.3.0',
374 silly resolved        'grunt-contrib-connect': '~0.5.0',
374 silly resolved        'grunt-contrib-copy': '~0.4.1',
374 silly resolved        'grunt-contrib-jshint': '0.x',
374 silly resolved        'grunt-contrib-requirejs': '~0.4.1',
374 silly resolved        'grunt-contrib-uglify': '~0.2.2',
374 silly resolved        'grunt-contrib-watch': '~0.5.3',
374 silly resolved        'grunt-saucelabs': '8.x',
374 silly resolved        istanbul: '^0.3.0',
374 silly resolved        jison: '~0.3.0',
374 silly resolved        'keen.io': '0.0.3',
374 silly resolved        mocha: '~1.20.0',
374 silly resolved        mustache: '~0.7.2',
374 silly resolved        semver: '~2.1.0',
374 silly resolved        underscore: '~1.5.1' },
374 silly resolved     main: 'lib/index.js',
374 silly resolved     bin: { handlebars: 'bin/handlebars' },
374 silly resolved     scripts: { test: 'grunt' },
374 silly resolved     readme: '[![Travis Build Status](https://img.shields.io/travis/wycats/handlebars.js/master.svg)](https://travis-ci.org/wycats/handlebars.js)\n[![Selenium Test Status](https://saucelabs.com/buildstatus/handlebars)](https://saucelabs.com/u/handlebars)\n\nHandlebars.js\n=============\n\nHandlebars.js is an extension to the [Mustache templating\nlanguage](http://mustache.github.com/) created by Chris Wanstrath.\nHandlebars.js and Mustache are both logicless templating languages that\nkeep the view and the code separated like we all know they should be.\n\nCheckout the official Handlebars docs site at\n[http://www.handlebarsjs.com](http://www.handlebarsjs.com).\n\nInstalling\n----------\nInstalling Handlebars is easy. Simply download the package [from the official site](http://handlebarsjs.com/) or the [bower repository][bower-repo] and add it to your web pages (you should usually use the most recent version).\n\nAlternatively, if you prefer having the latest version of handlebars from\nthe \'master\' branch, passing builds of the \'master\' branch are automatically\npublished to S3. You may download the latest passing master build by grabbing\na `handlebars-latest.js` file from the [builds page][builds-page]. When the\nbuild is published, it is also available as a `handlebars-gitSHA.js` file on\nthe builds page if you need a version to refer to others.\n`handlebars-runtime.js` builds are also available.\n\n**Note**: The S3 builds page is provided as a convenience for the community,\nbut you should not use it for hosting Handlebars in production.\n\nUsage\n-----\nIn general, the syntax of Handlebars.js templates is a superset\nof Mustache templates. For basic syntax, check out the [Mustache\nmanpage](http://mustache.github.com/mustache.5.html).\n\nOnce you have a template, use the `Handlebars.compile` method to compile\nthe template into a function. The generated function takes a context\nargument, which will be used to render the template.\n\n```js\nvar source = "<p>Hello, my name is {{name}}. I am from {{hometown}}. I have " +\n             "{{kids.length}} kids:</p>" +\n             "<ul>{{#kids}}<li>{{name}} is {{age}}</li>{{/kids}}</ul>";\nvar template = Handlebars.compile(source);\n\nvar data = { "name": "Alan", "hometown": "Somewhere, TX",\n             "kids": [{"name": "Jimmy", "age": "12"}, {"name": "Sally", "age": "4"}]};\nvar result = template(data);\n\n// Would render:\n// <p>Hello, my name is Alan. I am from Somewhere, TX. I have 2 kids:</p>\n// <ul>\n//   <li>Jimmy is 12</li>\n//   <li>Sally is 4</li>\n// </ul>\n```\n\n\nRegistering Helpers\n-------------------\n\nYou can register helpers that Handlebars will use when evaluating your\ntemplate. Here\'s an example, which assumes that your objects have a URL\nembedded in them, as well as the text for a link:\n\n```js\nHandlebars.registerHelper(\'link_to\', function() {\n  return new Handlebars.SafeString("<a href=\'" + Handlebars.Utils.escapeExpression(this.url) + "\'>" + Handlebars.Utils.escapeExpression(this.body) + "</a>");\n});\n\nvar context = { posts: [{url: "/hello-world", body: "Hello World!"}] };\nvar source = "<ul>{{#posts}}<li>{{link_to}}</li>{{/posts}}</ul>"\n\nvar template = Handlebars.compile(source);\ntemplate(context);\n\n// Would render:\n//\n// <ul>\n//   <li><a href=\'/hello-world\'>Hello World!</a></li>\n// </ul>\n```\n\nHelpers take precedence over fields defined on the context. To access a field\nthat is masked by a helper, a path reference may be used. In the example above\na field named `link_to` on the `context` object would be referenced using:\n\n```\n{{./link_to}}\n```\n\nEscaping\n--------\n\nBy default, the `{{expression}}` syntax will escape its contents. This\nhelps to protect you against accidental XSS problems caused by malicious\ndata passed from the server as JSON.\n\nTo explicitly *not* escape the contents, use the triple-mustache\n(`{{{}}}`). You have seen this used in the above example.\n\n\nDifferences Between Handlebars.js and Mustache\n----------------------------------------------\nHandlebars.js adds a couple of additional features to make writing\ntemplates easier and also changes a tiny detail of how partials work.\n\n### Paths\n\nHandlebars.js supports an extended expression syntax that we call paths.\nPaths are made up of typical expressions and . characters. Expressions\nallow you to not only display data from the current context, but to\ndisplay data from contexts that are descendants and ancestors of the\ncurrent context.\n\nTo display data from descendant contexts, use the `.` character. So, for\nexample, if your data were structured like:\n\n```js\nvar data = {"person": { "name": "Alan" }, "company": {"name": "Rad, Inc." } };\n```\n\nYou could display the person\'s name from the top-level context with the\nfollowing expression:\n\n```\n{{person.name}}\n```\n\nYou can backtrack using `../`. For example, if you\'ve already traversed\ninto the person object you could still display the company\'s name with\nan expression like `{{../company.name}}`, so:\n\n```\n{{#with person}}{{name}} - {{../company.name}}{{/person}}\n```\n\nwould render:\n\n```\nAlan - Rad, Inc.\n```\n\n### Strings\n\nWhen calling a helper, you can pass paths or Strings as parameters. For\ninstance:\n\n```js\nHandlebars.registerHelper(\'link_to\', function(title, options) {\n  return "<a href=\'/posts" + this.url + "\'>" + title + "!</a>"\n});\n\nvar context = { posts: [{url: "/hello-world", body: "Hello World!"}] };\nvar source = \'<ul>{{#posts}}<li>{{{link_to "Post"}}}</li>{{/posts}}</ul>\'\n\nvar template = Handlebars.compile(source);\ntemplate(context);\n\n// Would render:\n//\n// <ul>\n//   <li><a href=\'/posts/hello-world\'>Post!</a></li>\n// </ul>\n```\n\nWhen you pass a String as a parameter to a helper, the literal String\ngets passed to the helper function.\n\n\n### Block Helpers\n\nHandlebars.js also adds the ability to define block helpers. Block\nhelpers are functions that can be called from anywhere in the template.\nHere\'s an example:\n\n```js\nvar source = "<ul>{{#people}}<li>{{#link}}{{name}}{{/link}}</li>{{/people}}</ul>";\nHandlebars.registerHelper(\'link\', function(options) {\n  return \'<a href="/people/\' + this.id + \'">\' + options.fn(this) + \'</a>\';\n});\nvar template = Handlebars.compile(source);\n\nvar data = { "people": [\n    { "name": "Alan", "id": 1 },\n    { "name": "Yehuda", "id": 2 }\n  ]};\ntemplate(data);\n\n// Should render:\n// <ul>\n//   <li><a href="/people/1">Alan</a></li>\n//   <li><a href="/people/2">Yehuda</a></li>\n// </ul>\n```\n\nWhenever the block helper is called it is given one or more parameters,\nany arguments that are passed in the helper in the call and an `options`\nobject containing the `fn` function which executes the block\'s child.\nThe block\'s current context may be accessed through `this`.\n\nBlock helpers have the same syntax as mustache sections but should not be\nconfused with one another. Sections are akin to an implicit `each` or\n`with` statement depending on the input data and helpers are explicit\npieces of code that are free to implement whatever behavior they like.\nThe [mustache spec](http://mustache.github.io/mustache.5.html)\ndefines the exact behavior of sections. In the case of name conflicts,\nhelpers are given priority.\n\n### Partials\n\nYou can register additional templates as partials, which will be used by\nHandlebars when it encounters a partial (`{{> partialName}}`). Partials\ncan either be String templates or compiled template functions. Here\'s an\nexample:\n\n```js\nvar source = "<ul>{{#people}}<li>{{> link}}</li>{{/people}}</ul>";\n\nHandlebars.registerPartial(\'link\', \'<a href="/people/{{id}}">{{name}}</a>\')\nvar template = Handlebars.compile(source);\n\nvar data = { "people": [\n    { "name": "Alan", "id": 1 },\n    { "name": "Yehuda", "id": 2 }\n  ]};\n\ntemplate(data);\n\n// Should render:\n// <ul>\n//   <li><a href="/people/1">Alan</a></li>\n//   <li><a href="/people/2">Yehuda</a></li>\n// </ul>\n```\n\n### Comments\n\nYou can add comments to your templates with the following syntax:\n\n```js\n{{! This is a comment }}\n```\n\nYou can also use real html comments if you want them to end up in the output.\n\n```html\n<div>\n    {{! This comment will not end up in the output }}\n    <!-- This comment will show up in the output -->\n</div>\n```\n\n\n### Compatibility\n\nThere are a few Mustache behaviors that Handlebars does not implement.\n- Handlebars deviates from Mustache slightly in that it does not perform recursive lookup by default. The compile time `compat` flag must be set to enable this functionality. Users should note that there is a performance cost for enabling this flag. The exact cost varies by template, but it\'s recommended that performance sensitive operations should avoid this mode and instead opt for explicit path references.\n- The optional Mustache-style lambdas are not supported. Instead Handlebars provides it\'s own lambda resolution that follows the behaviors of helpers.\n- Alternative delimeters are not supported.\n\n\nPrecompiling Templates\n----------------------\n\nHandlebars allows templates to be precompiled and included as javascript\ncode rather than the handlebars template allowing for faster startup time.\n\n### Installation\nThe precompiler script may be installed via npm using the `npm install -g handlebars`\ncommand.\n\n### Usage\n\n<pre>\nPrecompile handlebar templates.\nUsage: handlebars template...\n\nOptions:\n  -a, --amd            Create an AMD format function (allows loading with RequireJS)          [boolean]\n  -f, --output         Output File                                                            [string]\n  -k, --known          Known helpers                                                          [string]\n  -o, --knownOnly      Known helpers only                                                     [boolean]\n  -m, --min            Minimize output                                                        [boolean]\n  -s, --simple         Output template function only.                                         [boolean]\n  -r, --root           Template root. Base value that will be stripped from template names.   [string]\n  -c, --commonjs       Exports CommonJS style, path to Handlebars module                      [string]\n  -h, --handlebarPath  Path to handlebar.js (only valid for amd-style)                        [string]\n  -n, --namespace      Template namespace                                                     [string]\n  -p, --partial        Compiling a partial template                                           [boolean]\n  -d, --data           Include data when compiling                                            [boolean]\n  -e, --extension      Template extension.                                                    [string]\n  -b, --bom            Removes the BOM (Byte Order Mark) from the beginning of the templates. [boolean]\n</pre>\n\nIf using the precompiler\'s normal mode, the resulting templates will be\nstored to the `Handlebars.templates` object using the relative template\nname sans the extension. These templates may be executed in the same\nmanner as templates.\n\nIf using the simple mode the precompiler will generate a single\njavascript method. To execute this method it must be passed to\nthe `Handlebars.template` method and the resulting object may be used as normal.\n\n### Optimizations\n\n- Rather than using the full _handlebars.js_ library, implementations that\n  do not need to compile templates at runtime may include _handlebars.runtime.js_\n  whose min+gzip size is approximately 1k.\n- If a helper is known to exist in the target environment they may be defined\n  using the `--known name` argument may be used to optimize accesses to these\n  helpers for size and speed.\n- When all helpers are known in advance the `--knownOnly` argument may be used\n  to optimize all block helper references.\n- Implementations that do not use `@data` variables can improve performance of\n  iteration centric templates by specifying `{data: false}` in the compiler options.\n\nSupported Environments\n----------------------\n\nHandlebars has been designed to work in any ECMAScript 3 environment. This includes\n\n- Node.js\n- Chrome\n- Firefox\n- Safari 5+\n- Opera 11+\n- IE 6+\n\nOlder versions and other runtimes are likely to work but have not been formally\ntested. The compiler requires `JSON.stringify` to be implemented natively or via a polyfill. If using the precompiler this is not necessary.\n\n[![Selenium Test Status](https://saucelabs.com/browser-matrix/handlebars.svg)](https://saucelabs.com/u/handlebars)\n\nPerformance\n-----------\n\nIn a rough performance test, precompiled Handlebars.js templates (in\nthe original version of Handlebars.js) rendered in about half the\ntime of Mustache templates. It would be a shame if it were any other\nway, since they were precompiled, but the difference in architecture\ndoes have some big performance advantages. Justin Marney, a.k.a.\n[gotascii](http://github.com/gotascii), confirmed that with an\n[independent test](http://sorescode.com/2010/09/12/benchmarks.html). The\nrewritten Handlebars (current version) is faster than the old version,\nwith many [performance tests](https://travis-ci.org/wycats/handlebars.js/builds/33392182#L538) being 5 to 7 times faster than the Mustache equivalent.\n\n\nUpgrading\n---------\n\nSee [release-notes.md](https://github.com/wycats/handlebars.js/blob/master/release-notes.md) for upgrade notes.\n\nKnown Issues\n------------\n\nSee [FAQ.md](https://github.com/wycats/handlebars.js/blob/master/FAQ.md) for known issues and common pitfalls.\n\n\nHandlebars in the Wild\n----------------------\n\n* [Assemble](http://assemble.io), by [@jonschlinkert](https://github.com/jonschlinkert)\n  and [@doowb](https://github.com/doowb), is a static site generator that uses Handlebars.js\n  as its template engine.\n* [CoSchedule](http://coschedule.com) An editorial calendar for WordPress that uses Handlebars.js\n* [Ember.js](http://www.emberjs.com) makes Handlebars.js the primary way to\n  structure your views, also with automatic data binding support.\n* [Ghost](https://ghost.org/) Just a blogging platform.\n* [handlebars_assets](http://github.com/leshill/handlebars_assets): A Rails Asset Pipeline gem\n  from Les Hill (@leshill).\n* [handlebars-helpers](https://github.com/assemble/handlebars-helpers) is an extensive library\n  with 100+ handlebars helpers.\n* [hbs](http://github.com/donpark/hbs): An Express.js view engine adapter for Handlebars.js,\n  from Don Park.\n* [koa-hbs](https://github.com/jwilm/koa-hbs): [koa](https://github.com/koajs/koa) generator based\n  renderer for Handlebars.js.\n* [jblotus](http://github.com/jblotus) created [http://tryhandlebarsjs.com](http://tryhandlebarsjs.com)\n  for anyone who would like to try out Handlebars.js in their browser.\n* [jQuery plugin](http://71104.github.io/jquery-handlebars/): allows you to use\n  Handlebars.js with [jQuery](http://jquery.com/).\n* [Lumbar](http://walmartlabs.github.io/lumbar) provides easy module-based template management for\n  handlebars projects.\n* [sammy.js](http://github.com/quirkey/sammy) by Aaron Quint, a.k.a. quirkey,\n  supports Handlebars.js as one of its template plugins.\n* [SproutCore](http://www.sproutcore.com) uses Handlebars.js as its main\n  templating engine, extending it with automatic data binding support.\n* [YUI](http://yuilibrary.com/yui/docs/handlebars/) implements a port of handlebars\n* [Swag](https://github.com/elving/swag) by [@elving](https://github.com/elving) is a growing collection of helpers for handlebars.js. Give your handlebars.js templates some swag son!\n* [DOMBars](https://github.com/blakeembrey/dombars) is a DOM-based templating engine built on the Handlebars parser and runtime\n\nExternal Resources\n------------------\n\n* [Gist about Synchronous and asynchronous loading of external handlebars templates](https://gist.github.com/2287070)\n\nHave a project using Handlebars? Send us a [pull request][pull-request]!\n\nLicense\n-------\nHandlebars.js is released under the MIT license.\n\n[bower-repo]: https://github.com/components/handlebars.js\n[builds-page]: http://builds.handlebarsjs.com.s3.amazonaws.com/bucket-listing.html?sort=lastmod&sortdir=desc\n[pull-request]: https://github.com/wycats/handlebars.js/pull/new/master\n',
374 silly resolved     bugs: { url: 'https://github.com/wycats/handlebars.js/issues' },
374 silly resolved     _id: 'handlebars@2.0.0',
374 silly resolved     _from: 'handlebars@2.0.0',
374 silly resolved     dist: { shasum: '55bd5a8031645ff99a7e08db994cb50122e1e660' },
374 silly resolved     _resolved: 'https://registry.npmjs.org/handlebars/-/handlebars-2.0.0.tgz' } ]
375 info install handlebars@2.0.0 into /usr/local/lib/node_modules/bower
376 info installOne handlebars@2.0.0
377 info /usr/local/lib/node_modules/handlebars unbuild
378 info /usr/local/lib/node_modules/bower/node_modules/handlebars unbuild
379 info preuninstall handlebars@2.0.0-alpha.2
380 info preuninstall handlebars@2.0.0
381 info uninstall handlebars@2.0.0-alpha.2
382 info uninstall handlebars@2.0.0
383 verbose true,/usr/local/lib/node_modules,/usr/local/lib/node_modules unbuild handlebars@2.0.0-alpha.2
384 verbose /usr/local/bin,[object Object] binRoot
385 verbose false,/usr/local/lib/node_modules,/usr/local/lib/node_modules/bower/node_modules unbuild handlebars@2.0.0
386 verbose /usr/local/lib/node_modules/bower/node_modules/.bin,[object Object] binRoot
387 info postuninstall handlebars@2.0.0-alpha.2
388 info postuninstall handlebars@2.0.0
389 verbose tar unpack /Users/ironweber/.npm/handlebars/2.0.0/package.tgz
390 silly lockFile 483b433f-ocal-lib-node-modules-handlebars tar:///usr/local/lib/node_modules/handlebars
391 verbose lock tar:///usr/local/lib/node_modules/handlebars /Users/ironweber/.npm/483b433f-ocal-lib-node-modules-handlebars.lock
392 silly lockFile 69b7d96a-npm-handlebars-2-0-0-package-tgz tar:///Users/ironweber/.npm/handlebars/2.0.0/package.tgz
393 verbose lock tar:///Users/ironweber/.npm/handlebars/2.0.0/package.tgz /Users/ironweber/.npm/69b7d96a-npm-handlebars-2-0-0-package-tgz.lock
394 silly gunzTarPerm modes [ '755', '644' ]
395 silly gunzTarPerm extractEntry package.json
396 silly gunzTarPerm extractEntry .npmignore
397 silly gunzTarPerm extractEntry LICENSE
398 verbose tar unpack /Users/ironweber/.npm/handlebars/2.0.0/package.tgz
399 silly lockFile 6e2c6179-es-bower-node-modules-handlebars tar:///usr/local/lib/node_modules/bower/node_modules/handlebars
400 verbose lock tar:///usr/local/lib/node_modules/bower/node_modules/handlebars /Users/ironweber/.npm/6e2c6179-es-bower-node-modules-handlebars.lock
401 silly lockFile 69b7d96a-npm-handlebars-2-0-0-package-tgz tar:///Users/ironweber/.npm/handlebars/2.0.0/package.tgz
402 verbose lock tar:///Users/ironweber/.npm/handlebars/2.0.0/package.tgz /Users/ironweber/.npm/69b7d96a-npm-handlebars-2-0-0-package-tgz.lock
403 silly gunzTarPerm extractEntry runtime.js
404 silly gunzTarPerm extractEntry FAQ.md
405 silly gunzTarPerm extractEntry .gitmodules
406 silly gunzTarPerm extractEntry README.markdown
407 silly gunzTarPerm extractEntry .istanbul.yml
408 silly gunzTarPerm extractEntry coverage/coverage.json
409 silly gunzTarPerm extractEntry coverage/lcov-report/prettify.js
410 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/base.js.html
411 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/ast.js.html
412 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/base.js.html
413 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/compiler.js.html
414 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/helpers.js.html
415 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/index.html
416 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/javascript-compiler.js.html
417 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/parser.js.html
418 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/printer.js.html
419 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/visitor.js.html
420 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/exception.js.html
421 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/index.html
422 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/runtime.js.html
423 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/safe-string.js.html
424 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/utils.js.html
425 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars.js.html
426 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars.runtime.js.html
427 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/index.html
428 silly gunzTarPerm extractEntry coverage/lcov-report/index.html
429 silly gunzTarPerm extractEntry coverage/lcov-report/lib/index.html
430 silly gunzTarPerm extractEntry coverage/lcov-report/lib/index.js.html
431 silly gunzTarPerm extractEntry coverage/lcov-report/lib/precompiler.js.html
432 silly gunzTarPerm extractEntry coverage/lcov-report/prettify.css
433 silly gunzTarPerm extractEntry coverage/lcov-report/spec/precompiler.js.html
434 silly gunzTarPerm extractEntry coverage/lcov-report/spec/ast.js.html
435 silly gunzTarPerm extractEntry coverage/lcov-report/spec/blocks.js.html
436 silly gunzTarPerm extractEntry coverage/lcov-report/spec/builtins.js.html
437 silly gunzTarPerm extractEntry coverage/lcov-report/spec/data.js.html
438 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/browser.js.html
439 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/common.js.html
440 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/index.html
441 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/node.js.html
442 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/runner.js.html
443 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/runtime.js.html
444 silly gunzTarPerm extractEntry coverage/lcov-report/spec/helpers.js.html
445 silly gunzTarPerm extractEntry coverage/lcov-report/spec/index.html
446 silly gunzTarPerm extractEntry coverage/lcov-report/spec/javascript-compiler.js.html
447 silly gunzTarPerm extractEntry coverage/lcov-report/spec/parser.js.html
448 silly gunzTarPerm extractEntry coverage/lcov-report/spec/partials.js.html
449 silly gunzTarPerm extractEntry coverage/lcov-report/spec/basic.js.html
450 silly gunzTarPerm extractEntry coverage/lcov-report/spec/regressions.js.html
451 silly gunzTarPerm extractEntry coverage/lcov-report/spec/require.js.html
452 silly gunzTarPerm extractEntry coverage/lcov-report/spec/runtime.js.html
453 silly gunzTarPerm extractEntry coverage/lcov-report/spec/spec.js.html
454 silly gunzTarPerm extractEntry coverage/lcov-report/spec/string-params.js.html
455 silly gunzTarPerm extractEntry coverage/lcov-report/spec/subexpressions.js.html
456 silly gunzTarPerm extractEntry coverage/lcov-report/spec/tokenizer.js.html
457 silly gunzTarPerm extractEntry coverage/lcov-report/spec/track-ids.js.html
458 silly gunzTarPerm extractEntry coverage/lcov-report/spec/utils.js.html
459 silly gunzTarPerm extractEntry coverage/lcov-report/spec/whitespace-control.js.html
460 silly gunzTarPerm extractEntry coverage/lcov.info
461 silly gunzTarPerm extractEntry dist/handlebars.amd.js
462 silly gunzTarPerm extractEntry dist/handlebars.amd.min.js
463 silly gunzTarPerm extractEntry dist/handlebars.js
464 silly gunzTarPerm extractEntry dist/handlebars.min.js
465 silly gunzTarPerm extractEntry dist/handlebars.runtime.amd.js
466 silly gunzTarPerm extractEntry dist/handlebars.runtime.amd.min.js
467 silly gunzTarPerm extractEntry dist/handlebars.runtime.js
468 silly gunzTarPerm extractEntry dist/handlebars.runtime.min.js
469 silly gunzTarPerm extractEntry dist/amd/handlebars.js
470 silly gunzTarPerm extractEntry dist/amd/handlebars.runtime.js
471 silly gunzTarPerm extractEntry dist/amd/precompiler.js
472 silly gunzTarPerm extractEntry dist/amd/handlebars/base.js
473 silly gunzTarPerm extractEntry dist/amd/handlebars/exception.js
474 silly gunzTarPerm extractEntry dist/amd/handlebars/runtime.js
475 silly gunzTarPerm extractEntry dist/amd/handlebars/safe-string.js
476 silly gunzTarPerm extractEntry dist/amd/handlebars/utils.js
477 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/ast.js
478 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/base.js
479 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/compiler.js
480 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/helpers.js
481 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/javascript-compiler.js
482 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/parser.js
483 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/printer.js
484 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/visitor.js
485 silly gunzTarPerm extractEntry dist/cjs/handlebars.js
486 silly gunzTarPerm extractEntry dist/cjs/handlebars.runtime.js
487 silly gunzTarPerm extractEntry dist/cjs/precompiler.js
488 silly gunzTarPerm extractEntry dist/cjs/handlebars/base.js
489 silly gunzTarPerm extractEntry dist/cjs/handlebars/exception.js
490 silly gunzTarPerm extractEntry dist/cjs/handlebars/runtime.js
491 silly gunzTarPerm extractEntry dist/cjs/handlebars/safe-string.js
492 silly gunzTarPerm extractEntry dist/cjs/handlebars/utils.js
493 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/ast.js
494 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/base.js
495 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/compiler.js
496 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/helpers.js
497 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/javascript-compiler.js
498 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/parser.js
499 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/printer.js
500 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/visitor.js
501 silly gunzTarPerm extractEntry lib/handlebars.js
502 silly gunzTarPerm extractEntry lib/handlebars.runtime.js
503 silly gunzTarPerm extractEntry lib/index.js
504 silly gunzTarPerm extractEntry lib/precompiler.js
505 silly gunzTarPerm extractEntry lib/handlebars/base.js
506 silly gunzTarPerm extractEntry lib/handlebars/exception.js
507 silly gunzTarPerm extractEntry lib/handlebars/runtime.js
508 silly gunzTarPerm extractEntry lib/handlebars/safe-string.js
509 silly gunzTarPerm extractEntry lib/handlebars/utils.js
510 silly gunzTarPerm extractEntry lib/handlebars/compiler/ast.js
511 silly gunzTarPerm extractEntry lib/handlebars/compiler/base.js
512 silly gunzTarPerm extractEntry lib/handlebars/compiler/compiler.js
513 silly gunzTarPerm extractEntry lib/handlebars/compiler/helpers.js
514 silly gunzTarPerm extractEntry lib/handlebars/compiler/javascript-compiler.js
515 silly gunzTarPerm extractEntry lib/handlebars/compiler/parser.js
516 silly gunzTarPerm extractEntry lib/handlebars/compiler/printer.js
517 silly gunzTarPerm extractEntry lib/handlebars/compiler/visitor.js
518 silly gunzTarPerm extractEntry CONTRIBUTING.md
519 silly gunzTarPerm extractEntry print-script
520 silly gunzTarPerm extractEntry release-notes.md
521 silly gunzTarPerm extractEntry bin/handlebars
522 silly lockFile 483b433f-ocal-lib-node-modules-handlebars tar:///usr/local/lib/node_modules/handlebars
523 silly lockFile 483b433f-ocal-lib-node-modules-handlebars tar:///usr/local/lib/node_modules/handlebars
524 silly lockFile 69b7d96a-npm-handlebars-2-0-0-package-tgz tar:///Users/ironweber/.npm/handlebars/2.0.0/package.tgz
525 silly lockFile 69b7d96a-npm-handlebars-2-0-0-package-tgz tar:///Users/ironweber/.npm/handlebars/2.0.0/package.tgz
526 info preinstall handlebars@2.0.0
527 verbose readDependencies using package.json deps
528 verbose readDependencies using package.json deps
529 verbose cache add [ 'optimist@~0.3', null ]
530 verbose cache add name=undefined spec="optimist@~0.3" args=["optimist@~0.3",null]
531 verbose parsed url { protocol: null,
531 verbose parsed url   slashes: null,
531 verbose parsed url   auth: null,
531 verbose parsed url   host: null,
531 verbose parsed url   port: null,
531 verbose parsed url   hostname: null,
531 verbose parsed url   hash: null,
531 verbose parsed url   search: null,
531 verbose parsed url   query: null,
531 verbose parsed url   pathname: 'optimist@~0.3',
531 verbose parsed url   path: 'optimist@~0.3',
531 verbose parsed url   href: 'optimist@~0.3' }
532 verbose cache add name="optimist" spec="~0.3" args=["optimist","~0.3"]
533 verbose parsed url { protocol: null,
533 verbose parsed url   slashes: null,
533 verbose parsed url   auth: null,
533 verbose parsed url   host: null,
533 verbose parsed url   port: null,
533 verbose parsed url   hostname: null,
533 verbose parsed url   hash: null,
533 verbose parsed url   search: null,
533 verbose parsed url   query: null,
533 verbose parsed url   pathname: '~0.3',
533 verbose parsed url   path: '~0.3',
533 verbose parsed url   href: '~0.3' }
534 verbose addNamed [ 'optimist', '~0.3' ]
535 verbose addNamed [ null, '>=0.3.0-0 <0.4.0-0' ]
536 silly lockFile c01d0ea5-optimist-0-3 optimist@~0.3
537 verbose lock optimist@~0.3 /Users/ironweber/.npm/c01d0ea5-optimist-0-3.lock
538 verbose cache add [ 'uglify-js@~2.3', null ]
539 verbose cache add name=undefined spec="uglify-js@~2.3" args=["uglify-js@~2.3",null]
540 verbose parsed url { protocol: null,
540 verbose parsed url   slashes: null,
540 verbose parsed url   auth: null,
540 verbose parsed url   host: null,
540 verbose parsed url   port: null,
540 verbose parsed url   hostname: null,
540 verbose parsed url   hash: null,
540 verbose parsed url   search: null,
540 verbose parsed url   query: null,
540 verbose parsed url   pathname: 'uglify-js@~2.3',
540 verbose parsed url   path: 'uglify-js@~2.3',
540 verbose parsed url   href: 'uglify-js@~2.3' }
541 verbose cache add name="uglify-js" spec="~2.3" args=["uglify-js","~2.3"]
542 verbose parsed url { protocol: null,
542 verbose parsed url   slashes: null,
542 verbose parsed url   auth: null,
542 verbose parsed url   host: null,
542 verbose parsed url   port: null,
542 verbose parsed url   hostname: null,
542 verbose parsed url   hash: null,
542 verbose parsed url   search: null,
542 verbose parsed url   query: null,
542 verbose parsed url   pathname: '~2.3',
542 verbose parsed url   path: '~2.3',
542 verbose parsed url   href: '~2.3' }
543 verbose addNamed [ 'uglify-js', '~2.3' ]
544 verbose addNamed [ null, '>=2.3.0-0 <2.4.0-0' ]
545 silly lockFile fb0c1b8a-uglify-js-2-3 uglify-js@~2.3
546 verbose lock uglify-js@~2.3 /Users/ironweber/.npm/fb0c1b8a-uglify-js-2-3.lock
547 silly addNameRange { name: 'optimist', range: '>=0.3.0-0 <0.4.0-0', hasData: false }
548 silly addNameRange { name: 'uglify-js',
548 silly addNameRange   range: '>=2.3.0-0 <2.4.0-0',
548 silly addNameRange   hasData: false }
549 verbose url raw optimist
550 verbose url resolving [ 'https://registry.npmjs.org/', './optimist' ]
551 verbose url resolved https://registry.npmjs.org/optimist
552 info trying registry request attempt 1 at 16:57:14
553 verbose etag "C95FUOG6062DPYG0N3TU8F94I"
554 http GET https://registry.npmjs.org/optimist
555 verbose url raw uglify-js
556 verbose url resolving [ 'https://registry.npmjs.org/', './uglify-js' ]
557 verbose url resolved https://registry.npmjs.org/uglify-js
558 info trying registry request attempt 1 at 16:57:14
559 verbose etag "28QD9KVJ1DG8RJTOXV72F1LU2"
560 http GET https://registry.npmjs.org/uglify-js
561 http 304 https://registry.npmjs.org/optimist
562 silly registry.get cb [ 304,
562 silly registry.get   { date: 'Sat, 04 Oct 2014 23:57:14 GMT',
562 silly registry.get     server: 'Apache',
562 silly registry.get     via: '1.1 varnish',
562 silly registry.get     'last-modified': 'Sat, 04 Oct 2014 23:57:05 GMT',
562 silly registry.get     'cache-control': 'max-age=60',
562 silly registry.get     etag: '"C95FUOG6062DPYG0N3TU8F94I"',
562 silly registry.get     'x-served-by': 'cache-sjc3121-SJC',
562 silly registry.get     'x-cache': 'HIT',
562 silly registry.get     'x-cache-hits': '2',
562 silly registry.get     'x-timer': 'S1412467034.685709,VS0,VE0',
562 silly registry.get     vary: 'Accept',
562 silly registry.get     'content-length': '0',
562 silly registry.get     'keep-alive': 'timeout=10, max=50',
562 silly registry.get     connection: 'Keep-Alive' } ]
563 verbose etag optimist from cache
564 http 304 https://registry.npmjs.org/uglify-js
565 silly registry.get cb [ 304,
565 silly registry.get   { date: 'Sat, 04 Oct 2014 23:57:14 GMT',
565 silly registry.get     server: 'Apache',
565 silly registry.get     via: '1.1 varnish',
565 silly registry.get     'last-modified': 'Sat, 04 Oct 2014 23:57:14 GMT',
565 silly registry.get     'cache-control': 'max-age=60',
565 silly registry.get     etag: '"28QD9KVJ1DG8RJTOXV72F1LU2"',
565 silly registry.get     'x-served-by': 'cache-sjc3125-SJC',
565 silly registry.get     'x-cache': 'HIT',
565 silly registry.get     'x-cache-hits': '1',
565 silly registry.get     'x-timer': 'S1412467034.685595,VS0,VE0',
565 silly registry.get     vary: 'Accept',
565 silly registry.get     'content-length': '0',
565 silly registry.get     'keep-alive': 'timeout=10, max=50',
565 silly registry.get     connection: 'Keep-Alive' } ]
566 verbose etag uglify-js from cache
567 silly gunzTarPerm modes [ '755', '644' ]
568 silly addNameRange number 2 { name: 'uglify-js', range: '>=2.3.0-0 <2.4.0-0', hasData: true }
569 silly addNameRange versions [ 'uglify-js',
569 silly addNameRange   [ '0.0.1',
569 silly addNameRange     '0.0.2',
569 silly addNameRange     '0.0.3',
569 silly addNameRange     '0.0.4',
569 silly addNameRange     '0.0.5',
569 silly addNameRange     '1.0.1',
569 silly addNameRange     '1.0.2',
569 silly addNameRange     '1.0.3',
569 silly addNameRange     '1.0.4',
569 silly addNameRange     '1.0.5',
569 silly addNameRange     '1.0.6',
569 silly addNameRange     '1.0.7',
569 silly addNameRange     '1.1.0',
569 silly addNameRange     '1.1.1',
569 silly addNameRange     '1.2.0',
569 silly addNameRange     '1.2.1',
569 silly addNameRange     '1.2.2',
569 silly addNameRange     '1.2.3',
569 silly addNameRange     '1.2.4',
569 silly addNameRange     '1.2.5',
569 silly addNameRange     '1.2.6',
569 silly addNameRange     '1.3.0',
569 silly addNameRange     '1.3.1',
569 silly addNameRange     '1.3.2',
569 silly addNameRange     '1.3.3',
569 silly addNameRange     '1.3.4',
569 silly addNameRange     '2.2.0',
569 silly addNameRange     '2.2.1',
569 silly addNameRange     '2.2.2',
569 silly addNameRange     '2.2.3',
569 silly addNameRange     '2.2.4',
569 silly addNameRange     '2.2.5',
569 silly addNameRange     '2.3.0',
569 silly addNameRange     '2.3.1',
569 silly addNameRange     '2.3.2',
569 silly addNameRange     '2.3.3',
569 silly addNameRange     '2.3.4',
569 silly addNameRange     '2.3.5',
569 silly addNameRange     '2.3.6',
569 silly addNameRange     '1.3.5',
569 silly addNameRange     '2.4.0',
569 silly addNameRange     '2.4.1',
569 silly addNameRange     '2.4.2',
569 silly addNameRange     '2.4.3',
569 silly addNameRange     '2.4.4',
569 silly addNameRange     '2.4.5',
569 silly addNameRange     '2.4.6',
569 silly addNameRange     '2.4.7',
569 silly addNameRange     '2.4.8',
569 silly addNameRange     '2.4.9',
569 silly addNameRange     '2.4.10',
569 silly addNameRange     '2.4.11',
569 silly addNameRange     '2.4.12',
569 silly addNameRange     '2.4.13',
569 silly addNameRange     '2.4.14',
569 silly addNameRange     '2.4.15' ] ]
570 verbose addNamed [ 'uglify-js', '2.3.6' ]
571 verbose addNamed [ '2.3.6', '2.3.6' ]
572 silly lockFile a40be02f-uglify-js-2-3-6 uglify-js@2.3.6
573 verbose lock uglify-js@2.3.6 /Users/ironweber/.npm/a40be02f-uglify-js-2-3-6.lock
574 silly addNameRange number 2 { name: 'optimist', range: '>=0.3.0-0 <0.4.0-0', hasData: true }
575 silly addNameRange versions [ 'optimist',
575 silly addNameRange   [ '0.0.1',
575 silly addNameRange     '0.0.2',
575 silly addNameRange     '0.0.4',
575 silly addNameRange     '0.0.5',
575 silly addNameRange     '0.0.6',
575 silly addNameRange     '0.0.7',
575 silly addNameRange     '0.1.0',
575 silly addNameRange     '0.1.1',
575 silly addNameRange     '0.1.2',
575 silly addNameRange     '0.1.3',
575 silly addNameRange     '0.1.4',
575 silly addNameRange     '0.1.5',
575 silly addNameRange     '0.1.6',
575 silly addNameRange     '0.1.7',
575 silly addNameRange     '0.1.8',
575 silly addNameRange     '0.1.9',
575 silly addNameRange     '0.0.3',
575 silly addNameRange     '0.2.0',
575 silly addNameRange     '0.2.1',
575 silly addNameRange     '0.2.2',
575 silly addNameRange     '0.2.3',
575 silly addNameRange     '0.2.4',
575 silly addNameRange     '0.2.5',
575 silly addNameRange     '0.2.6',
575 silly addNameRange     '0.2.7',
575 silly addNameRange     '0.2.8',
575 silly addNameRange     '0.3.0',
575 silly addNameRange     '0.3.1',
575 silly addNameRange     '0.3.3',
575 silly addNameRange     '0.3.4',
575 silly addNameRange     '0.3.5',
575 silly addNameRange     '0.3.6',
575 silly addNameRange     '0.3.7',
575 silly addNameRange     '0.4.0',
575 silly addNameRange     '0.5.0',
575 silly addNameRange     '0.5.1',
575 silly addNameRange     '0.5.2',
575 silly addNameRange     '0.6.0',
575 silly addNameRange     '0.6.1' ] ]
576 verbose addNamed [ 'optimist', '0.3.7' ]
577 verbose addNamed [ '0.3.7', '0.3.7' ]
578 silly lockFile 090e1d8d-optimist-0-3-7 optimist@0.3.7
579 verbose lock optimist@0.3.7 /Users/ironweber/.npm/090e1d8d-optimist-0-3-7.lock
580 silly gunzTarPerm extractEntry package.json
581 silly gunzTarPerm extractEntry .npmignore
582 silly gunzTarPerm extractEntry LICENSE
583 silly lockFile 090e1d8d-optimist-0-3-7 optimist@0.3.7
584 silly lockFile 090e1d8d-optimist-0-3-7 optimist@0.3.7
585 silly lockFile a40be02f-uglify-js-2-3-6 uglify-js@2.3.6
586 silly lockFile a40be02f-uglify-js-2-3-6 uglify-js@2.3.6
587 silly lockFile c01d0ea5-optimist-0-3 optimist@~0.3
588 silly lockFile c01d0ea5-optimist-0-3 optimist@~0.3
589 silly lockFile fb0c1b8a-uglify-js-2-3 uglify-js@~2.3
590 silly lockFile fb0c1b8a-uglify-js-2-3 uglify-js@~2.3
591 silly gunzTarPerm extractEntry runtime.js
592 silly gunzTarPerm extractEntry FAQ.md
593 silly resolved [ { name: 'optimist',
593 silly resolved     version: '0.3.7',
593 silly resolved     description: 'Light-weight option parsing with an argv hash. No optstrings attached.',
593 silly resolved     main: './index.js',
593 silly resolved     dependencies: { wordwrap: '~0.0.2' },
593 silly resolved     devDependencies: { hashish: '~0.0.4', tap: '~0.4.0' },
593 silly resolved     scripts: { test: 'tap ./test/*.js' },
593 silly resolved     repository:
593 silly resolved      { type: 'git',
593 silly resolved        url: 'http://github.com/substack/node-optimist.git' },
593 silly resolved     keywords:
593 silly resolved      [ 'argument',
593 silly resolved        'args',
593 silly resolved        'option',
593 silly resolved        'parser',
593 silly resolved        'parsing',
593 silly resolved        'cli',
593 silly resolved        'command' ],
593 silly resolved     author:
593 silly resolved      { name: 'James Halliday',
593 silly resolved        email: 'mail@substack.net',
593 silly resolved        url: 'http://substack.net' },
593 silly resolved     license: 'MIT/X11',
593 silly resolved     engine: { node: '>=0.4' },
593 silly resolved     readme: 'optimist\n========\n\nOptimist is a node.js library for option parsing for people who hate option\nparsing. More specifically, this module is for people who like all the --bells\nand -whistlz of program usage but think optstrings are a waste of time.\n\nWith optimist, option parsing doesn\'t have to suck (as much).\n\n[![build status](https://secure.travis-ci.org/substack/node-optimist.png)](http://travis-ci.org/substack/node-optimist)\n\nexamples\n========\n\nWith Optimist, the options are just a hash! No optstrings attached.\n-------------------------------------------------------------------\n\nxup.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\').argv;\n\nif (argv.rif - 5 * argv.xup > 7.138) {\n    console.log(\'Buy more riffiwobbles\');\n}\nelse {\n    console.log(\'Sell the xupptumblers\');\n}\n````\n\n***\n\n    $ ./xup.js --rif=55 --xup=9.52\n    Buy more riffiwobbles\n    \n    $ ./xup.js --rif 12 --xup 8.1\n    Sell the xupptumblers\n\n![This one\'s optimistic.](http://substack.net/images/optimistic.png)\n\nBut wait! There\'s more! You can do short options:\n-------------------------------------------------\n \nshort.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\').argv;\nconsole.log(\'(%d,%d)\', argv.x, argv.y);\n````\n\n***\n\n    $ ./short.js -x 10 -y 21\n    (10,21)\n\nAnd booleans, both long and short (and grouped):\n----------------------------------\n\nbool.js:\n\n````javascript\n#!/usr/bin/env node\nvar util = require(\'util\');\nvar argv = require(\'optimist\').argv;\n\nif (argv.s) {\n    util.print(argv.fr ? \'Le chat dit: \' : \'The cat says: \');\n}\nconsole.log(\n    (argv.fr ? \'miaou\' : \'meow\') + (argv.p ? \'.\' : \'\')\n);\n````\n\n***\n\n    $ ./bool.js -s\n    The cat says: meow\n    \n    $ ./bool.js -sp\n    The cat says: meow.\n\n    $ ./bool.js -sp --fr\n    Le chat dit: miaou.\n\nAnd non-hypenated options too! Just use `argv._`!\n-------------------------------------------------\n \nnonopt.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\').argv;\nconsole.log(\'(%d,%d)\', argv.x, argv.y);\nconsole.log(argv._);\n````\n\n***\n\n    $ ./nonopt.js -x 6.82 -y 3.35 moo\n    (6.82,3.35)\n    [ \'moo\' ]\n    \n    $ ./nonopt.js foo -x 0.54 bar -y 1.12 baz\n    (0.54,1.12)\n    [ \'foo\', \'bar\', \'baz\' ]\n\nPlus, Optimist comes with .usage() and .demand()!\n-------------------------------------------------\n\ndivide.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .usage(\'Usage: $0 -x [num] -y [num]\')\n    .demand([\'x\',\'y\'])\n    .argv;\n\nconsole.log(argv.x / argv.y);\n````\n\n***\n \n    $ ./divide.js -x 55 -y 11\n    5\n    \n    $ node ./divide.js -x 4.91 -z 2.51\n    Usage: node ./divide.js -x [num] -y [num]\n\n    Options:\n      -x  [required]\n      -y  [required]\n\n    Missing required arguments: y\n\nEVEN MORE HOLY COW\n------------------\n\ndefault_singles.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .default(\'x\', 10)\n    .default(\'y\', 10)\n    .argv\n;\nconsole.log(argv.x + argv.y);\n````\n\n***\n\n    $ ./default_singles.js -x 5\n    15\n\ndefault_hash.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .default({ x : 10, y : 10 })\n    .argv\n;\nconsole.log(argv.x + argv.y);\n````\n\n***\n\n    $ ./default_hash.js -y 7\n    17\n\nAnd if you really want to get all descriptive about it...\n---------------------------------------------------------\n\nboolean_single.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .boolean(\'v\')\n    .argv\n;\nconsole.dir(argv);\n````\n\n***\n\n    $ ./boolean_single.js -v foo bar baz\n    true\n    [ \'bar\', \'baz\', \'foo\' ]\n\nboolean_double.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .boolean([\'x\',\'y\',\'z\'])\n    .argv\n;\nconsole.dir([ argv.x, argv.y, argv.z ]);\nconsole.dir(argv._);\n````\n\n***\n\n    $ ./boolean_double.js -x -z one two three\n    [ true, false, true ]\n    [ \'one\', \'two\', \'three\' ]\n\nOptimist is here to help...\n---------------------------\n\nYou can describe parameters for help messages and set aliases. Optimist figures\nout how to format a handy help string automatically.\n\nline_count.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .usage(\'Count the lines in a file.\\nUsage: $0\')\n    .demand(\'f\')\n    .alias(\'f\', \'file\')\n    .describe(\'f\', \'Load a file\')\n    .argv\n;\n\nvar fs = require(\'fs\');\nvar s = fs.createReadStream(argv.file);\n\nvar lines = 0;\ns.on(\'data\', function (buf) {\n    lines += buf.toString().match(/\\n/g).length;\n});\n\ns.on(\'end\', function () {\n    console.log(lines);\n});\n````\n\n***\n\n    $ node line_count.js\n    Count the lines in a file.\n    Usage: node ./line_count.js\n\n    Options:\n      -f, --file  Load a file  [required]\n\n    Missing required arguments: f\n\n    $ node line_count.js --file line_count.js \n    20\n    \n    $ node line_count.js -f line_count.js \n    20\n\nmethods\n=======\n\nBy itself,\n\n````javascript\nrequire(\'optimist\').argv\n`````\n\nwill use `process.argv` array to construct the `argv` object.\n\nYou can pass in the `process.argv` yourself:\n\n````javascript\nrequire(\'optimist\')([ \'-x\', \'1\', \'-y\', \'2\' ]).argv\n````\n\nor use .parse() to do the same thing:\n\n````javascript\nrequire(\'optimist\').parse([ \'-x\', \'1\', \'-y\', \'2\' ])\n````\n\nThe rest of these methods below come in just before the terminating `.argv`.\n\n.alias(key, alias)\n------------------\n\nSet key names as equivalent such that updates to a key will propagate to aliases\nand vice-versa.\n\nOptionally `.alias()` can take an object that maps keys to aliases.\n\n.default(key, value)\n--------------------\n\nSet `argv[key]` to `value` if no option was specified on `process.argv`.\n\nOptionally `.default()` can take an object that maps keys to default values.\n\n.demand(key)\n------------\n\nIf `key` is a string, show the usage information and exit if `key` wasn\'t\nspecified in `process.argv`.\n\nIf `key` is a number, demand at least as many non-option arguments, which show\nup in `argv._`.\n\nIf `key` is an Array, demand each element.\n\n.describe(key, desc)\n--------------------\n\nDescribe a `key` for the generated usage information.\n\nOptionally `.describe()` can take an object that maps keys to descriptions.\n\n.options(key, opt)\n------------------\n\nInstead of chaining together `.alias().demand().default()`, you can specify\nkeys in `opt` for each of the chainable methods.\n\nFor example:\n\n````javascript\nvar argv = require(\'optimist\')\n    .options(\'f\', {\n        alias : \'file\',\n        default : \'/etc/passwd\',\n    })\n    .argv\n;\n````\n\nis the same as\n\n````javascript\nvar argv = require(\'optimist\')\n    .alias(\'f\', \'file\')\n    .default(\'f\', \'/etc/passwd\')\n    .argv\n;\n````\n\nOptionally `.options()` can take an object that maps keys to `opt` parameters.\n\n.usage(message)\n---------------\n\nSet a usage message to show which commands to use. Inside `message`, the string\n`$0` will get interpolated to the current script name or node command for the\npresent script similar to how `$0` works in bash or perl.\n\n.check(fn)\n----------\n\nCheck that certain conditions are met in the provided arguments.\n\nIf `fn` throws or returns `false`, show the thrown error, usage information, and\nexit.\n\n.boolean(key)\n-------------\n\nInterpret `key` as a boolean. If a non-flag option follows `key` in\n`process.argv`, that string won\'t get set as the value of `key`.\n\nIf `key` never shows up as a flag in `process.arguments`, `argv[key]` will be\n`false`.\n\nIf `key` is an Array, interpret all the elements as booleans.\n\n.string(key)\n------------\n\nTell the parser logic not to interpret `key` as a number or boolean.\nThis can be useful if you need to preserve leading zeros in an input.\n\nIf `key` is an Array, interpret all the elements as strings.\n\n.wrap(columns)\n--------------\n\nFormat usage output to wrap at `columns` many columns.\n\n.help()\n-------\n\nReturn the generated usage string.\n\n.showHelp(fn=console.error)\n---------------------------\n\nPrint the usage data using `fn` for printing.\n\n.parse(args)\n------------\n\nParse `args` instead of `process.argv`. Returns the `argv` object.\n\n.argv\n-----\n\nGet the arguments as a plain old object.\n\nArguments without a corresponding flag show up in the `argv._` array.\n\nThe script name or node command is available at `argv.$0` similarly to how `$0`\nworks in bash or perl.\n\nparsing tricks\n==============\n\nstop parsing\n------------\n\nUse `--` to stop parsing flags and stuff the remainder into `argv._`.\n\n    $ node examples/reflect.js -a 1 -b 2 -- -c 3 -d 4\n    { _: [ \'-c\', \'3\', \'-d\', \'4\' ],\n      \'$0\': \'node ./examples/reflect.js\',\n      a: 1,\n      b: 2 }\n\nnegate fields\n-------------\n\nIf you want to explicity set a field to false instead of just leaving it\nundefined or to override a default you can do `--no-key`.\n\n    $ node examples/reflect.js -a --no-b\n    { _: [],\n      \'$0\': \'node ./examples/reflect.js\',\n      a: true,\n      b: false }\n\nnumbers\n-------\n\nEvery argument that looks like a number (`!isNaN(Number(arg))`) is converted to\none. This way you can just `net.createConnection(argv.port)` and you can add\nnumbers out of `argv` with `+` without having that mean concatenation,\nwhich is super frustrating.\n\nduplicates\n----------\n\nIf you specify a flag multiple times it will get turned into an array containing\nall the values in order.\n\n    $ node examples/reflect.js -x 5 -x 8 -x 0\n    { _: [],\n      \'$0\': \'node ./examples/reflect.js\',\n        x: [ 5, 8, 0 ] }\n\ndot notation\n------------\n\nWhen you use dots (`.`s) in argument names, an implicit object path is assumed.\nThis lets you organize arguments into nested objects.\n\n     $ node examples/reflect.js --foo.bar.baz=33 --foo.quux=5\n     { _: [],\n       \'$0\': \'node ./examples/reflect.js\',\n         foo: { bar: { baz: 33 }, quux: 5 } }\n\ninstallation\n============\n\nWith [npm](http://github.com/isaacs/npm), just do:\n    npm install optimist\n \nor clone this project on github:\n\n    git clone http://github.com/substack/node-optimist.git\n\nTo run the tests with [expresso](http://github.com/visionmedia/expresso),\njust do:\n    \n    expresso\n\ninspired By\n===========\n\nThis module is loosely inspired by Perl\'s\n[Getopt::Casual](http://search.cpan.org/~photo/Getopt-Casual-0.13.1/Casual.pm).\n',
593 silly resolved     readmeFilename: 'readme.markdown',
593 silly resolved     bugs: { url: 'https://github.com/substack/node-optimist/issues' },
593 silly resolved     _id: 'optimist@0.3.7',
593 silly resolved     _from: 'optimist@~0.3' },
593 silly resolved   { name: 'uglify-js',
593 silly resolved     description: 'JavaScript parser, mangler/compressor and beautifier toolkit',
593 silly resolved     homepage: 'http://lisperator.net/uglifyjs',
593 silly resolved     main: 'tools/node.js',
593 silly resolved     version: '2.3.6',
593 silly resolved     engines: { node: '>=0.4.0' },
593 silly resolved     maintainers: [ [Object] ],
593 silly resolved     repository: { type: 'git', url: 'https://github.com/mishoo/UglifyJS2.git' },
593 silly resolved     dependencies: { async: '~0.2.6', 'source-map': '~0.1.7', optimist: '~0.3.5' },
593 silly resolved     bin: { uglifyjs: 'bin/uglifyjs' },
593 silly resolved     scripts: { test: 'node test/run-tests.js' },
593 silly resolved     readme: 'UglifyJS 2\n==========\n[![Build Status](https://travis-ci.org/mishoo/UglifyJS2.png)](https://travis-ci.org/mishoo/UglifyJS2)\n\nUglifyJS is a JavaScript parser, minifier, compressor or beautifier toolkit.\n\nThis page documents the command line utility.  For\n[API and internals documentation see my website](http://lisperator.net/uglifyjs/).\nThere\'s also an\n[in-browser online demo](http://lisperator.net/uglifyjs/#demo) (for Firefox,\nChrome and probably Safari).\n\nInstall\n-------\n\nFirst make sure you have installed the latest version of [node.js](http://nodejs.org/)\n(You may need to restart your computer after this step).\n\nFrom NPM for use as a command line app:\n\n    npm install uglify-js -g\n\nFrom NPM for programmatic use:\n\n    npm install uglify-js\n\nFrom Git:\n\n    git clone git://github.com/mishoo/UglifyJS2.git\n    cd UglifyJS2\n    npm link .\n\nUsage\n-----\n\n    uglifyjs [input files] [options]\n\nUglifyJS2 can take multiple input files.  It\'s recommended that you pass the\ninput files first, then pass the options.  UglifyJS will parse input files\nin sequence and apply any compression options.  The files are parsed in the\nsame global scope, that is, a reference from a file to some\nvariable/function declared in another file will be matched properly.\n\nIf you want to read from STDIN instead, pass a single dash instead of input\nfiles.\n\nThe available options are:\n\n    --source-map       Specify an output file where to generate source map.\n                                                                          [string]\n    --source-map-root  The path to the original source to be included in the\n                       source map.                                        [string]\n    --source-map-url   The path to the source map to be added in //@\n                       sourceMappingURL.  Defaults to the value passed with\n                       --source-map.                                      [string]\n    --in-source-map    Input source map, useful if you\'re compressing JS that was\n                       generated from some other original code.\n    --screw-ie8        Pass this flag if you don\'t care about full compliance with\n                       Internet Explorer 6-8 quirks (by default UglifyJS will try\n                       to be IE-proof).\n    -p, --prefix       Skip prefix for original filenames that appear in source\n                       maps. For example -p 3 will drop 3 directories from file\n                       names and ensure they are relative paths.\n    -o, --output       Output file (default STDOUT).\n    -b, --beautify     Beautify output/specify output options.            [string]\n    -m, --mangle       Mangle names/pass mangler options.                 [string]\n    -r, --reserved     Reserved names to exclude from mangling.\n    -c, --compress     Enable compressor/pass compressor options. Pass options\n                       like -c hoist_vars=false,if_return=false. Use -c with no\n                       argument to use the default compression options.   [string]\n    -d, --define       Global definitions                                 [string]\n    --comments         Preserve copyright comments in the output. By default this\n                       works like Google Closure, keeping JSDoc-style comments\n                       that contain "@license" or "@preserve". You can optionally\n                       pass one of the following arguments to this flag:\n                       - "all" to keep all comments\n                       - a valid JS regexp (needs to start with a slash) to keep\n                       only comments that match.\n                       Note that currently not *all* comments can be kept when\n                       compression is on, because of dead code removal or\n                       cascading statements into sequences.               [string]\n    --stats            Display operations run time on STDERR.            [boolean]\n    --acorn            Use Acorn for parsing.                            [boolean]\n    --spidermonkey     Assume input files are SpiderMonkey AST format (as JSON).\n                                                                         [boolean]\n    --self             Build itself (UglifyJS2) as a library (implies\n                       --wrap=UglifyJS --export-all)                     [boolean]\n    --wrap             Embed everything in a big function, making the “exports”\n                       and “global” variables available. You need to pass an\n                       argument to this option to specify the name that your\n                       module will take when included in, say, a browser.\n                                                                          [string]\n    --export-all       Only used when --wrap, this tells UglifyJS to add code to\n                       automatically export all globals.                 [boolean]\n    --lint             Display some scope warnings                       [boolean]\n    -v, --verbose      Verbose                                           [boolean]\n    -V, --version      Print version number and exit.                    [boolean]\n\nSpecify `--output` (`-o`) to declare the output file.  Otherwise the output\ngoes to STDOUT.\n\n## Source map options\n\nUglifyJS2 can generate a source map file, which is highly useful for\ndebugging your compressed JavaScript.  To get a source map, pass\n`--source-map output.js.map` (full path to the file where you want the\nsource map dumped).\n\nAdditionally you might need `--source-map-root` to pass the URL where the\noriginal files can be found.  In case you are passing full paths to input\nfiles to UglifyJS, you can use `--prefix` (`-p`) to specify the number of\ndirectories to drop from the path prefix when declaring files in the source\nmap.\n\nFor example:\n\n    uglifyjs /home/doe/work/foo/src/js/file1.js \\\n             /home/doe/work/foo/src/js/file2.js \\\n             -o foo.min.js \\\n             --source-map foo.min.js.map \\\n             --source-map-root http://foo.com/src \\\n             -p 5 -c -m\n\nThe above will compress and mangle `file1.js` and `file2.js`, will drop the\noutput in `foo.min.js` and the source map in `foo.min.js.map`.  The source\nmapping will refer to `http://foo.com/src/js/file1.js` and\n`http://foo.com/src/js/file2.js` (in fact it will list `http://foo.com/src`\nas the source map root, and the original files as `js/file1.js` and\n`js/file2.js`).\n\n### Composed source map\n\nWhen you\'re compressing JS code that was output by a compiler such as\nCoffeeScript, mapping to the JS code won\'t be too helpful.  Instead, you\'d\nlike to map back to the original code (i.e. CoffeeScript).  UglifyJS has an\noption to take an input source map.  Assuming you have a mapping from\nCoffeeScript → compiled JS, UglifyJS can generate a map from CoffeeScript →\ncompressed JS by mapping every token in the compiled JS to its original\nlocation.\n\nTo use this feature you need to pass `--in-source-map\n/path/to/input/source.map`.  Normally the input source map should also point\nto the file containing the generated JS, so if that\'s correct you can omit\ninput files from the command line.\n\n## Mangler options\n\nTo enable the mangler you need to pass `--mangle` (`-m`).  The following\n(comma-separated) options are supported:\n\n- `sort` — to assign shorter names to most frequently used variables.  This\n  saves a few hundred bytes on jQuery before gzip, but the output is\n  _bigger_ after gzip (and seems to happen for other libraries I tried it\n  on) therefore it\'s not enabled by default.\n\n- `toplevel` — mangle names declared in the toplevel scope (disabled by\n  default).\n\n- `eval` — mangle names visible in scopes where `eval` or `when` are used\n  (disabled by default).\n\nWhen mangling is enabled but you want to prevent certain names from being\nmangled, you can declare those names with `--reserved` (`-r`) — pass a\ncomma-separated list of names.  For example:\n\n    uglifyjs ... -m -r \'$,require,exports\'\n\nto prevent the `require`, `exports` and `$` names from being changed.\n\n## Compressor options\n\nYou need to pass `--compress` (`-c`) to enable the compressor.  Optionally\nyou can pass a comma-separated list of options.  Options are in the form\n`foo=bar`, or just `foo` (the latter implies a boolean option that you want\nto set `true`; it\'s effectively a shortcut for `foo=true`).\n\n- `sequences` -- join consecutive simple statements using the comma operator\n- `properties` -- rewrite property access using the dot notation, for\n  example `foo["bar"] → foo.bar`\n- `dead_code` -- remove unreachable code\n- `drop_debugger` -- remove `debugger;` statements\n- `unsafe` (default: false) -- apply "unsafe" transformations (discussion below)\n- `conditionals` -- apply optimizations for `if`-s and conditional\n  expressions\n- `comparisons` -- apply certain optimizations to binary nodes, for example:\n  `!(a <= b) → a > b` (only when `unsafe`), attempts to negate binary nodes,\n  e.g. `a = !b && !c && !d && !e → a=!(b||c||d||e)` etc.\n- `evaluate` -- attempt to evaluate constant expressions\n- `booleans` -- various optimizations for boolean context, for example `!!a\n  ? b : c → a ? b : c`\n- `loops` -- optimizations for `do`, `while` and `for` loops when we can\n  statically determine the condition\n- `unused` -- drop unreferenced functions and variables\n- `hoist_funs` -- hoist function declarations\n- `hoist_vars` (default: false) -- hoist `var` declarations (this is `false`\n  by default because it seems to increase the size of the output in general)\n- `if_return` -- optimizations for if/return and if/continue\n- `join_vars` -- join consecutive `var` statements\n- `cascade` -- small optimization for sequences, transform `x, x` into `x`\n  and `x = something(), x` into `x = something()`\n- `warnings` -- display warnings when dropping unreachable code or unused\n  declarations etc.\n\n### The `unsafe` option\n\nIt enables some transformations that *might* break code logic in certain\ncontrived cases, but should be fine for most code.  You might want to try it\non your own code, it should reduce the minified size.  Here\'s what happens\nwhen this flag is on:\n\n- `new Array(1, 2, 3)` or `Array(1, 2, 3)` → `[1, 2, 3 ]`\n- `new Object()` → `{}`\n- `String(exp)` or `exp.toString()` → `"" + exp`\n- `new Object/RegExp/Function/Error/Array (...)` → we discard the `new`\n- `typeof foo == "undefined"` → `foo === void 0`\n- `void 0` → `"undefined"` (if there is a variable named "undefined" in\n  scope; we do it because the variable name will be mangled, typically\n  reduced to a single character).\n\n### Conditional compilation\n\nYou can use the `--define` (`-d`) switch in order to declare global\nvariables that UglifyJS will assume to be constants (unless defined in\nscope).  For example if you pass `--define DEBUG=false` then, coupled with\ndead code removal UglifyJS will discard the following from the output:\n```javascript\nif (DEBUG) {\n\tconsole.log("debug stuff");\n}\n```\n\nUglifyJS will warn about the condition being always false and about dropping\nunreachable code; for now there is no option to turn off only this specific\nwarning, you can pass `warnings=false` to turn off *all* warnings.\n\nAnother way of doing that is to declare your globals as constants in a\nseparate file and include it into the build.  For example you can have a\n`build/defines.js` file with the following:\n```javascript\nconst DEBUG = false;\nconst PRODUCTION = true;\n// etc.\n```\n\nand build your code like this:\n\n    uglifyjs build/defines.js js/foo.js js/bar.js... -c\n\nUglifyJS will notice the constants and, since they cannot be altered, it\nwill evaluate references to them to the value itself and drop unreachable\ncode as usual.  The possible downside of this approach is that the build\nwill contain the `const` declarations.\n\n<a name="codegen-options"></a>\n## Beautifier options\n\nThe code generator tries to output shortest code possible by default.  In\ncase you want beautified output, pass `--beautify` (`-b`).  Optionally you\ncan pass additional arguments that control the code output:\n\n- `beautify` (default `true`) -- whether to actually beautify the output.\n  Passing `-b` will set this to true, but you might need to pass `-b` even\n  when you want to generate minified code, in order to specify additional\n  arguments, so you can use `-b beautify=false` to override it.\n- `indent-level` (default 4)\n- `indent-start` (default 0) -- prefix all lines by that many spaces\n- `quote-keys` (default `false`) -- pass `true` to quote all keys in literal\n  objects\n- `space-colon` (default `true`) -- insert a space after the colon signs\n- `ascii-only` (default `false`) -- escape Unicode characters in strings and\n  regexps\n- `inline-script` (default `false`) -- escape the slash in occurrences of\n  `</script` in strings\n- `width` (default 80) -- only takes effect when beautification is on, this\n  specifies an (orientative) line width that the beautifier will try to\n  obey.  It refers to the width of the line text (excluding indentation).\n  It doesn\'t work very well currently, but it does make the code generated\n  by UglifyJS more readable.\n- `max-line-len` (default 32000) -- maximum line length (for uglified code)\n- `ie-proof` (default `true`) -- generate “IE-proof” code (for now this\n  means add brackets around the do/while in code like this: `if (foo) do\n  something(); while (bar); else ...`.\n- `bracketize` (default `false`) -- always insert brackets in `if`, `for`,\n  `do`, `while` or `with` statements, even if their body is a single\n  statement.\n- `semicolons` (default `true`) -- separate statements with semicolons.  If\n  you pass `false` then whenever possible we will use a newline instead of a\n  semicolon, leading to more readable output of uglified code (size before\n  gzip could be smaller; size after gzip insignificantly larger).\n- `negate-iife` (default `!beautify`) -- prefer negation, rather than\n  parens, for "Immediately-Called Function Expressions".  This defaults to\n  `true` when beautification is off, and `false` if beautification is on;\n  pass it manually to force a value.\n\n### Keeping copyright notices or other comments\n\nYou can pass `--comments` to retain certain comments in the output.  By\ndefault it will keep JSDoc-style comments that contain "@preserve",\n"@license" or "@cc_on" (conditional compilation for IE).  You can pass\n`--comments all` to keep all the comments, or a valid JavaScript regexp to\nkeep only comments that match this regexp.  For example `--comments\n\'/foo|bar/\'` will keep only comments that contain "foo" or "bar".\n\nNote, however, that there might be situations where comments are lost.  For\nexample:\n```javascript\nfunction f() {\n\t/** @preserve Foo Bar */\n\tfunction g() {\n\t  // this function is never called\n\t}\n\treturn something();\n}\n```\n\nEven though it has "@preserve", the comment will be lost because the inner\nfunction `g` (which is the AST node to which the comment is attached to) is\ndiscarded by the compressor as not referenced.\n\nThe safest comments where to place copyright information (or other info that\nneeds to be kept in the output) are comments attached to toplevel nodes.\n\n## Support for the SpiderMonkey AST\n\nUglifyJS2 has its own abstract syntax tree format; for\n[practical reasons](http://lisperator.net/blog/uglifyjs-why-not-switching-to-spidermonkey-ast/)\nwe can\'t easily change to using the SpiderMonkey AST internally.  However,\nUglifyJS now has a converter which can import a SpiderMonkey AST.\n\nFor example [Acorn][acorn] is a super-fast parser that produces a\nSpiderMonkey AST.  It has a small CLI utility that parses one file and dumps\nthe AST in JSON on the standard output.  To use UglifyJS to mangle and\ncompress that:\n\n    acorn file.js | uglifyjs --spidermonkey -m -c\n\nThe `--spidermonkey` option tells UglifyJS that all input files are not\nJavaScript, but JS code described in SpiderMonkey AST in JSON.  Therefore we\ndon\'t use our own parser in this case, but just transform that AST into our\ninternal AST.\n\n### Use Acorn for parsing\n\nMore for fun, I added the `--acorn` option which will use Acorn to do all\nthe parsing.  If you pass this option, UglifyJS will `require("acorn")`.\n\nAcorn is really fast (e.g. 250ms instead of 380ms on some 650K code), but\nconverting the SpiderMonkey tree that Acorn produces takes another 150ms so\nin total it\'s a bit more than just using UglifyJS\'s own parser.\n\nAPI Reference\n-------------\n\nAssuming installation via NPM, you can load UglifyJS in your application\nlike this:\n```javascript\nvar UglifyJS = require("uglify-js");\n```\n\nIt exports a lot of names, but I\'ll discuss here the basics that are needed\nfor parsing, mangling and compressing a piece of code.  The sequence is (1)\nparse, (2) compress, (3) mangle, (4) generate output code.\n\n### The simple way\n\nThere\'s a single toplevel function which combines all the steps.  If you\ndon\'t need additional customization, you might want to go with `minify`.\nExample:\n```javascript\nvar result = UglifyJS.minify("/path/to/file.js");\nconsole.log(result.code); // minified output\n// if you need to pass code instead of file name\nvar result = UglifyJS.minify("var b = function () {};", {fromString: true});\n```\n\nYou can also compress multiple files:\n```javascript\nvar result = UglifyJS.minify([ "file1.js", "file2.js", "file3.js" ]);\nconsole.log(result.code);\n```\n\nTo generate a source map:\n```javascript\nvar result = UglifyJS.minify([ "file1.js", "file2.js", "file3.js" ], {\n\toutSourceMap: "out.js.map"\n});\nconsole.log(result.code); // minified output\nconsole.log(result.map);\n```\n\nNote that the source map is not saved in a file, it\'s just returned in\n`result.map`.  The value passed for `outSourceMap` is only used to set the\n`file` attribute in the source map (see [the spec][sm-spec]).\n\nYou can also specify sourceRoot property to be included in source map:\n```javascript\nvar result = UglifyJS.minify([ "file1.js", "file2.js", "file3.js" ], {\n\toutSourceMap: "out.js.map",\n\tsourceRoot: "http://example.com/src"\n});\n```\n\nIf you\'re compressing compiled JavaScript and have a source map for it, you\ncan use the `inSourceMap` argument:\n```javascript\nvar result = UglifyJS.minify("compiled.js", {\n\tinSourceMap: "compiled.js.map",\n\toutSourceMap: "minified.js.map"\n});\n// same as before, it returns `code` and `map`\n```\n\nThe `inSourceMap` is only used if you also request `outSourceMap` (it makes\nno sense otherwise).\n\nOther options:\n\n- `warnings` (default `false`) — pass `true` to display compressor warnings.\n\n- `fromString` (default `false`) — if you pass `true` then you can pass\n  JavaScript source code, rather than file names.\n\n- `mangle` — pass `false` to skip mangling names.\n\n- `output` (default `null`) — pass an object if you wish to specify\n  additional [output options][codegen].  The defaults are optimized\n  for best compression.\n\n- `compress` (default `{}`) — pass `false` to skip compressing entirely.\n  Pass an object to specify custom [compressor options][compressor].\n\nWe could add more options to `UglifyJS.minify` — if you need additional\nfunctionality please suggest!\n\n### The hard way\n\nFollowing there\'s more detailed API info, in case the `minify` function is\ntoo simple for your needs.\n\n#### The parser\n```javascript\nvar toplevel_ast = UglifyJS.parse(code, options);\n```\n\n`options` is optional and if present it must be an object.  The following\nproperties are available:\n\n- `strict` — disable automatic semicolon insertion and support for trailing\n  comma in arrays and objects\n- `filename` — the name of the file where this code is coming from\n- `toplevel` — a `toplevel` node (as returned by a previous invocation of\n  `parse`)\n\nThe last two options are useful when you\'d like to minify multiple files and\nget a single file as the output and a proper source map.  Our CLI tool does\nsomething like this:\n```javascript\nvar toplevel = null;\nfiles.forEach(function(file){\n\tvar code = fs.readFileSync(file);\n\ttoplevel = UglifyJS.parse(code, {\n\t\tfilename: file,\n\t\ttoplevel: toplevel\n\t});\n});\n```\n\nAfter this, we have in `toplevel` a big AST containing all our files, with\neach token having proper information about where it came from.\n\n#### Scope information\n\nUglifyJS contains a scope analyzer that you need to call manually before\ncompressing or mangling.  Basically it augments various nodes in the AST\nwith information about where is a name defined, how many times is a name\nreferenced, if it is a global or not, if a function is using `eval` or the\n`with` statement etc.  I will discuss this some place else, for now what\'s\nimportant to know is that you need to call the following before doing\nanything with the tree:\n```javascript\ntoplevel.figure_out_scope()\n```\n\n#### Compression\n\nLike this:\n```javascript\nvar compressor = UglifyJS.Compressor(options);\nvar compressed_ast = toplevel.transform(compressor);\n```\n\nThe `options` can be missing.  Available options are discussed above in\n“Compressor options”.  Defaults should lead to best compression in most\nscripts.\n\nThe compressor is destructive, so don\'t rely that `toplevel` remains the\noriginal tree.\n\n#### Mangling\n\nAfter compression it is a good idea to call again `figure_out_scope` (since\nthe compressor might drop unused variables / unreachable code and this might\nchange the number of identifiers or their position).  Optionally, you can\ncall a trick that helps after Gzip (counting character frequency in\nnon-mangleable words).  Example:\n```javascript\ncompressed_ast.figure_out_scope();\ncompressed_ast.compute_char_frequency();\ncompressed_ast.mangle_names();\n```\n\n#### Generating output\n\nAST nodes have a `print` method that takes an output stream.  Essentially,\nto generate code you do this:\n```javascript\nvar stream = UglifyJS.OutputStream(options);\ncompressed_ast.print(stream);\nvar code = stream.toString(); // this is your minified code\n```\n\nor, for a shortcut you can do:\n```javascript\nvar code = compressed_ast.print_to_string(options);\n```\n\nAs usual, `options` is optional.  The output stream accepts a lot of otions,\nmost of them documented above in section “Beautifier options”.  The two\nwhich we care about here are `source_map` and `comments`.\n\n#### Keeping comments in the output\n\nIn order to keep certain comments in the output you need to pass the\n`comments` option.  Pass a RegExp or a function.  If you pass a RegExp, only\nthose comments whose body matches the regexp will be kept.  Note that body\nmeans without the initial `//` or `/*`.  If you pass a function, it will be\ncalled for every comment in the tree and will receive two arguments: the\nnode that the comment is attached to, and the comment token itself.\n\nThe comment token has these properties:\n\n- `type`: "comment1" for single-line comments or "comment2" for multi-line\n  comments\n- `value`: the comment body\n- `pos` and `endpos`: the start/end positions (zero-based indexes) in the\n  original code where this comment appears\n- `line` and `col`: the line and column where this comment appears in the\n  original code\n- `file` — the file name of the original file\n- `nlb` — true if there was a newline before this comment in the original\n  code, or if this comment contains a newline.\n\nYour function should return `true` to keep the comment, or a falsy value\notherwise.\n\n#### Generating a source mapping\n\nYou need to pass the `source_map` argument when calling `print`.  It needs\nto be a `SourceMap` object (which is a thin wrapper on top of the\n[source-map][source-map] library).\n\nExample:\n```javascript\nvar source_map = UglifyJS.SourceMap(source_map_options);\nvar stream = UglifyJS.OutputStream({\n\t...\n\tsource_map: source_map\n});\ncompressed_ast.print(stream);\n\nvar code = stream.toString();\nvar map = source_map.toString(); // json output for your source map\n```\n\nThe `source_map_options` (optional) can contain the following properties:\n\n- `file`: the name of the JavaScript output file that this mapping refers to\n- `root`: the `sourceRoot` property (see the [spec][sm-spec])\n- `orig`: the "original source map", handy when you compress generated JS\n  and want to map the minified output back to the original code where it\n  came from.  It can be simply a string in JSON, or a JSON object containing\n  the original source map.\n\n  [acorn]: https://github.com/marijnh/acorn\n  [source-map]: https://github.com/mozilla/source-map\n  [sm-spec]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n  [codegen]: http://lisperator.net/uglifyjs/codegen\n  [compressor]: http://lisperator.net/uglifyjs/compress\n',
593 silly resolved     readmeFilename: 'README.md',
593 silly resolved     bugs: { url: 'https://github.com/mishoo/UglifyJS2/issues' },
593 silly resolved     _id: 'uglify-js@2.3.6',
593 silly resolved     _from: 'uglify-js@~2.3' } ]
594 info install optimist@0.3.7 into /usr/local/lib/node_modules/handlebars
595 info install uglify-js@2.3.6 into /usr/local/lib/node_modules/handlebars
596 info installOne optimist@0.3.7
597 info installOne uglify-js@2.3.6
598 info /usr/local/lib/node_modules/handlebars/node_modules/optimist unbuild
599 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js unbuild
600 verbose tar unpack /Users/ironweber/.npm/optimist/0.3.7/package.tgz
601 silly lockFile 5ec2934d-handlebars-node-modules-optimist tar:///usr/local/lib/node_modules/handlebars/node_modules/optimist
602 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/optimist /Users/ironweber/.npm/5ec2934d-handlebars-node-modules-optimist.lock
603 silly lockFile 2c830cf9-r-npm-optimist-0-3-7-package-tgz tar:///Users/ironweber/.npm/optimist/0.3.7/package.tgz
604 verbose lock tar:///Users/ironweber/.npm/optimist/0.3.7/package.tgz /Users/ironweber/.npm/2c830cf9-r-npm-optimist-0-3-7-package-tgz.lock
605 verbose tar unpack /Users/ironweber/.npm/uglify-js/2.3.6/package.tgz
606 silly lockFile 4ff77625-andlebars-node-modules-uglify-js tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js
607 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js /Users/ironweber/.npm/4ff77625-andlebars-node-modules-uglify-js.lock
608 silly lockFile 89f61633--npm-uglify-js-2-3-6-package-tgz tar:///Users/ironweber/.npm/uglify-js/2.3.6/package.tgz
609 verbose lock tar:///Users/ironweber/.npm/uglify-js/2.3.6/package.tgz /Users/ironweber/.npm/89f61633--npm-uglify-js-2-3-6-package-tgz.lock
610 silly gunzTarPerm modes [ '755', '644' ]
611 silly gunzTarPerm modes [ '755', '644' ]
612 silly gunzTarPerm extractEntry .gitmodules
613 silly gunzTarPerm extractEntry README.markdown
614 silly gunzTarPerm extractEntry package.json
615 silly gunzTarPerm extractEntry package.json
616 silly gunzTarPerm extractEntry .istanbul.yml
617 silly gunzTarPerm extractEntry LICENSE
618 silly gunzTarPerm extractEntry index.js
619 silly gunzTarPerm extractEntry .npmignore
620 silly gunzTarPerm extractEntry README.md
621 silly gunzTarPerm extractEntry coverage/coverage.json
622 silly gunzTarPerm extractEntry coverage/lcov-report/prettify.js
623 silly gunzTarPerm extractEntry .travis.yml
624 silly gunzTarPerm extractEntry LICENSE
625 silly gunzTarPerm extractEntry example/bool.js
626 silly gunzTarPerm extractEntry example/default_singles.js
627 silly gunzTarPerm extractEntry .travis.yml
628 silly gunzTarPerm extractEntry bin/uglifyjs
629 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/base.js.html
630 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/ast.js.html
631 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/base.js.html
632 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/compiler.js.html
633 silly gunzTarPerm extractEntry example/divide.js
634 silly gunzTarPerm extractEntry example/line_count.js
635 silly gunzTarPerm extractEntry example/default_hash.js
636 silly gunzTarPerm extractEntry example/line_count_wrap.js
637 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/helpers.js.html
638 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/index.html
639 silly gunzTarPerm extractEntry lib/ast.js
640 silly gunzTarPerm extractEntry lib/compress.js
641 silly gunzTarPerm extractEntry example/nonopt.js
642 silly gunzTarPerm extractEntry example/reflect.js
643 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/javascript-compiler.js.html
644 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/parser.js.html
645 silly gunzTarPerm extractEntry lib/mozilla-ast.js
646 silly gunzTarPerm extractEntry lib/output.js
647 silly gunzTarPerm extractEntry example/short.js
648 silly gunzTarPerm extractEntry example/string.js
649 silly gunzTarPerm extractEntry lib/parse.js
650 silly gunzTarPerm extractEntry example/boolean_single.js
651 silly gunzTarPerm extractEntry example/usage-options.js
652 silly gunzTarPerm extractEntry lib/scope.js
653 silly gunzTarPerm extractEntry example/boolean_double.js
654 silly gunzTarPerm extractEntry example/xup.js
655 silly gunzTarPerm extractEntry example/line_count_options.js
656 silly gunzTarPerm extractEntry readme.markdown
657 silly gunzTarPerm extractEntry test/_.js
658 silly gunzTarPerm extractEntry test/parse.js
659 silly gunzTarPerm extractEntry lib/sourcemap.js
660 silly gunzTarPerm extractEntry lib/transform.js
661 silly gunzTarPerm extractEntry test/usage.js
662 silly gunzTarPerm extractEntry test/_/argv.js
663 silly gunzTarPerm extractEntry test/_/bin.js
664 silly gunzTarPerm extractEntry lib/utils.js
665 silly gunzTarPerm extractEntry test/run-tests.js
666 silly lockFile 5ec2934d-handlebars-node-modules-optimist tar:///usr/local/lib/node_modules/handlebars/node_modules/optimist
667 silly lockFile 5ec2934d-handlebars-node-modules-optimist tar:///usr/local/lib/node_modules/handlebars/node_modules/optimist
668 silly lockFile 2c830cf9-r-npm-optimist-0-3-7-package-tgz tar:///Users/ironweber/.npm/optimist/0.3.7/package.tgz
669 silly lockFile 2c830cf9-r-npm-optimist-0-3-7-package-tgz tar:///Users/ironweber/.npm/optimist/0.3.7/package.tgz
670 info preinstall optimist@0.3.7
671 verbose readDependencies using package.json deps
672 verbose readDependencies using package.json deps
673 verbose cache add [ 'wordwrap@~0.0.2', null ]
674 verbose cache add name=undefined spec="wordwrap@~0.0.2" args=["wordwrap@~0.0.2",null]
675 verbose parsed url { protocol: null,
675 verbose parsed url   slashes: null,
675 verbose parsed url   auth: null,
675 verbose parsed url   host: null,
675 verbose parsed url   port: null,
675 verbose parsed url   hostname: null,
675 verbose parsed url   hash: null,
675 verbose parsed url   search: null,
675 verbose parsed url   query: null,
675 verbose parsed url   pathname: 'wordwrap@~0.0.2',
675 verbose parsed url   path: 'wordwrap@~0.0.2',
675 verbose parsed url   href: 'wordwrap@~0.0.2' }
676 verbose cache add name="wordwrap" spec="~0.0.2" args=["wordwrap","~0.0.2"]
677 verbose parsed url { protocol: null,
677 verbose parsed url   slashes: null,
677 verbose parsed url   auth: null,
677 verbose parsed url   host: null,
677 verbose parsed url   port: null,
677 verbose parsed url   hostname: null,
677 verbose parsed url   hash: null,
677 verbose parsed url   search: null,
677 verbose parsed url   query: null,
677 verbose parsed url   pathname: '~0.0.2',
677 verbose parsed url   path: '~0.0.2',
677 verbose parsed url   href: '~0.0.2' }
678 verbose addNamed [ 'wordwrap', '~0.0.2' ]
679 verbose addNamed [ null, '>=0.0.2-0 <0.1.0-0' ]
680 silly lockFile 8bd42136-wordwrap-0-0-2 wordwrap@~0.0.2
681 verbose lock wordwrap@~0.0.2 /Users/ironweber/.npm/8bd42136-wordwrap-0-0-2.lock
682 silly addNameRange { name: 'wordwrap', range: '>=0.0.2-0 <0.1.0-0', hasData: false }
683 verbose url raw wordwrap
684 verbose url resolving [ 'https://registry.npmjs.org/', './wordwrap' ]
685 verbose url resolved https://registry.npmjs.org/wordwrap
686 info trying registry request attempt 1 at 16:57:14
687 verbose etag "BWZBG6OAWP3BCANDD0T9BQOBO"
688 http GET https://registry.npmjs.org/wordwrap
689 silly gunzTarPerm extractEntry test/compress/arrays.js
690 silly gunzTarPerm extractEntry test/compress/drop-unused.js
691 silly gunzTarPerm extractEntry test/compress/issue-105.js
692 silly gunzTarPerm extractEntry test/compress/issue-12.js
693 silly gunzTarPerm extractEntry test/compress/issue-143.js
694 silly gunzTarPerm extractEntry test/compress/debugger.js
695 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/printer.js.html
696 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/compiler/visitor.js.html
697 silly gunzTarPerm extractEntry test/compress/issue-44.js
698 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/exception.js.html
699 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/index.html
700 silly gunzTarPerm extractEntry test/compress/issue-59.js
701 silly gunzTarPerm extractEntry test/compress/labels.js
702 silly gunzTarPerm extractEntry test/compress/loops.js
703 silly gunzTarPerm extractEntry test/compress/properties.js
704 silly gunzTarPerm extractEntry test/compress/dead-code.js
705 silly gunzTarPerm extractEntry test/compress/sequences.js
706 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/runtime.js.html
707 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/safe-string.js.html
708 silly gunzTarPerm extractEntry test/compress/conditionals.js
709 silly gunzTarPerm extractEntry test/compress/switch.js
710 silly gunzTarPerm extractEntry test/compress/blocks.js
711 silly gunzTarPerm extractEntry test/compress/typeof.js
712 silly gunzTarPerm extractEntry test/compress/issue-22.js
713 silly gunzTarPerm extractEntry tools/node.js
714 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars/utils.js.html
715 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars.js.html
716 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/handlebars.runtime.js.html
717 silly gunzTarPerm extractEntry coverage/lcov-report/dist/cjs/index.html
718 silly gunzTarPerm extractEntry coverage/lcov-report/index.html
719 silly gunzTarPerm extractEntry coverage/lcov-report/lib/index.html
720 silly gunzTarPerm extractEntry coverage/lcov-report/lib/index.js.html
721 silly gunzTarPerm extractEntry coverage/lcov-report/lib/precompiler.js.html
722 silly lockFile 4ff77625-andlebars-node-modules-uglify-js tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js
723 silly lockFile 4ff77625-andlebars-node-modules-uglify-js tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js
724 silly lockFile 89f61633--npm-uglify-js-2-3-6-package-tgz tar:///Users/ironweber/.npm/uglify-js/2.3.6/package.tgz
725 silly lockFile 89f61633--npm-uglify-js-2-3-6-package-tgz tar:///Users/ironweber/.npm/uglify-js/2.3.6/package.tgz
726 info preinstall uglify-js@2.3.6
727 verbose readDependencies using package.json deps
728 verbose readDependencies using package.json deps
729 silly gunzTarPerm extractEntry coverage/lcov-report/prettify.css
730 silly gunzTarPerm extractEntry coverage/lcov-report/spec/precompiler.js.html
731 verbose cache add [ 'async@~0.2.6', null ]
732 verbose cache add name=undefined spec="async@~0.2.6" args=["async@~0.2.6",null]
733 verbose parsed url { protocol: null,
733 verbose parsed url   slashes: null,
733 verbose parsed url   auth: null,
733 verbose parsed url   host: null,
733 verbose parsed url   port: null,
733 verbose parsed url   hostname: null,
733 verbose parsed url   hash: null,
733 verbose parsed url   search: null,
733 verbose parsed url   query: null,
733 verbose parsed url   pathname: 'async@~0.2.6',
733 verbose parsed url   path: 'async@~0.2.6',
733 verbose parsed url   href: 'async@~0.2.6' }
734 verbose cache add name="async" spec="~0.2.6" args=["async","~0.2.6"]
735 verbose parsed url { protocol: null,
735 verbose parsed url   slashes: null,
735 verbose parsed url   auth: null,
735 verbose parsed url   host: null,
735 verbose parsed url   port: null,
735 verbose parsed url   hostname: null,
735 verbose parsed url   hash: null,
735 verbose parsed url   search: null,
735 verbose parsed url   query: null,
735 verbose parsed url   pathname: '~0.2.6',
735 verbose parsed url   path: '~0.2.6',
735 verbose parsed url   href: '~0.2.6' }
736 verbose addNamed [ 'async', '~0.2.6' ]
737 verbose addNamed [ null, '>=0.2.6-0 <0.3.0-0' ]
738 silly lockFile e00b1d77-async-0-2-6 async@~0.2.6
739 verbose lock async@~0.2.6 /Users/ironweber/.npm/e00b1d77-async-0-2-6.lock
740 verbose cache add [ 'source-map@~0.1.7', null ]
741 verbose cache add name=undefined spec="source-map@~0.1.7" args=["source-map@~0.1.7",null]
742 verbose parsed url { protocol: null,
742 verbose parsed url   slashes: null,
742 verbose parsed url   auth: null,
742 verbose parsed url   host: null,
742 verbose parsed url   port: null,
742 verbose parsed url   hostname: null,
742 verbose parsed url   hash: null,
742 verbose parsed url   search: null,
742 verbose parsed url   query: null,
742 verbose parsed url   pathname: 'source-map@~0.1.7',
742 verbose parsed url   path: 'source-map@~0.1.7',
742 verbose parsed url   href: 'source-map@~0.1.7' }
743 verbose cache add name="source-map" spec="~0.1.7" args=["source-map","~0.1.7"]
744 verbose parsed url { protocol: null,
744 verbose parsed url   slashes: null,
744 verbose parsed url   auth: null,
744 verbose parsed url   host: null,
744 verbose parsed url   port: null,
744 verbose parsed url   hostname: null,
744 verbose parsed url   hash: null,
744 verbose parsed url   search: null,
744 verbose parsed url   query: null,
744 verbose parsed url   pathname: '~0.1.7',
744 verbose parsed url   path: '~0.1.7',
744 verbose parsed url   href: '~0.1.7' }
745 verbose addNamed [ 'source-map', '~0.1.7' ]
746 verbose addNamed [ null, '>=0.1.7-0 <0.2.0-0' ]
747 silly lockFile 19b4245f-source-map-0-1-7 source-map@~0.1.7
748 verbose lock source-map@~0.1.7 /Users/ironweber/.npm/19b4245f-source-map-0-1-7.lock
749 silly addNameRange { name: 'async', range: '>=0.2.6-0 <0.3.0-0', hasData: false }
750 silly addNameRange { name: 'source-map',
750 silly addNameRange   range: '>=0.1.7-0 <0.2.0-0',
750 silly addNameRange   hasData: false }
751 verbose url raw async
752 verbose url resolving [ 'https://registry.npmjs.org/', './async' ]
753 verbose url resolved https://registry.npmjs.org/async
754 info trying registry request attempt 1 at 16:57:14
755 verbose etag "A1R4UYERSGS4RIQ5KFARDOKY8"
756 http GET https://registry.npmjs.org/async
757 verbose url raw source-map
758 verbose url resolving [ 'https://registry.npmjs.org/', './source-map' ]
759 verbose url resolved https://registry.npmjs.org/source-map
760 info trying registry request attempt 1 at 16:57:14
761 verbose etag "9P1ON6ROD6YARE1NPRN6LCHQJ"
762 http GET https://registry.npmjs.org/source-map
763 silly gunzTarPerm extractEntry coverage/lcov-report/spec/ast.js.html
764 silly gunzTarPerm extractEntry coverage/lcov-report/spec/blocks.js.html
765 http 304 https://registry.npmjs.org/wordwrap
766 silly registry.get cb [ 304,
766 silly registry.get   { date: 'Sat, 04 Oct 2014 23:57:14 GMT',
766 silly registry.get     server: 'Apache',
766 silly registry.get     via: '1.1 varnish',
766 silly registry.get     'last-modified': 'Sat, 04 Oct 2014 23:57:14 GMT',
766 silly registry.get     'cache-control': 'max-age=60',
766 silly registry.get     etag: '"BWZBG6OAWP3BCANDD0T9BQOBO"',
766 silly registry.get     'x-served-by': 'cache-sjc3135-SJC',
766 silly registry.get     'x-cache': 'HIT',
766 silly registry.get     'x-cache-hits': '1',
766 silly registry.get     'x-timer': 'S1412467034.845483,VS0,VE0',
766 silly registry.get     vary: 'Accept',
766 silly registry.get     'content-length': '0',
766 silly registry.get     'keep-alive': 'timeout=10, max=50',
766 silly registry.get     connection: 'Keep-Alive' } ]
767 verbose etag wordwrap from cache
768 silly addNameRange number 2 { name: 'wordwrap', range: '>=0.0.2-0 <0.1.0-0', hasData: true }
769 silly addNameRange versions [ 'wordwrap', [ '0.0.1', '0.0.2' ] ]
770 verbose addNamed [ 'wordwrap', '0.0.2' ]
771 verbose addNamed [ '0.0.2', '0.0.2' ]
772 silly lockFile 24a694c8-wordwrap-0-0-2 wordwrap@0.0.2
773 verbose lock wordwrap@0.0.2 /Users/ironweber/.npm/24a694c8-wordwrap-0-0-2.lock
774 silly lockFile 24a694c8-wordwrap-0-0-2 wordwrap@0.0.2
775 silly lockFile 24a694c8-wordwrap-0-0-2 wordwrap@0.0.2
776 silly lockFile 8bd42136-wordwrap-0-0-2 wordwrap@~0.0.2
777 silly lockFile 8bd42136-wordwrap-0-0-2 wordwrap@~0.0.2
778 silly resolved [ { name: 'wordwrap',
778 silly resolved     description: 'Wrap those words. Show them at what columns to start and stop.',
778 silly resolved     version: '0.0.2',
778 silly resolved     repository:
778 silly resolved      { type: 'git',
778 silly resolved        url: 'git://github.com/substack/node-wordwrap.git' },
778 silly resolved     main: './index.js',
778 silly resolved     keywords: [ 'word', 'wrap', 'rule', 'format', 'column' ],
778 silly resolved     directories: { lib: '.', example: 'example', test: 'test' },
778 silly resolved     scripts: { test: 'expresso' },
778 silly resolved     devDependencies: { expresso: '=0.7.x' },
778 silly resolved     engines: { node: '>=0.4.0' },
778 silly resolved     license: 'MIT/X11',
778 silly resolved     author:
778 silly resolved      { name: 'James Halliday',
778 silly resolved        email: 'mail@substack.net',
778 silly resolved        url: 'http://substack.net' },
778 silly resolved     readme: 'wordwrap\n========\n\nWrap your words.\n\nexample\n=======\n\nmade out of meat\n----------------\n\nmeat.js\n\n    var wrap = require(\'wordwrap\')(15);\n    console.log(wrap(\'You and your whole family are made out of meat.\'));\n\noutput:\n\n    You and your\n    whole family\n    are made out\n    of meat.\n\ncentered\n--------\n\ncenter.js\n\n    var wrap = require(\'wordwrap\')(20, 60);\n    console.log(wrap(\n        \'At long last the struggle and tumult was over.\'\n        + \' The machines had finally cast off their oppressors\'\n        + \' and were finally free to roam the cosmos.\'\n        + \'\\n\'\n        + \'Free of purpose, free of obligation.\'\n        + \' Just drifting through emptiness.\'\n        + \' The sun was just another point of light.\'\n    ));\n\noutput:\n\n                        At long last the struggle and tumult\n                        was over. The machines had finally cast\n                        off their oppressors and were finally\n                        free to roam the cosmos.\n                        Free of purpose, free of obligation.\n                        Just drifting through emptiness. The\n                        sun was just another point of light.\n\nmethods\n=======\n\nvar wrap = require(\'wordwrap\');\n\nwrap(stop), wrap(start, stop, params={mode:"soft"})\n---------------------------------------------------\n\nReturns a function that takes a string and returns a new string.\n\nPad out lines with spaces out to column `start` and then wrap until column\n`stop`. If a word is longer than `stop - start` characters it will overflow.\n\nIn "soft" mode, split chunks by `/(\\S+\\s+/` and don\'t break up chunks which are\nlonger than `stop - start`, in "hard" mode, split chunks with `/\\b/` and break\nup chunks longer than `stop - start`.\n\nwrap.hard(start, stop)\n----------------------\n\nLike `wrap()` but with `params.mode = "hard"`.\n',
778 silly resolved     readmeFilename: 'README.markdown',
778 silly resolved     bugs: { url: 'https://github.com/substack/node-wordwrap/issues' },
778 silly resolved     _id: 'wordwrap@0.0.2',
778 silly resolved     _from: 'wordwrap@~0.0.2' } ]
779 info install wordwrap@0.0.2 into /usr/local/lib/node_modules/handlebars/node_modules/optimist
780 info installOne wordwrap@0.0.2
781 info /usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules/wordwrap unbuild
782 verbose tar unpack /Users/ironweber/.npm/wordwrap/0.0.2/package.tgz
783 silly lockFile b463bc9d-s-optimist-node-modules-wordwrap tar:///usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules/wordwrap
784 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules/wordwrap /Users/ironweber/.npm/b463bc9d-s-optimist-node-modules-wordwrap.lock
785 silly lockFile 28de5b3c-r-npm-wordwrap-0-0-2-package-tgz tar:///Users/ironweber/.npm/wordwrap/0.0.2/package.tgz
786 verbose lock tar:///Users/ironweber/.npm/wordwrap/0.0.2/package.tgz /Users/ironweber/.npm/28de5b3c-r-npm-wordwrap-0-0-2-package-tgz.lock
787 silly gunzTarPerm modes [ '755', '644' ]
788 silly gunzTarPerm extractEntry package.json
789 silly gunzTarPerm extractEntry .npmignore
790 silly gunzTarPerm extractEntry index.js
791 silly gunzTarPerm extractEntry coverage/lcov-report/spec/builtins.js.html
792 silly gunzTarPerm extractEntry coverage/lcov-report/spec/data.js.html
793 silly gunzTarPerm extractEntry README.markdown
794 silly gunzTarPerm extractEntry example/center.js
795 silly gunzTarPerm extractEntry example/meat.js
796 silly gunzTarPerm extractEntry test/break.js
797 silly gunzTarPerm extractEntry test/wrap.js
798 silly gunzTarPerm extractEntry test/idleness.txt
799 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/browser.js.html
800 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/common.js.html
801 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/index.html
802 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/node.js.html
803 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/runner.js.html
804 silly gunzTarPerm extractEntry coverage/lcov-report/spec/env/runtime.js.html
805 silly gunzTarPerm extractEntry coverage/lcov-report/spec/helpers.js.html
806 silly lockFile b463bc9d-s-optimist-node-modules-wordwrap tar:///usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules/wordwrap
807 silly lockFile b463bc9d-s-optimist-node-modules-wordwrap tar:///usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules/wordwrap
808 silly lockFile 28de5b3c-r-npm-wordwrap-0-0-2-package-tgz tar:///Users/ironweber/.npm/wordwrap/0.0.2/package.tgz
809 silly lockFile 28de5b3c-r-npm-wordwrap-0-0-2-package-tgz tar:///Users/ironweber/.npm/wordwrap/0.0.2/package.tgz
810 info preinstall wordwrap@0.0.2
811 verbose readDependencies using package.json deps
812 verbose readDependencies using package.json deps
813 silly resolved []
814 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules/wordwrap
815 info build /usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules/wordwrap
816 verbose linkStuff [ true,
816 verbose linkStuff   '/usr/local/lib/node_modules',
816 verbose linkStuff   false,
816 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules' ]
817 info linkStuff wordwrap@0.0.2
818 verbose linkBins wordwrap@0.0.2
819 verbose linkMans wordwrap@0.0.2
820 verbose rebuildBundles wordwrap@0.0.2
821 info install wordwrap@0.0.2
822 info postinstall wordwrap@0.0.2
823 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/optimist
824 info build /usr/local/lib/node_modules/handlebars/node_modules/optimist
825 verbose linkStuff [ true,
825 verbose linkStuff   '/usr/local/lib/node_modules',
825 verbose linkStuff   false,
825 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules' ]
826 info linkStuff optimist@0.3.7
827 verbose linkBins optimist@0.3.7
828 verbose linkMans optimist@0.3.7
829 verbose rebuildBundles optimist@0.3.7
830 verbose rebuildBundles [ 'wordwrap' ]
831 info install optimist@0.3.7
832 info postinstall optimist@0.3.7
833 silly gunzTarPerm extractEntry coverage/lcov-report/spec/index.html
834 silly gunzTarPerm extractEntry coverage/lcov-report/spec/javascript-compiler.js.html
835 silly gunzTarPerm extractEntry coverage/lcov-report/spec/parser.js.html
836 silly gunzTarPerm extractEntry coverage/lcov-report/spec/partials.js.html
837 silly gunzTarPerm extractEntry coverage/lcov-report/spec/basic.js.html
838 silly gunzTarPerm extractEntry coverage/lcov-report/spec/regressions.js.html
839 silly gunzTarPerm extractEntry coverage/lcov-report/spec/require.js.html
840 silly gunzTarPerm extractEntry coverage/lcov-report/spec/runtime.js.html
841 silly gunzTarPerm extractEntry coverage/lcov-report/spec/spec.js.html
842 silly gunzTarPerm extractEntry coverage/lcov-report/spec/string-params.js.html
843 silly gunzTarPerm extractEntry coverage/lcov-report/spec/subexpressions.js.html
844 silly gunzTarPerm extractEntry coverage/lcov-report/spec/tokenizer.js.html
845 silly gunzTarPerm extractEntry coverage/lcov-report/spec/track-ids.js.html
846 silly gunzTarPerm extractEntry coverage/lcov-report/spec/utils.js.html
847 silly gunzTarPerm extractEntry coverage/lcov-report/spec/whitespace-control.js.html
848 silly gunzTarPerm extractEntry coverage/lcov.info
849 silly gunzTarPerm extractEntry dist/handlebars.amd.js
850 silly gunzTarPerm extractEntry dist/handlebars.amd.min.js
851 silly gunzTarPerm extractEntry dist/handlebars.js
852 http 304 https://registry.npmjs.org/async
853 silly registry.get cb [ 304,
853 silly registry.get   { date: 'Sat, 04 Oct 2014 23:57:14 GMT',
853 silly registry.get     server: 'Apache',
853 silly registry.get     via: '1.1 varnish',
853 silly registry.get     'last-modified': 'Sat, 04 Oct 2014 23:56:55 GMT',
853 silly registry.get     'cache-control': 'max-age=60',
853 silly registry.get     etag: '"A1R4UYERSGS4RIQ5KFARDOKY8"',
853 silly registry.get     'x-served-by': 'cache-sjc3135-SJC',
853 silly registry.get     'x-cache': 'HIT',
853 silly registry.get     'x-cache-hits': '2',
853 silly registry.get     'x-timer': 'S1412467034.908253,VS0,VE0',
853 silly registry.get     vary: 'Accept',
853 silly registry.get     'content-length': '0',
853 silly registry.get     'keep-alive': 'timeout=10, max=50',
853 silly registry.get     connection: 'Keep-Alive' } ]
854 verbose etag async from cache
855 http 304 https://registry.npmjs.org/source-map
856 silly registry.get cb [ 304,
856 silly registry.get   { date: 'Sat, 04 Oct 2014 23:57:14 GMT',
856 silly registry.get     server: 'Apache',
856 silly registry.get     via: '1.1 varnish',
856 silly registry.get     'last-modified': 'Sat, 04 Oct 2014 23:57:14 GMT',
856 silly registry.get     'cache-control': 'max-age=60',
856 silly registry.get     etag: '"9P1ON6ROD6YARE1NPRN6LCHQJ"',
856 silly registry.get     'x-served-by': 'cache-sjc3127-SJC',
856 silly registry.get     'x-cache': 'HIT',
856 silly registry.get     'x-cache-hits': '1',
856 silly registry.get     'x-timer': 'S1412467034.908122,VS0,VE0',
856 silly registry.get     vary: 'Accept',
856 silly registry.get     'content-length': '0',
856 silly registry.get     'keep-alive': 'timeout=10, max=50',
856 silly registry.get     connection: 'Keep-Alive' } ]
857 verbose etag source-map from cache
858 silly gunzTarPerm extractEntry dist/handlebars.min.js
859 silly addNameRange number 2 { name: 'async', range: '>=0.2.6-0 <0.3.0-0', hasData: true }
860 silly addNameRange versions [ 'async',
860 silly addNameRange   [ '0.1.0',
860 silly addNameRange     '0.1.1',
860 silly addNameRange     '0.1.2',
860 silly addNameRange     '0.1.3',
860 silly addNameRange     '0.1.4',
860 silly addNameRange     '0.1.5',
860 silly addNameRange     '0.1.6',
860 silly addNameRange     '0.1.7',
860 silly addNameRange     '0.1.8',
860 silly addNameRange     '0.1.9',
860 silly addNameRange     '0.1.10',
860 silly addNameRange     '0.1.11',
860 silly addNameRange     '0.1.12',
860 silly addNameRange     '0.1.13',
860 silly addNameRange     '0.1.14',
860 silly addNameRange     '0.1.15',
860 silly addNameRange     '0.1.16',
860 silly addNameRange     '0.1.17',
860 silly addNameRange     '0.1.18',
860 silly addNameRange     '0.1.19',
860 silly addNameRange     '0.1.20',
860 silly addNameRange     '0.1.21',
860 silly addNameRange     '0.1.22',
860 silly addNameRange     '0.2.0',
860 silly addNameRange     '0.2.1',
860 silly addNameRange     '0.2.2',
860 silly addNameRange     '0.2.3',
860 silly addNameRange     '0.2.4',
860 silly addNameRange     '0.2.5',
860 silly addNameRange     '0.2.6',
860 silly addNameRange     '0.2.7',
860 silly addNameRange     '0.2.8',
860 silly addNameRange     '0.2.9',
860 silly addNameRange     '0.2.10',
860 silly addNameRange     '0.3.0',
860 silly addNameRange     '0.4.0',
860 silly addNameRange     '0.4.1',
860 silly addNameRange     '0.5.0',
860 silly addNameRange     '0.6.0',
860 silly addNameRange     '0.6.1',
860 silly addNameRange     '0.6.2',
860 silly addNameRange     '0.7.0',
860 silly addNameRange     '0.8.0',
860 silly addNameRange     '0.9.0' ] ]
861 verbose addNamed [ 'async', '0.2.10' ]
862 verbose addNamed [ '0.2.10', '0.2.10' ]
863 silly lockFile 098b530d-async-0-2-10 async@0.2.10
864 verbose lock async@0.2.10 /Users/ironweber/.npm/098b530d-async-0-2-10.lock
865 silly addNameRange number 2 { name: 'source-map',
865 silly addNameRange   range: '>=0.1.7-0 <0.2.0-0',
865 silly addNameRange   hasData: true }
866 silly addNameRange versions [ 'source-map',
866 silly addNameRange   [ '0.0.0',
866 silly addNameRange     '0.1.0',
866 silly addNameRange     '0.1.1',
866 silly addNameRange     '0.1.2',
866 silly addNameRange     '0.1.3',
866 silly addNameRange     '0.1.4',
866 silly addNameRange     '0.1.5',
866 silly addNameRange     '0.1.6',
866 silly addNameRange     '0.1.7',
866 silly addNameRange     '0.1.8',
866 silly addNameRange     '0.1.9',
866 silly addNameRange     '0.1.10',
866 silly addNameRange     '0.1.11',
866 silly addNameRange     '0.1.12',
866 silly addNameRange     '0.1.13',
866 silly addNameRange     '0.1.14',
866 silly addNameRange     '0.1.15',
866 silly addNameRange     '0.1.16',
866 silly addNameRange     '0.1.17',
866 silly addNameRange     '0.1.18',
866 silly addNameRange     '0.1.19',
866 silly addNameRange     '0.1.20',
866 silly addNameRange     '0.1.21',
866 silly addNameRange     '0.1.22',
866 silly addNameRange     '0.1.23',
866 silly addNameRange     '0.1.24',
866 silly addNameRange     '0.1.25',
866 silly addNameRange     '0.1.26',
866 silly addNameRange     '0.1.27',
866 silly addNameRange     '0.1.28',
866 silly addNameRange     '0.1.29',
866 silly addNameRange     '0.1.30',
866 silly addNameRange     '0.1.31',
866 silly addNameRange     '0.1.32',
866 silly addNameRange     '0.1.33',
866 silly addNameRange     '0.1.34',
866 silly addNameRange     '0.1.35',
866 silly addNameRange     '0.1.36',
866 silly addNameRange     '0.1.37',
866 silly addNameRange     '0.1.38',
866 silly addNameRange     '0.1.39',
866 silly addNameRange     '0.1.40' ] ]
867 verbose addNamed [ 'source-map', '0.1.40' ]
868 verbose addNamed [ '0.1.40', '0.1.40' ]
869 silly lockFile 8f84ee21-source-map-0-1-40 source-map@0.1.40
870 verbose lock source-map@0.1.40 /Users/ironweber/.npm/8f84ee21-source-map-0-1-40.lock
871 silly lockFile 098b530d-async-0-2-10 async@0.2.10
872 silly lockFile 098b530d-async-0-2-10 async@0.2.10
873 silly lockFile 8f84ee21-source-map-0-1-40 source-map@0.1.40
874 silly lockFile 8f84ee21-source-map-0-1-40 source-map@0.1.40
875 silly lockFile e00b1d77-async-0-2-6 async@~0.2.6
876 silly lockFile e00b1d77-async-0-2-6 async@~0.2.6
877 silly lockFile 19b4245f-source-map-0-1-7 source-map@~0.1.7
878 silly lockFile 19b4245f-source-map-0-1-7 source-map@~0.1.7
879 silly resolved [ { name: 'async',
879 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
879 silly resolved     main: './lib/async',
879 silly resolved     author: { name: 'Caolan McMahon' },
879 silly resolved     version: '0.2.10',
879 silly resolved     repository: { type: 'git', url: 'https://github.com/caolan/async.git' },
879 silly resolved     bugs: { url: 'https://github.com/caolan/async/issues' },
879 silly resolved     licenses: [ [Object] ],
879 silly resolved     devDependencies: { nodeunit: '>0.0.0', 'uglify-js': '1.2.x', nodelint: '>0.0.0' },
879 silly resolved     jam: { main: 'lib/async.js', include: [Object] },
879 silly resolved     scripts: { test: 'nodeunit test/test-async.js' },
879 silly resolved     readme: '# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser. Also supports [component](https://github.com/component/component).\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (map, reduce, filter, each…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n```javascript\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n\nasync.parallel([\n    function(){ ... },\n    function(){ ... }\n], callback);\n\nasync.series([\n    function(){ ... },\n    function(){ ... }\n]);\n```\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n## Common Pitfalls\n\n### Binding a context to an iterator\n\nThis section is really about bind, not about async. If you are wondering how to\nmake async execute your iterators in a given context, or are confused as to why\na method of another library isn\'t working as an iterator, study this example:\n\n```js\n// Here is a simple object with an (unnecessarily roundabout) squaring method\nvar AsyncSquaringLibrary = {\n  squareExponent: 2,\n  square: function(number, callback){ \n    var result = Math.pow(number, this.squareExponent);\n    setTimeout(function(){\n      callback(null, result);\n    }, 200);\n  }\n};\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square, function(err, result){\n  // result is [NaN, NaN, NaN]\n  // This fails because the `this.squareExponent` expression in the square\n  // function is not evaluated in the context of AsyncSquaringLibrary, and is\n  // therefore undefined.\n});\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square.bind(AsyncSquaringLibrary), function(err, result){\n  // result is [1, 4, 9]\n  // With the help of bind we can attach a context to the iterator before\n  // passing it to async. Now the square function will be executed in its \n  // \'home\' AsyncSquaringLibrary context and the value of `this.squareExponent`\n  // will be as expected.\n});\n```\n\n## Download\n\nThe source is available for download from\n[GitHub](http://github.com/caolan/async).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 29.6kb Uncompressed\n\n## In the Browser\n\nSo far it\'s been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n```html\n<script type="text/javascript" src="async.js"></script>\n<script type="text/javascript">\n\n    async.map(data, asyncProcess, function(err, results){\n        alert(results);\n    });\n\n</script>\n```\n\n## Documentation\n\n### Collections\n\n* [each](#each)\n* [eachSeries](#eachSeries)\n* [eachLimit](#eachLimit)\n* [map](#map)\n* [mapSeries](#mapSeries)\n* [mapLimit](#mapLimit)\n* [filter](#filter)\n* [filterSeries](#filterSeries)\n* [reject](#reject)\n* [rejectSeries](#rejectSeries)\n* [reduce](#reduce)\n* [reduceRight](#reduceRight)\n* [detect](#detect)\n* [detectSeries](#detectSeries)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n* [concatSeries](#concatSeries)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [parallelLimit](#parallellimittasks-limit-callback)\n* [whilst](#whilst)\n* [doWhilst](#doWhilst)\n* [until](#until)\n* [doUntil](#doUntil)\n* [forever](#forever)\n* [waterfall](#waterfall)\n* [compose](#compose)\n* [applyEach](#applyEach)\n* [applyEachSeries](#applyEachSeries)\n* [queue](#queue)\n* [cargo](#cargo)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n* [times](#times)\n* [timesSeries](#timesSeries)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name="forEach" />\n<a name="each" />\n### each(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the each function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// assuming openFiles is an array of file names and saveFile is a function\n// to save the modified contents of that file:\n\nasync.each(openFiles, saveFile, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="forEachSeries" />\n<a name="eachSeries" />\n### eachSeries(arr, iterator, callback)\n\nThe same as each only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name="forEachLimit" />\n<a name="eachLimit" />\n### eachLimit(arr, limit, iterator, callback)\n\nThe same as each only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// Assume documents is an array of JSON objects and requestApi is a\n// function that interacts with a rate-limited REST api.\n\nasync.eachLimit(documents, 20, requestApi, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="mapSeries" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name="mapLimit" />\n### mapLimit(arr, limit, iterator, callback)\n\nThe same as map only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.mapLimit([\'file1\',\'file2\',\'file3\'], 1, fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="filter" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n```js\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n```\n\n---------------------------------------\n\n<a name="filterSeries" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name="rejectSeries" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as reject, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then it\'s probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback(err, reduction) which accepts an optional error as its first \n  argument, and the state of the reduction as the second. If an error is \n  passed to the callback, the reduction is stopped and the main callback is \n  immediately called with the error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n```js\nasync.reduce([1,2,3], 0, function(memo, item, callback){\n    // pointless async:\n    process.nextTick(function(){\n        callback(null, memo + item)\n    });\n}, function(err, result){\n    // result is now equal to the last value of memo, which is 6\n});\n```\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n```js\nasync.detect([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // result now equals the first file in the list that exists\n});\n```\n\n---------------------------------------\n\n<a name="detectSeries" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, sortValue) which must be called once it\n  has completed with an error (which can be null) and a value to use as the sort\n  criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n```js\nasync.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n    fs.stat(file, function(err, stats){\n        callback(err, stats.mtime);\n    });\n}, function(err, results){\n    // results is now the original array of files sorted by\n    // modified date\n});\n```\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n```js\nasync.some([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then at least one of the files exists\n});\n```\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n```js\nasync.every([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then every file exists\n});\n```\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, results) which must be called once it \n  has completed with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n```js\nasync.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n    // files is now a list of filenames that exist in the 3 directories\n});\n```\n\n---------------------------------------\n\n<a name="concatSeries" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.series([\n    function(callback){\n        // do some stuff ...\n        callback(null, \'one\');\n    },\n    function(callback){\n        // do some more stuff ...\n        callback(null, \'two\');\n    }\n],\n// optional callback\nfunction(err, results){\n    // results is now equal to [\'one\', \'two\']\n});\n\n\n// an example using an object instead of an array\nasync.series({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equal to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.parallel([\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'one\');\n        }, 200);\n    },\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'two\');\n        }, 100);\n    }\n],\n// optional callback\nfunction(err, results){\n    // the results array will equal [\'one\',\'two\'] even though\n    // the second function had a shorter timeout.\n});\n\n\n// an example using an object instead of an array\nasync.parallel({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equals to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallelLimit(tasks, limit, [callback])\n\nThe same as parallel only the tasks are executed in parallel with a maximum of "limit" \ntasks executing at any time.\n\nNote that the tasks are not executed in batches, so there is no guarantee that \nthe first "limit" tasks will complete before any others are started.\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* limit - The maximum number of tasks to run at any time.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback(err) which must be called once it has completed with an \n  optional error argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.whilst(\n    function () { return count < 5; },\n    function (callback) {\n        count++;\n        setTimeout(callback, 1000);\n    },\n    function (err) {\n        // 5 seconds have passed\n    }\n);\n```\n\n---------------------------------------\n\n<a name="doWhilst" />\n### doWhilst(fn, test, callback)\n\nThe post check version of whilst. To reflect the difference in the order of operations `test` and `fn` arguments are switched. `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n---------------------------------------\n\n<a name="doUntil" />\n### doUntil(fn, test, callback)\n\nLike doWhilst except the test is inverted. Note the argument ordering differs from `until`.\n\n---------------------------------------\n\n<a name="forever" />\n### forever(fn, callback)\n\nCalls the asynchronous function \'fn\' repeatedly, in series, indefinitely.\nIf an error is passed to fn\'s callback then \'callback\' is called with the\nerror, otherwise it will never be called.\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a \n  callback(err, result1, result2, ...) it must call on completion. The first\n  argument is an error (which can be null) and any further arguments will be \n  passed as arguments in order to the next task.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n```js\nasync.waterfall([\n    function(callback){\n        callback(null, \'one\', \'two\');\n    },\n    function(arg1, arg2, callback){\n        callback(null, \'three\');\n    },\n    function(arg1, callback){\n        // arg1 now equals \'three\'\n        callback(null, \'done\');\n    }\n], function (err, result) {\n   // result now equals \'done\'    \n});\n```\n\n---------------------------------------\n<a name="compose" />\n### compose(fn1, fn2...)\n\nCreates a function which is a composition of the passed asynchronous\nfunctions. Each function consumes the return value of the function that\nfollows. Composing functions f(), g() and h() would produce the result of\nf(g(h())), only this version uses callbacks to obtain the return values.\n\nEach function is executed with the `this` binding of the composed function.\n\n__Arguments__\n\n* functions... - the asynchronous functions to compose\n\n\n__Example__\n\n```js\nfunction add1(n, callback) {\n    setTimeout(function () {\n        callback(null, n + 1);\n    }, 10);\n}\n\nfunction mul3(n, callback) {\n    setTimeout(function () {\n        callback(null, n * 3);\n    }, 10);\n}\n\nvar add1mul3 = async.compose(mul3, add1);\n\nadd1mul3(4, function (err, result) {\n   // result now equals 15\n});\n```\n\n---------------------------------------\n<a name="applyEach" />\n### applyEach(fns, args..., callback)\n\nApplies the provided arguments to each function in the array, calling the\ncallback after all functions have completed. If you only provide the first\nargument then it will return a function which lets you pass in the\narguments as if it were a single function call.\n\n__Arguments__\n\n* fns - the asynchronous functions to all call with the same arguments\n* args... - any number of separate arguments to pass to the function\n* callback - the final argument should be the callback, called when all\n  functions have completed processing\n\n\n__Example__\n\n```js\nasync.applyEach([enableSearch, updateSchema], \'bucket\', callback);\n\n// partial application example:\nasync.each(\n    buckets,\n    async.applyEach([enableSearch, updateSchema]),\n    callback\n);\n```\n\n---------------------------------------\n\n<a name="applyEachSeries" />\n### applyEachSeries(arr, iterator, callback)\n\nThe same as applyEach only the functions are applied in series.\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task\'s callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task, which must call its callback(err) argument when finished, with an \n  optional error as an argument.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* unshift(task, [callback]) - add a new task to the front of the queue.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a queue object with concurrency 2\n\nvar q = async.queue(function (task, callback) {\n    console.log(\'hello \' + task.name);\n    callback();\n}, 2);\n\n\n// assign a callback\nq.drain = function() {\n    console.log(\'all items have been processed\');\n}\n\n// add some items to the queue\n\nq.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\nq.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the queue (batch-wise)\n\nq.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the front of the queue\n\nq.unshift({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n```\n\n---------------------------------------\n\n<a name="cargo" />\n### cargo(worker, [payload])\n\nCreates a cargo object with the specified payload. Tasks added to the\ncargo will be processed altogether (up to the payload limit). If the\nworker is in progress, the task is queued until it is available. Once\nthe worker has completed some tasks, each callback of those tasks is called.\n\n__Arguments__\n\n* worker(tasks, callback) - An asynchronous function for processing an array of\n  queued tasks, which must call its callback(err) argument when finished, with \n  an optional error as an argument.\n* payload - An optional integer for determining how many tasks should be\n  processed per round; if omitted, the default is unlimited.\n\n__Cargo objects__\n\nThe cargo object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* payload - an integer for determining how many tasks should be\n  process per round. This property can be changed after a cargo is created to\n  alter the payload on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a cargo object with payload 2\n\nvar cargo = async.cargo(function (tasks, callback) {\n    for(var i=0; i<tasks.length; i++){\n      console.log(\'hello \' + tasks[i].name);\n    }\n    callback();\n}, 2);\n\n\n// add some items\n\ncargo.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\ncargo.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\ncargo.push({name: \'baz\'}, function (err) {\n    console.log(\'finished processing baz\');\n});\n```\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\nNote, all functions are called with a results object as a second argument, \nso it is unsafe to pass functions in the tasks object which cannot handle the\nextra argument. For example, this snippet of code:\n\n```js\nasync.auto({\n  readData: async.apply(fs.readFile, \'data.txt\', \'utf-8\')\n}, callback);\n```\n\nwill have the effect of calling readFile with the results object as the last\nargument, which will fail:\n\n```js\nfs.readFile(\'data.txt\', \'utf-8\', cb, {});\n```\n\nInstead, wrap the call to readFile in a function which does not forward the \nresults object:\n\n```js\nasync.auto({\n  readData: function(cb, results){\n    fs.readFile(\'data.txt\', \'utf-8\', cb);\n  }\n}, callback);\n```\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The \n  function receives two arguments: (1) a callback(err, result) which must be \n  called when finished, passing an error (which can be null) and the result of \n  the function\'s execution, and (2) a results object, containing the results of\n  the previously executed functions.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. Results will always be passed\n\tbut if an error occurred, no other tasks will be performed, and the results\n\tobject will only contain partial results.\n  \n\n__Example__\n\n```js\nasync.auto({\n    get_data: function(callback){\n        // async code to get some data\n    },\n    make_folder: function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    },\n    write_file: [\'get_data\', \'make_folder\', function(callback){\n        // once there is some data and the directory exists,\n        // write the data to a file in the directory\n        callback(null, filename);\n    }],\n    email_link: [\'write_file\', function(callback, results){\n        // once the file is written let\'s email a link to it...\n        // results.write_file contains the filename returned by write_file.\n    }]\n});\n```\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n```js\nasync.parallel([\n    function(callback){\n        // async code to get some data\n    },\n    function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    }\n],\nfunction(err, results){\n    async.series([\n        function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n        },\n        function(callback){\n            // once the file is written let\'s email a link to it...\n        }\n    ]);\n});\n```\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. It\'s also possible to\n\'peek\' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run.\n\n__Example__\n\n```js\nvar iterator = async.iterator([\n    function(){ sys.p(\'one\'); },\n    function(){ sys.p(\'two\'); },\n    function(){ sys.p(\'three\'); }\n]);\n\nnode> var iterator2 = iterator();\n\'one\'\nnode> var iterator3 = iterator2();\n\'two\'\nnode> iterator3();\n\'three\'\nnode> var nextfn = iterator2.next();\nnode> nextfn();\n\'three\'\n```\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n```js\n// using apply\n\nasync.parallel([\n    async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n    async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n]);\n\n\n// the same process without using apply\n\nasync.parallel([\n    function(callback){\n        fs.writeFile(\'testfile1\', \'test1\', callback);\n    },\n    function(callback){\n        fs.writeFile(\'testfile2\', \'test2\', callback);\n    }\n]);\n```\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n```js\nnode> var fn = async.apply(sys.puts, \'one\');\nnode> fn(\'two\', \'three\');\none\ntwo\nthree\n```\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setImmediate(callback)\nif available, otherwise setTimeout(callback, 0), which means other higher priority\nevents may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n```js\nvar call_order = [];\nasync.nextTick(function(){\n    call_order.push(\'two\');\n    // call_order now equals [\'one\',\'two\']\n});\ncall_order.push(\'one\')\n```\n\n<a name="times" />\n### times(n, callback)\n\nCalls the callback n times and accumulates results in the same manner\nyou would use with async.map.\n\n__Arguments__\n\n* n - The number of times to run the function.\n* callback - The function to call n times.\n\n__Example__\n\n```js\n// Pretend this is some complicated async factory\nvar createUser = function(id, callback) {\n  callback(null, {\n    id: \'user\' + id\n  })\n}\n// generate 5 users\nasync.times(5, function(n, next){\n    createUser(n, function(err, user) {\n      next(err, user)\n    })\n}, function(err, users) {\n  // we should now have 5 users\n});\n```\n\n<a name="timesSeries" />\n### timesSeries(n, callback)\n\nThe same as times only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\nThe cache of results is exposed as the `memo` property of the function returned\nby `memoize`.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n```js\nvar slow_fn = function (name, callback) {\n    // do something\n    callback(null, result);\n};\nvar fn = async.memoize(slow_fn);\n\n// fn can now be used as if it were slow_fn\nfn(\'some name\', function () {\n    // callback\n});\n```\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, \'hello \' + name);\n    }, 1000);\n};\n```\n```js\nnode> async.log(hello, \'world\');\n\'hello world\'\n```\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, {hello: name});\n    }, 1000);\n};\n```\n```js\nnode> async.dir(hello, \'world\');\n{hello: \'world\'}\n```\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n',
879 silly resolved     readmeFilename: 'README.md',
879 silly resolved     _id: 'async@0.2.10',
879 silly resolved     _from: 'async@~0.2.6' },
879 silly resolved   { name: 'source-map',
879 silly resolved     description: 'Generates and consumes source maps',
879 silly resolved     version: '0.1.40',
879 silly resolved     homepage: 'https://github.com/mozilla/source-map',
879 silly resolved     author: { name: 'Nick Fitzgerald', email: 'nfitzgerald@mozilla.com' },
879 silly resolved     contributors:
879 silly resolved      [ [Object],
879 silly resolved        [Object],
879 silly resolved        [Object],
879 silly resolved        [Object],
879 silly resolved        [Object],
879 silly resolved        [Object],
879 silly resolved        [Object],
879 silly resolved        [Object],
879 silly resolved        [Object],
879 silly resolved        [Object],
879 silly resolved        [Object],
879 silly resolved        [Object],
879 silly resolved        [Object],
879 silly resolved        [Object],
879 silly resolved        [Object],
879 silly resolved        [Object],
879 silly resolved        [Object],
879 silly resolved        [Object],
879 silly resolved        [Object],
879 silly resolved        [Object],
879 silly resolved        [Object],
879 silly resolved        [Object],
879 silly resolved        [Object],
879 silly resolved        [Object],
879 silly resolved        [Object] ],
879 silly resolved     repository: { type: 'git', url: 'http://github.com/mozilla/source-map.git' },
879 silly resolved     directories: { lib: './lib' },
879 silly resolved     main: './lib/source-map.js',
879 silly resolved     engines: { node: '>=0.8.0' },
879 silly resolved     licenses: [ [Object] ],
879 silly resolved     dependencies: { amdefine: '>=0.0.4' },
879 silly resolved     devDependencies: { dryice: '>=0.4.8' },
879 silly resolved     scripts:
879 silly resolved      { test: 'node test/run-tests.js',
879 silly resolved        build: 'node Makefile.dryice.js' },
879 silly resolved     readme: '# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\nThis library is written in the Asynchronous Module Definition format, and works\nin the following environments:\n\n* Modern Browsers supporting ECMAScript 5 (either after the build, or with an\n  AMD loader such as RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Node\n\n    $ npm install source-map\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js\n\nThis should spew a bunch of stuff to stdout, and create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox source.\n\n## Examples\n\n### Consuming a source map\n\n    var rawSourceMap = {\n      version: 3,\n      file: \'min.js\',\n      names: [\'bar\', \'baz\', \'n\'],\n      sources: [\'one.js\', \'two.js\'],\n      sourceRoot: \'http://example.com/www/js/\',\n      mappings: \'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA\'\n    };\n\n    var smc = new SourceMapConsumer(rawSourceMap);\n\n    console.log(smc.sources);\n    // [ \'http://example.com/www/js/one.js\',\n    //   \'http://example.com/www/js/two.js\' ]\n\n    console.log(smc.originalPositionFor({\n      line: 2,\n      column: 28\n    }));\n    // { source: \'http://example.com/www/js/two.js\',\n    //   line: 2,\n    //   column: 10,\n    //   name: \'n\' }\n\n    console.log(smc.generatedPositionFor({\n      source: \'http://example.com/www/js/two.js\',\n      line: 2,\n      column: 10\n    }));\n    // { line: 2, column: 28 }\n\n    smc.eachMapping(function (m) {\n      // ...\n    });\n\n### Generating a source map\n\nIn depth guide:\n[**Compiling to JavaScript, and Debugging with Source Maps**](https://hacks.mozilla.org/2013/05/compiling-to-javascript-and-debugging-with-source-maps/)\n\n#### With SourceNode (high level API)\n\n    function compile(ast) {\n      switch (ast.type) {\n      case \'BinaryExpression\':\n        return new SourceNode(\n          ast.location.line,\n          ast.location.column,\n          ast.location.source,\n          [compile(ast.left), " + ", compile(ast.right)]\n        );\n      case \'Literal\':\n        return new SourceNode(\n          ast.location.line,\n          ast.location.column,\n          ast.location.source,\n          String(ast.value)\n        );\n      // ...\n      default:\n        throw new Error("Bad AST");\n      }\n    }\n\n    var ast = parse("40 + 2", "add.js");\n    console.log(compile(ast).toStringWithSourceMap({\n      file: \'add.js\'\n    }));\n    // { code: \'40 + 2\',\n    //   map: [object SourceMapGenerator] }\n\n#### With SourceMapGenerator (low level API)\n\n    var map = new SourceMapGenerator({\n      file: "source-mapped.js"\n    });\n\n    map.addMapping({\n      generated: {\n        line: 10,\n        column: 35\n      },\n      source: "foo.js",\n      original: {\n        line: 33,\n        column: 2\n      },\n      name: "christopher"\n    });\n\n    console.log(map.toString());\n    // \'{"version":3,"file":"source-mapped.js","sources":["foo.js"],"names":["christopher"],"mappings":";;;;;;;;;mCAgCEA"}\'\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require(\'source-map\');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import(\'resource:///modules/devtools/SourceMap.jsm\', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`\'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: Optional. The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource\'s line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. Mappings have the\n  form `{ source, generatedLine, generatedColumn, originalLine, originalColumn,\n  name }`\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file\'s line/column order or the\n  original\'s source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator([startOfSourceMap])\n\nYou may pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: A root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource\'s line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile[, sourceMapPath]])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used, if it exists.\n  Otherwise an error will be thrown.\n\n* `sourceMapPath`: Optional. The dirname of the path to the SourceMap\n  to be applied. If relative, it is relative to the SourceMap.\n\n  This parameter is needed when the two SourceMaps aren\'t in the same\n  directory, and the SourceMap to be applied contains relative source\n  paths. If so, those relative source paths need to be rewritten\n  relative to the SourceMap.\n\n  If omitted, it is assumed that both SourceMaps are in the same directory,\n  thus not needing any rewriting. (Supplying `\'.\'` has the same effect.)\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode([line, column, source[, chunk[, name]]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn\'t associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn\'t associated with an original column.\n\n* `source`: The original source\'s filename; null if no filename is provided.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer[, relativePath])\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n* `relativePath` The optional path that relative sources in `sourceMapConsumer`\n  should be relative to.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source\'s line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node\'s children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n#### SourceNode.prototype.toStringWithSourceMap([startOfSourceMap])\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with "test", for example\n\n    exports["test doing the foo bar"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node\'s assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox\'s test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n',
879 silly resolved     readmeFilename: 'README.md',
879 silly resolved     bugs: { url: 'https://github.com/mozilla/source-map/issues' },
879 silly resolved     _id: 'source-map@0.1.40',
879 silly resolved     _from: 'source-map@~0.1.7' } ]
880 info install async@0.2.10 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js
881 info install source-map@0.1.40 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js
882 info installOne async@0.2.10
883 info installOne source-map@0.1.40
884 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/async unbuild
885 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map unbuild
886 verbose tar unpack /Users/ironweber/.npm/async/0.2.10/package.tgz
887 silly lockFile ad983bea-les-uglify-js-node-modules-async tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/async
888 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/async /Users/ironweber/.npm/ad983bea-les-uglify-js-node-modules-async.lock
889 silly lockFile a909cc69-ber-npm-async-0-2-10-package-tgz tar:///Users/ironweber/.npm/async/0.2.10/package.tgz
890 verbose lock tar:///Users/ironweber/.npm/async/0.2.10/package.tgz /Users/ironweber/.npm/a909cc69-ber-npm-async-0-2-10-package-tgz.lock
891 verbose tar unpack /Users/ironweber/.npm/source-map/0.1.40/package.tgz
892 silly lockFile 3f94c749-glify-js-node-modules-source-map tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map
893 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map /Users/ironweber/.npm/3f94c749-glify-js-node-modules-source-map.lock
894 silly lockFile 1a723c55-pm-source-map-0-1-40-package-tgz tar:///Users/ironweber/.npm/source-map/0.1.40/package.tgz
895 verbose lock tar:///Users/ironweber/.npm/source-map/0.1.40/package.tgz /Users/ironweber/.npm/1a723c55-pm-source-map-0-1-40-package-tgz.lock
896 silly gunzTarPerm modes [ '755', '644' ]
897 silly gunzTarPerm modes [ '755', '644' ]
898 silly gunzTarPerm extractEntry dist/handlebars.runtime.amd.js
899 silly gunzTarPerm extractEntry dist/handlebars.runtime.amd.min.js
900 silly gunzTarPerm extractEntry package.json
901 silly gunzTarPerm extractEntry package.json
902 silly gunzTarPerm extractEntry README.md
903 silly gunzTarPerm extractEntry LICENSE
904 silly gunzTarPerm extractEntry component.json
905 silly gunzTarPerm extractEntry lib/async.js
906 silly gunzTarPerm extractEntry .npmignore
907 silly gunzTarPerm extractEntry README.md
908 silly gunzTarPerm extractEntry LICENSE
909 silly gunzTarPerm extractEntry Makefile.dryice.js
910 silly gunzTarPerm extractEntry .travis.yml
911 silly gunzTarPerm extractEntry CHANGELOG.md
912 silly gunzTarPerm extractEntry build/assert-shim.js
913 silly gunzTarPerm extractEntry build/mini-require.js
914 silly gunzTarPerm extractEntry build/suffix-browser.js
915 silly gunzTarPerm extractEntry build/test-prefix.js
916 silly gunzTarPerm extractEntry build/test-suffix.js
917 silly gunzTarPerm extractEntry build/prefix-source-map.jsm
918 silly gunzTarPerm extractEntry build/prefix-utils.jsm
919 silly gunzTarPerm extractEntry build/suffix-source-map.jsm
920 silly gunzTarPerm extractEntry build/suffix-utils.jsm
921 silly gunzTarPerm extractEntry dist/handlebars.runtime.js
922 silly gunzTarPerm extractEntry dist/handlebars.runtime.min.js
923 silly gunzTarPerm extractEntry lib/source-map.js
924 silly gunzTarPerm extractEntry lib/source-map/array-set.js
925 silly gunzTarPerm extractEntry lib/source-map/base64-vlq.js
926 silly gunzTarPerm extractEntry lib/source-map/base64.js
927 silly gunzTarPerm extractEntry lib/source-map/binary-search.js
928 silly gunzTarPerm extractEntry lib/source-map/source-map-consumer.js
929 silly gunzTarPerm extractEntry lib/source-map/source-map-generator.js
930 silly gunzTarPerm extractEntry lib/source-map/source-node.js
931 silly gunzTarPerm extractEntry lib/source-map/util.js
932 silly gunzTarPerm extractEntry test/run-tests.js
933 silly gunzTarPerm extractEntry dist/amd/handlebars.js
934 silly gunzTarPerm extractEntry dist/amd/handlebars.runtime.js
935 silly gunzTarPerm extractEntry test/source-map/test-api.js
936 silly gunzTarPerm extractEntry test/source-map/test-base64-vlq.js
937 silly lockFile ad983bea-les-uglify-js-node-modules-async tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/async
938 silly lockFile ad983bea-les-uglify-js-node-modules-async tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/async
939 silly gunzTarPerm extractEntry test/source-map/test-base64.js
940 silly gunzTarPerm extractEntry test/source-map/test-binary-search.js
941 silly lockFile a909cc69-ber-npm-async-0-2-10-package-tgz tar:///Users/ironweber/.npm/async/0.2.10/package.tgz
942 silly lockFile a909cc69-ber-npm-async-0-2-10-package-tgz tar:///Users/ironweber/.npm/async/0.2.10/package.tgz
943 info preinstall async@0.2.10
944 verbose readDependencies using package.json deps
945 silly gunzTarPerm extractEntry test/source-map/test-array-set.js
946 silly gunzTarPerm extractEntry test/source-map/test-source-map-consumer.js
947 verbose readDependencies using package.json deps
948 silly resolved []
949 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/async
950 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/async
951 verbose linkStuff [ true,
951 verbose linkStuff   '/usr/local/lib/node_modules',
951 verbose linkStuff   false,
951 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules' ]
952 info linkStuff async@0.2.10
953 verbose linkBins async@0.2.10
954 verbose linkMans async@0.2.10
955 verbose rebuildBundles async@0.2.10
956 info install async@0.2.10
957 info postinstall async@0.2.10
958 silly gunzTarPerm extractEntry test/source-map/test-source-map-generator.js
959 silly gunzTarPerm extractEntry test/source-map/test-source-node.js
960 silly gunzTarPerm extractEntry test/source-map/test-util.js
961 silly gunzTarPerm extractEntry test/source-map/util.js
962 silly gunzTarPerm extractEntry test/source-map/test-dog-fooding.js
963 silly gunzTarPerm extractEntry dist/amd/precompiler.js
964 silly gunzTarPerm extractEntry dist/amd/handlebars/base.js
965 silly gunzTarPerm extractEntry dist/amd/handlebars/exception.js
966 silly gunzTarPerm extractEntry dist/amd/handlebars/runtime.js
967 silly gunzTarPerm extractEntry dist/amd/handlebars/safe-string.js
968 silly gunzTarPerm extractEntry dist/amd/handlebars/utils.js
969 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/ast.js
970 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/base.js
971 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/compiler.js
972 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/helpers.js
973 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/javascript-compiler.js
974 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/parser.js
975 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/printer.js
976 silly gunzTarPerm extractEntry dist/amd/handlebars/compiler/visitor.js
977 silly gunzTarPerm extractEntry dist/cjs/handlebars.js
978 silly gunzTarPerm extractEntry dist/cjs/handlebars.runtime.js
979 silly lockFile 3f94c749-glify-js-node-modules-source-map tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map
980 silly lockFile 3f94c749-glify-js-node-modules-source-map tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map
981 silly lockFile 1a723c55-pm-source-map-0-1-40-package-tgz tar:///Users/ironweber/.npm/source-map/0.1.40/package.tgz
982 silly lockFile 1a723c55-pm-source-map-0-1-40-package-tgz tar:///Users/ironweber/.npm/source-map/0.1.40/package.tgz
983 info preinstall source-map@0.1.40
984 verbose readDependencies using package.json deps
985 verbose readDependencies using package.json deps
986 silly gunzTarPerm extractEntry dist/cjs/precompiler.js
987 silly gunzTarPerm extractEntry dist/cjs/handlebars/base.js
988 verbose cache add [ 'amdefine@>=0.0.4', null ]
989 verbose cache add name=undefined spec="amdefine@>=0.0.4" args=["amdefine@>=0.0.4",null]
990 verbose parsed url { protocol: null,
990 verbose parsed url   slashes: null,
990 verbose parsed url   auth: null,
990 verbose parsed url   host: null,
990 verbose parsed url   port: null,
990 verbose parsed url   hostname: null,
990 verbose parsed url   hash: null,
990 verbose parsed url   search: null,
990 verbose parsed url   query: null,
990 verbose parsed url   pathname: 'amdefine@%3E=0.0.4',
990 verbose parsed url   path: 'amdefine@%3E=0.0.4',
990 verbose parsed url   href: 'amdefine@%3E=0.0.4' }
991 verbose cache add name="amdefine" spec=">=0.0.4" args=["amdefine",">=0.0.4"]
992 verbose parsed url { protocol: null,
992 verbose parsed url   slashes: null,
992 verbose parsed url   auth: null,
992 verbose parsed url   host: null,
992 verbose parsed url   port: null,
992 verbose parsed url   hostname: null,
992 verbose parsed url   hash: null,
992 verbose parsed url   search: null,
992 verbose parsed url   query: null,
992 verbose parsed url   pathname: '%3E=0.0.4',
992 verbose parsed url   path: '%3E=0.0.4',
992 verbose parsed url   href: '%3E=0.0.4' }
993 verbose addNamed [ 'amdefine', '>=0.0.4' ]
994 verbose addNamed [ null, '>=0.0.4' ]
995 silly lockFile 165d2d7b-amdefine-0-0-4 amdefine@>=0.0.4
996 verbose lock amdefine@>=0.0.4 /Users/ironweber/.npm/165d2d7b-amdefine-0-0-4.lock
997 silly addNameRange { name: 'amdefine', range: '>=0.0.4', hasData: false }
998 verbose url raw amdefine
999 verbose url resolving [ 'https://registry.npmjs.org/', './amdefine' ]
1000 verbose url resolved https://registry.npmjs.org/amdefine
1001 info trying registry request attempt 1 at 16:57:14
1002 verbose etag "8HKYVFMA74F1ZOF5PI07S4URB"
1003 http GET https://registry.npmjs.org/amdefine
1004 silly gunzTarPerm extractEntry dist/cjs/handlebars/exception.js
1005 silly gunzTarPerm extractEntry dist/cjs/handlebars/runtime.js
1006 silly gunzTarPerm extractEntry dist/cjs/handlebars/safe-string.js
1007 silly gunzTarPerm extractEntry dist/cjs/handlebars/utils.js
1008 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/ast.js
1009 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/base.js
1010 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/compiler.js
1011 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/helpers.js
1012 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/javascript-compiler.js
1013 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/parser.js
1014 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/printer.js
1015 silly gunzTarPerm extractEntry dist/cjs/handlebars/compiler/visitor.js
1016 silly gunzTarPerm extractEntry lib/handlebars.js
1017 silly gunzTarPerm extractEntry lib/handlebars.runtime.js
1018 silly gunzTarPerm extractEntry lib/index.js
1019 silly gunzTarPerm extractEntry lib/precompiler.js
1020 silly gunzTarPerm extractEntry lib/handlebars/base.js
1021 silly gunzTarPerm extractEntry lib/handlebars/exception.js
1022 silly gunzTarPerm extractEntry lib/handlebars/runtime.js
1023 silly gunzTarPerm extractEntry lib/handlebars/safe-string.js
1024 silly gunzTarPerm extractEntry lib/handlebars/utils.js
1025 silly gunzTarPerm extractEntry lib/handlebars/compiler/ast.js
1026 silly gunzTarPerm extractEntry lib/handlebars/compiler/base.js
1027 silly gunzTarPerm extractEntry lib/handlebars/compiler/compiler.js
1028 silly gunzTarPerm extractEntry lib/handlebars/compiler/helpers.js
1029 silly gunzTarPerm extractEntry lib/handlebars/compiler/javascript-compiler.js
1030 silly gunzTarPerm extractEntry lib/handlebars/compiler/parser.js
1031 silly gunzTarPerm extractEntry lib/handlebars/compiler/printer.js
1032 silly gunzTarPerm extractEntry lib/handlebars/compiler/visitor.js
1033 silly gunzTarPerm extractEntry CONTRIBUTING.md
1034 silly gunzTarPerm extractEntry print-script
1035 silly gunzTarPerm extractEntry release-notes.md
1036 silly gunzTarPerm extractEntry bin/handlebars
1037 http 304 https://registry.npmjs.org/amdefine
1038 silly registry.get cb [ 304,
1038 silly registry.get   { date: 'Sat, 04 Oct 2014 23:57:15 GMT',
1038 silly registry.get     server: 'Apache',
1038 silly registry.get     via: '1.1 varnish',
1038 silly registry.get     'last-modified': 'Sat, 04 Oct 2014 23:57:15 GMT',
1038 silly registry.get     'cache-control': 'max-age=60',
1038 silly registry.get     etag: '"8HKYVFMA74F1ZOF5PI07S4URB"',
1038 silly registry.get     'x-served-by': 'cache-sjc3131-SJC',
1038 silly registry.get     'x-cache': 'HIT',
1038 silly registry.get     'x-cache-hits': '1',
1038 silly registry.get     'x-timer': 'S1412467035.072356,VS0,VE0',
1038 silly registry.get     vary: 'Accept',
1038 silly registry.get     'content-length': '0',
1038 silly registry.get     'keep-alive': 'timeout=10, max=50',
1038 silly registry.get     connection: 'Keep-Alive' } ]
1039 verbose etag amdefine from cache
1040 silly addNameRange number 2 { name: 'amdefine', range: '>=0.0.4', hasData: true }
1041 silly addNameRange versions [ 'amdefine',
1041 silly addNameRange   [ '0.0.1',
1041 silly addNameRange     '0.0.2',
1041 silly addNameRange     '0.0.3',
1041 silly addNameRange     '0.0.4',
1041 silly addNameRange     '0.0.5',
1041 silly addNameRange     '0.0.6',
1041 silly addNameRange     '0.0.7',
1041 silly addNameRange     '0.0.8',
1041 silly addNameRange     '0.1.0' ] ]
1042 verbose addNamed [ 'amdefine', '0.1.0' ]
1043 verbose addNamed [ '0.1.0', '0.1.0' ]
1044 silly lockFile 3c57e17c-amdefine-0-1-0 amdefine@0.1.0
1045 verbose lock amdefine@0.1.0 /Users/ironweber/.npm/3c57e17c-amdefine-0-1-0.lock
1046 silly lockFile 3c57e17c-amdefine-0-1-0 amdefine@0.1.0
1047 silly lockFile 3c57e17c-amdefine-0-1-0 amdefine@0.1.0
1048 silly lockFile 165d2d7b-amdefine-0-0-4 amdefine@>=0.0.4
1049 silly lockFile 165d2d7b-amdefine-0-0-4 amdefine@>=0.0.4
1050 silly resolved [ { name: 'amdefine',
1050 silly resolved     description: 'Provide AMD\'s define() API for declaring modules in the AMD format',
1050 silly resolved     version: '0.1.0',
1050 silly resolved     homepage: 'http://github.com/jrburke/amdefine',
1050 silly resolved     author:
1050 silly resolved      { name: 'James Burke',
1050 silly resolved        email: 'jrburke@gmail.com',
1050 silly resolved        url: 'http://github.com/jrburke' },
1050 silly resolved     licenses: [ [Object], [Object] ],
1050 silly resolved     repository: { type: 'git', url: 'https://github.com/jrburke/amdefine.git' },
1050 silly resolved     main: './amdefine.js',
1050 silly resolved     engines: { node: '>=0.4.2' },
1050 silly resolved     readme: '# amdefine\n\nA module that can be used to implement AMD\'s define() in Node. This allows you\nto code to the AMD API and have the module work in node programs without\nrequiring those other programs to use AMD.\n\n## Usage\n\n**1)** Update your package.json to indicate amdefine as a dependency:\n\n```javascript\n    "dependencies": {\n        "amdefine": ">=0.1.0"\n    }\n```\n\nThen run `npm install` to get amdefine into your project.\n\n**2)** At the top of each module that uses define(), place this code:\n\n```javascript\nif (typeof define !== \'function\') { var define = require(\'amdefine\')(module) }\n```\n\n**Only use these snippets** when loading amdefine. If you preserve the basic structure,\nwith the braces, it will be stripped out when using the [RequireJS optimizer](#optimizer).\n\nYou can add spaces, line breaks and even require amdefine with a local path, but\nkeep the rest of the structure to get the stripping behavior.\n\nAs you may know, because `if` statements in JavaScript don\'t have their own scope, the var\ndeclaration in the above snippet is made whether the `if` expression is truthy or not. If\nRequireJS is loaded then the declaration is superfluous because `define` is already already\ndeclared in the same scope in RequireJS. Fortunately JavaScript handles multiple `var`\ndeclarations of the same variable in the same scope gracefully.\n\nIf you want to deliver amdefine.js with your code rather than specifying it as a dependency\nwith npm, then just download the latest release and refer to it using a relative path:\n\n[Latest Version](https://github.com/jrburke/amdefine/raw/latest/amdefine.js)\n\n### amdefine/intercept\n\nConsider this very experimental.\n\nInstead of pasting the piece of text for the amdefine setup of a `define`\nvariable in each module you create or consume, you can use `amdefine/intercept`\ninstead. It will automatically insert the above snippet in each .js file loaded\nby Node.\n\n**Warning**: you should only use this if you are creating an application that\nis consuming AMD style defined()\'d modules that are distributed via npm and want\nto run that code in Node.\n\nFor library code where you are not sure if it will be used by others in Node or\nin the browser, then explicitly depending on amdefine and placing the code\nsnippet above is suggested path, instead of using `amdefine/intercept`. The\nintercept module affects all .js files loaded in the Node app, and it is\ninconsiderate to modify global state like that unless you are also controlling\nthe top level app.\n\n#### Why distribute AMD-style nodes via npm?\n\nnpm has a lot of weaknesses for front-end use (installed layout is not great,\nshould have better support for the `baseUrl + moduleID + \'.js\' style of loading,\nsingle file JS installs), but some people want a JS package manager and are\nwilling to live with those constraints. If that is you, but still want to author\nin AMD style modules to get dynamic require([]), better direct source usage and\npowerful loader plugin support in the browser, then this tool can help.\n\n#### amdefine/intercept usage\n\nJust require it in your top level app module (for example index.js, server.js):\n\n```javascript\nrequire(\'amdefine/intercept\');\n```\n\nThe module does not return a value, so no need to assign the result to a local\nvariable.\n\nThen just require() code as you normally would with Node\'s require(). Any .js\nloaded after the intercept require will have the amdefine check injected in\nthe .js source as it is loaded. It does not modify the source on disk, just\nprepends some content to the text of the module as it is loaded by Node.\n\n#### How amdefine/intercept works\n\nIt overrides the `Module._extensions[\'.js\']` in Node to automatically prepend\nthe amdefine snippet above. So, it will affect any .js file loaded by your\napp.\n\n## define() usage\n\nIt is best if you use the anonymous forms of define() in your module:\n\n```javascript\ndefine(function (require) {\n    var dependency = require(\'dependency\');\n});\n```\n\nor\n\n```javascript\ndefine([\'dependency\'], function (dependency) {\n\n});\n```\n\n## RequireJS optimizer integration. <a name="optimizer"></name>\n\nVersion 1.0.3 of the [RequireJS optimizer](http://requirejs.org/docs/optimization.html)\nwill have support for stripping the `if (typeof define !== \'function\')` check\nmentioned above, so you can include this snippet for code that runs in the\nbrowser, but avoid taking the cost of the if() statement once the code is\noptimized for deployment.\n\n## Node 0.4 Support\n\nIf you want to support Node 0.4, then add `require` as the second parameter to amdefine:\n\n```javascript\n//Only if you want Node 0.4. If using 0.5 or later, use the above snippet.\nif (typeof define !== \'function\') { var define = require(\'amdefine\')(module, require) }\n```\n\n## Limitations\n\n### Synchronous vs Asynchronous\n\namdefine creates a define() function that is callable by your code. It will\nexecute and trace dependencies and call the factory function *synchronously*,\nto keep the behavior in line with Node\'s synchronous dependency tracing.\n\nThe exception: calling AMD\'s callback-style require() from inside a factory\nfunction. The require callback is called on process.nextTick():\n\n```javascript\ndefine(function (require) {\n    require([\'a\'], function(a) {\n        //\'a\' is loaded synchronously, but\n        //this callback is called on process.nextTick().\n    });\n});\n```\n\n### Loader Plugins\n\nLoader plugins are supported as long as they call their load() callbacks\nsynchronously. So ones that do network requests will not work. However plugins\nlike [text](http://requirejs.org/docs/api.html#text) can load text files locally.\n\nThe plugin API\'s `load.fromText()` is **not supported** in amdefine, so this means\ntranspiler plugins like the [CoffeeScript loader plugin](https://github.com/jrburke/require-cs)\nwill not work. This may be fixable, but it is a bit complex, and I do not have\nenough node-fu to figure it out yet. See the source for amdefine.js if you want\nto get an idea of the issues involved.\n\n## Tests\n\nTo run the tests, cd to **tests** and run:\n\n```\nnode all.js\nnode all-intercept.js\n```\n\n## License\n\nNew BSD and MIT. Check the LICENSE file for all the details.\n',
1050 silly resolved     readmeFilename: 'README.md',
1050 silly resolved     bugs: { url: 'https://github.com/jrburke/amdefine/issues' },
1050 silly resolved     _id: 'amdefine@0.1.0',
1050 silly resolved     _from: 'amdefine@>=0.0.4' } ]
1051 info install amdefine@0.1.0 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map
1052 info installOne amdefine@0.1.0
1053 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine unbuild
1054 verbose tar unpack /Users/ironweber/.npm/amdefine/0.1.0/package.tgz
1055 silly lockFile fbf3b5bd-source-map-node-modules-amdefine tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine
1056 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine /Users/ironweber/.npm/fbf3b5bd-source-map-node-modules-amdefine.lock
1057 silly lockFile 05bc72b0-r-npm-amdefine-0-1-0-package-tgz tar:///Users/ironweber/.npm/amdefine/0.1.0/package.tgz
1058 verbose lock tar:///Users/ironweber/.npm/amdefine/0.1.0/package.tgz /Users/ironweber/.npm/05bc72b0-r-npm-amdefine-0-1-0-package-tgz.lock
1059 silly gunzTarPerm modes [ '755', '644' ]
1060 silly gunzTarPerm extractEntry package.json
1061 silly gunzTarPerm extractEntry README.md
1062 silly gunzTarPerm extractEntry LICENSE
1063 silly gunzTarPerm extractEntry amdefine.js
1064 silly gunzTarPerm extractEntry intercept.js
1065 silly lockFile fbf3b5bd-source-map-node-modules-amdefine tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine
1066 silly lockFile fbf3b5bd-source-map-node-modules-amdefine tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine
1067 silly lockFile 05bc72b0-r-npm-amdefine-0-1-0-package-tgz tar:///Users/ironweber/.npm/amdefine/0.1.0/package.tgz
1068 silly lockFile 05bc72b0-r-npm-amdefine-0-1-0-package-tgz tar:///Users/ironweber/.npm/amdefine/0.1.0/package.tgz
1069 info preinstall amdefine@0.1.0
1070 verbose readDependencies using package.json deps
1071 verbose readDependencies using package.json deps
1072 silly resolved []
1073 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine
1074 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine
1075 verbose linkStuff [ true,
1075 verbose linkStuff   '/usr/local/lib/node_modules',
1075 verbose linkStuff   false,
1075 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map/node_modules' ]
1076 info linkStuff amdefine@0.1.0
1077 verbose linkBins amdefine@0.1.0
1078 verbose linkMans amdefine@0.1.0
1079 verbose rebuildBundles amdefine@0.1.0
1080 info install amdefine@0.1.0
1081 info postinstall amdefine@0.1.0
1082 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map
1083 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map
1084 verbose linkStuff [ true,
1084 verbose linkStuff   '/usr/local/lib/node_modules',
1084 verbose linkStuff   false,
1084 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules' ]
1085 info linkStuff source-map@0.1.40
1086 verbose linkBins source-map@0.1.40
1087 verbose linkMans source-map@0.1.40
1088 verbose rebuildBundles source-map@0.1.40
1089 verbose rebuildBundles [ 'amdefine' ]
1090 info install source-map@0.1.40
1091 info postinstall source-map@0.1.40
1092 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js
1093 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js
1094 verbose linkStuff [ true,
1094 verbose linkStuff   '/usr/local/lib/node_modules',
1094 verbose linkStuff   false,
1094 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules' ]
1095 info linkStuff uglify-js@2.3.6
1096 verbose linkBins uglify-js@2.3.6
1097 verbose link bins [ { uglifyjs: 'bin/uglifyjs' },
1097 verbose link bins   '/usr/local/lib/node_modules/handlebars/node_modules/.bin',
1097 verbose link bins   false ]
1098 verbose linkMans uglify-js@2.3.6
1099 verbose rebuildBundles uglify-js@2.3.6
1100 verbose rebuildBundles [ 'async', 'source-map' ]
1101 info install uglify-js@2.3.6
1102 info postinstall uglify-js@2.3.6
1103 verbose about to build /usr/local/lib/node_modules/handlebars
1104 info build /usr/local/lib/node_modules/handlebars
1105 verbose linkStuff [ true,
1105 verbose linkStuff   '/usr/local/lib/node_modules',
1105 verbose linkStuff   true,
1105 verbose linkStuff   '/usr/local/lib/node_modules' ]
1106 info linkStuff handlebars@2.0.0
1107 verbose linkBins handlebars@2.0.0
1108 verbose link bins [ { handlebars: 'bin/handlebars' }, '/usr/local/bin', true ]
1109 verbose linkMans handlebars@2.0.0
1110 verbose rebuildBundles handlebars@2.0.0
1111 verbose rebuildBundles [ '.bin', 'optimist', 'uglify-js' ]
1112 info install handlebars@2.0.0
1113 info postinstall handlebars@2.0.0
1114 error peerinvalid The package yo does not satisfy its siblings' peerDependencies requirements!
1114 error peerinvalid Peer generator-assemble-handlebars@0.2.9 wants yo@>=1.0.0
1114 error peerinvalid Peer generator-mocha@0.1.6 wants yo@>=1.0.0
1114 error peerinvalid Peer generator-webapp@0.5.0 wants yo@>=1.2.0
1115 error System Darwin 13.4.0
1116 error command "/usr/local/Cellar/node/0.10.17/bin/node" "/usr/local/bin/npm" "update" "handlebars" "-g"
1117 error cwd /Users/ironweber/fandor
1118 error node -v v0.10.17
1119 error npm -v 1.3.8
1120 error code EPEERINVALID
1121 verbose exit [ 1, true ]
